{"version":3,"file":"argilo.min.js","sources":["/argilo/src/utility/consts.ts","/argilo/src/utility/constructor.ts","/argilo/src/utility/is.ts","/argilo/src/utility/fn.ts","/argilo/src/utility/reg.ts","/argilo/src/utility/prop/hasOwnProp.ts","/argilo/src/utility/proto/polyfill.ts","/argilo/src/utility/prop/polyfill.ts","/argilo/src/utility/create/polyfill.ts","/argilo/src/utility/collection/Control.ts","/argilo/src/utility/collection/each.ts","/argilo/src/utility/collection/map.ts","/argilo/src/utility/collection/idxOf.ts","/argilo/src/utility/collection/reduce.ts","/argilo/src/utility/collection/obj2arr.ts","/argilo/src/utility/collection/arr2obj.ts","/argilo/src/utility/collection/index.ts","/argilo/src/utility/propPath.ts","/argilo/src/utility/string.ts","/argilo/src/utility/format.ts","/argilo/src/utility/assign.ts","/argilo/src/utility/deepEq.ts","/argilo/src/utility/assert.ts","/argilo/src/utility/List/List.ts","/argilo/src/utility/List/FnList.ts","/argilo/src/utility/nextTick.ts","/argilo/src/utility/Source.ts","/argilo/src/utility/AST/util.ts","/argilo/src/utility/mixin.ts","/argilo/src/utility/AST/Rule.ts","/argilo/src/utility/AST/MatchRule.ts","/argilo/src/utility/AST/CharMatchRule.ts","/argilo/src/utility/AST/RegMatchRule.ts","/argilo/src/utility/AST/StringMatchRule.ts","/argilo/src/utility/AST/MatchContext.ts","/argilo/src/utility/AST/ComplexRule.ts","/argilo/src/utility/AST/AndRule.ts","/argilo/src/utility/AST/OrRule.ts","/argilo/src/utility/AST/api.ts","/argilo/src/observer/Observer.ts","/argilo/src/utility/prop/index.ts"],"sourcesContent":["/**\n *\n * @author Tao Zeng (tao.zeng.zt@qq.com)\n * @module utility\n * @created 2018-11-09 15:23:35\n * @modified 2018-11-09 15:23:35 by Tao Zeng (tao.zeng.zt@qq.com)\n */\n\nexport const CONSTRUCTOR = 'constructor'\n\nexport const PROTOTYPE = 'prototype'\n\nexport const PROTO = '__proto__'\n\nexport const HAS_OWN_PROP = 'hasOwnProperty'\n\nexport const TYPE_BOOL = 'boolean'\n\nexport const TYPE_FN = 'function'\n\nexport const TYPE_NUM = 'number'\n\nexport const TYPE_STRING = 'string'\n\nexport const TYPE_UNDEF = 'undefined'\n\nexport const GLOBAL: any =\n\ttypeof window !== TYPE_UNDEF\n\t\t? window\n\t\t: typeof global !== TYPE_UNDEF\n\t\t? global\n\t\t: typeof self !== TYPE_UNDEF\n\t\t? self\n\t\t: {}\n\nexport interface ObjArray {\n\tlength: number\n}\nexport type IArray = any[] | string | IArguments | ObjArray\n\nexport function EMPTY_FN() {}\n","/**\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 13:57:32 GMT+0800 (China Standard Time)\n * @modified Sat Feb 16 2019 10:53:30 GMT+0800 (China Standard Time)\n */\n\nimport { TYPE_FN, CONSTRUCTOR } from './consts'\n\nexport function getConstructor(o: any) {\n\tlet C = o[CONSTRUCTOR]\n\treturn typeof C === TYPE_FN ? C : Object\n}\n","/**\n * type checker\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 13:57:32 GMT+0800 (China Standard Time)\n * @modified Mon Feb 25 2019 16:59:04 GMT+0800 (China Standard Time)\n */\n\nimport { CONSTRUCTOR, GLOBAL, TYPE_BOOL, TYPE_FN, TYPE_NUM, TYPE_STRING, TYPE_UNDEF } from './consts'\nimport { getConstructor } from './constructor'\n\n/**\n * is equals\n * > o1 === o2 || NaN === NaN\n */\nexport function eq(o1: any, o2: any): boolean {\n\treturn o1 === o2 || (o1 !== o1 && o2 !== o2)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                    primitive type                                    *\n *                                                                                      */\n//========================================================================================\n\n/**\n * is null\n */\nexport function isNull(o: any): boolean {\n\treturn o === null\n}\n\n/**\n * is undefined\n */\nexport function isUndef(o: any): boolean {\n\treturn o === undefined\n}\n\n/**\n * is null or undefined\n */\nexport function isNil(o: any): boolean {\n\treturn o === null || o === undefined\n}\n\n/**\n * is boolean\n */\nexport const isBool: (o: any) => boolean = mkIsPrimitive(TYPE_BOOL)\n\n/**\n * is a number\n */\nexport const isNum: (o: any) => boolean = mkIsPrimitive(TYPE_NUM)\n\n/**\n * is a string\n */\nexport const isStr: (o: any) => boolean = mkIsPrimitive(TYPE_STRING)\n\n/**\n * is a function\n */\nexport const isFn: (o: any) => boolean = mkIsPrimitive(TYPE_FN)\n\n/**\n * is integer number\n */\nexport function isInt(o: any): boolean {\n\treturn o === 0 || (o ? typeof o === TYPE_NUM && o % 1 === 0 : false)\n}\n\n/**\n * is primitive type\n * - null\n * - undefined\n * - boolean\n * - number\n * - string\n * - function\n */\nexport function isPrimitive(o: any): boolean {\n\tif (o === undefined || o === null) {\n\t\treturn true\n\t}\n\tswitch (typeof o) {\n\t\tcase TYPE_BOOL:\n\t\tcase TYPE_NUM:\n\t\tcase TYPE_STRING:\n\t\tcase TYPE_FN:\n\t\t\treturn true\n\t}\n\treturn false\n}\n\nfunction mkIsPrimitive(type: string): (o: any) => boolean {\n\treturn function is(o: any): boolean {\n\t\treturn typeof o === type\n\t}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                    reference type                                    *\n *                                                                                      */\n//========================================================================================\n\n/**\n * is instanceof\n */\nexport function instOf(obj: any, Cls: Function): boolean {\n\treturn obj !== undefined && obj !== null && obj instanceof Cls\n}\n\n/**\n * is child instance of Type\n */\nexport function is(o: any, Type: Function | Function[]): boolean {\n\tif (o !== undefined && o !== null) {\n\t\tconst C = o[CONSTRUCTOR] || Object\n\t\tif (Type[CONSTRUCTOR] === Array) {\n\t\t\tvar i = Type.length\n\t\t\twhile (i--) {\n\t\t\t\tif (C === (Type as Function[])[i]) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn C === Type\n\t\t}\n\t}\n\treturn false\n}\n\n/**\n * is boolean or Boolean\n */\nexport const isBoolean: (o: any) => boolean = mkIs(Boolean)\n\n/**\n * is number or Number\n */\nexport const isNumber: (o: any) => boolean = mkIs(Number)\n\n/**\n * is string or String\n */\nexport const isString: (o: any) => boolean = mkIs(String)\n\n/**\n * is Date\n */\nexport const isDate: (o: any) => boolean = mkIs(Date)\n\n/**\n * is RegExp\n */\nexport const isReg: (o: any) => boolean = mkIs(RegExp)\n\n/**\n * is Array\n */\nexport const isArray: (o: any) => boolean = Array.isArray || mkIs(Array)\n\n/**\n * is Typed Array\n */\nexport const isTypedArray: (o: any) => boolean = isFn(ArrayBuffer) ? ArrayBuffer.isView : () => false\n\n/**\n * is Array or pseudo-array\n * - Array\n * - String\n * - IArguments\n * - NodeList\n * - HTMLCollection\n * - Typed Array\n * - {length: int, [length-1]: any}\n */\nexport function isArrayLike(o: any): boolean {\n\tif (o && o[CONSTRUCTOR]) {\n\t\tswitch (o[CONSTRUCTOR]) {\n\t\t\tcase Array:\n\t\t\tcase String:\n\t\t\tcase GLOBAL.NodeList:\n\t\t\tcase GLOBAL.HTMLCollection:\n\t\t\tcase GLOBAL.Int8Array:\n\t\t\tcase GLOBAL.Uint8Array:\n\t\t\tcase GLOBAL.Int16Array:\n\t\t\tcase GLOBAL.Uint16Array:\n\t\t\tcase GLOBAL.Int32Array:\n\t\t\tcase GLOBAL.Uint32Array:\n\t\t\tcase GLOBAL.Float32Array:\n\t\t\tcase GLOBAL.Float64Array:\n\t\t\t\treturn true\n\t\t}\n\t\tconst len = o.length\n\t\treturn typeof len === TYPE_NUM && (len === 0 || (len > 0 && len % 1 === 0 && len - 1 in o))\n\t}\n\treturn o === ''\n}\n\n/**\n * is simple Object\n * TODO object may has constructor property\n */\nexport function isObj(o: any): boolean {\n\treturn o !== undefined && o !== null && getConstructor(o) === Object\n}\n\nfunction mkIs(Type: Function): (o: any) => boolean {\n\treturn function is(o: any): boolean {\n\t\treturn o !== undefined && o !== null && o[CONSTRUCTOR] === Type\n\t}\n}\n\nconst blankStrReg = /^\\s*$/\n/**\n * is empty\n * - string: trim(string).length === 0\n * - array: array.length === 0\n * - pseudo-array: pseudo-array.length === 0\n */\nexport function isBlank(o: any): boolean {\n\tif (o) {\n\t\tif (o[CONSTRUCTOR] === String) {\n\t\t\treturn blankStrReg.test(o)\n\t\t}\n\t\treturn o.length === 0\n\t}\n\treturn true\n}\n","/**\n * Function utilities\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 13:57:32 GMT+0800 (China Standard Time)\n * @modified Fri Nov 23 2018 11:18:33 GMT+0800 (China Standard Time)\n */\n\nimport { GLOBAL, PROTOTYPE } from './consts'\nimport { isNil } from './is'\n\n// ========================================================================================\n/*                                                                                      *\n *                                    create function                                   *\n *                                                                                      */\n// ========================================================================================\n\n/**\n * create function by code string\n * @param body\tfunction body\n * @param args\tfunction argument names\n * @param name\tfunction name\n */\nexport function createFn<T extends Function>(body: string, args?: string[], name?: string): T {\n\treturn name\n\t\t? Function(`return function ${name}(${args ? args.join(', ') : ''}){${body}}`)()\n\t\t: applyScope(Function, Function, args && args.length ? args.concat(body) : [body])\n}\n\n// ========================================================================================\n/*                                                                                      *\n *                                    function apply                                    *\n *                                                                                      */\n// ========================================================================================\n\n/**\n * generate apply function\n */\nfunction applyBuilder<T extends Function>(maxArgs: number, scope: any, offset: any): T {\n\tscope = scope ? 'scope' : ''\n\toffset = offset ? 'offset' : ''\n\tconst args = new Array(maxArgs + 1)\n\tconst cases = new Array(maxArgs + 1)\n\tfor (let i = 0; i <= maxArgs; i++) {\n\t\targs[i] = `${i || scope ? ', ' : ''}args[${offset ? `offset${i ? ' + ' + i : ''}` : i}]`\n\t\tcases[i] = `case ${i}: return fn${scope && '.call'}(${scope}${args.slice(0, i).join('')});`\n\t}\n\treturn Function(`return function(fn, ${scope && scope + ', '}args${offset && ', offset, len'}){\nswitch(${offset ? 'len' : 'args.length'}){\n${cases.join('\\n')}\n}\n${offset &&\n\t\t`var arr = new Array(len);\nfor(var i=0; i<len; i++) arr[i] = arr[offset + i];`}\nreturn fn.apply(${scope || 'null'}, ${offset ? 'arr' : 'args'});\n}`)()\n}\n\n/**\n * apply function with scope\n * @param fn\ttarget function\n * @param scope\tscope of function\n * @param args\targuments of function\n */\nexport const applyScope: (fn: Function, scope: any, args: any[] | IArguments) => any = applyBuilder(8, 1, 0)\n\n/**\n * apply function without scope\n * @param fn\t\ttarget function\n * @param args\targuments of function\n */\nexport const applyNoScope: (fn: Function, args: any[] | IArguments) => any = applyBuilder(8, 0, 0)\n\n/**\n * apply function with scope\n * @param fn\t\ttarget function\n * @param scope\t\tscope of function\n * @param args\t\targuments of function\n * @param offset\tstart offset of args\n * @param len\t\targ size from offset\n */\nexport const applyScopeN: (\n\tfn: Function,\n\tscope: any,\n\targs: any[] | IArguments,\n\toffset: number,\n\tlen: number\n) => any = applyBuilder(8, 1, 1)\n\n/**\n * apply function without scope\n * @param fn\t\ttarget function\n * @param args\t\targuments of function\n * @param offset\tstart offset of args\n * @param len\t\targ size from offset\n */\nexport const applyNoScopeN: (fn: Function, args: any[] | IArguments, offset: number, len: number) => any = applyBuilder(\n\t8,\n\t0,\n\t1\n)\n\n/**\n * apply function\n * @param fn\t\ttarget function\n * @param scope\t\tscope of function\n * @param args\t\targuments of function\n */\nexport function apply(fn: Function, scope: any, args: any[] | IArguments): any {\n\tif (scope === undefined || scope === null || scope === GLOBAL) {\n\t\treturn applyNoScope(fn, args || [])\n\t}\n\treturn applyScope(fn, scope, args || [])\n}\n\n/**\n * apply function\n * @param fn\t\ttarget function\n * @param scope\t\tscope of function\n * @param args\t\targuments of function\n * @param offset\tstart offset of args\n * @param len\t\targ size from offset\n */\nexport function applyN(fn: Function, scope: any, args: any[] | IArguments, offset: number, len: number): any {\n\tif (scope === undefined || scope === null || scope === GLOBAL) {\n\t\treturn applyNoScopeN(fn, args, offset, len)\n\t}\n\treturn applyScopeN(fn, scope, args, offset, len)\n}\n\n// ========================================================================================\n/*                                                                                      *\n *                                     function name                                    *\n *                                                                                      */\n// ========================================================================================\n\nconst varGenReg = /\\$\\d+$/\n\n/**\n * get function name\n */\nexport function fnName(fn: Function): string {\n\tconst name: string = (fn as any).name\n\treturn name ? name.replace(varGenReg, '') : 'anonymous'\n}\n\n// ========================================================================================\n/*                                                                                      *\n *                                         bind                                         *\n *                                                                                      */\n// ========================================================================================\n\nlet _bind\nconst funcProto = Function[PROTOTYPE]\nif (funcProto.bind) {\n\t_bind = function bind<T extends Function>(fn: T, scope: any): T {\n\t\tconst args = arguments,\n\t\t\targLen = args.length\n\t\tif (isNil(scope)) {\n\t\t\treturn argLen > 2 ? bindPolyfill(fn, scope, args, 2) : fn\n\t\t}\n\t\treturn applyScopeN(fn.bind, fn, args, 1, argLen - 1)\n\t}\n} else {\n\tfuncProto.bind = function bind(scope) {\n\t\treturn bindPolyfill(this, scope, arguments, 1)\n\t}\n\t_bind = function bind<T extends Function>(fn: T, scope: any): T {\n\t\treturn bindPolyfill(fn, scope, arguments, 2)\n\t}\n}\n\n/**\n * bind scope or arguments on function\n * - return source function when without arguments and scope is undefined or null\n * - only bind arguments when scope is undefined or null, well can call the new function proxy with some scope\n *\n * @example\n * \t\tfunction example() {\n * \t\t\tconsole.log(this, arguments);\n * \t\t}\n * \t\tvar proxy = bind(example, null) \t// proxy === example\n * \t\tproxy() \t\t\t\t\t\t\t// log: window | undefined, []\n * \t\tproxy.call(1) \t\t\t\t\t\t// log: 1, []\n *\n * \t\tproxy = bind(example, null, 1) \t\t// proxy !== example\n * \t\tproxy() \t\t\t\t\t\t\t// log: window | undefined, [1]\n * \t\tproxy(2) \t\t\t\t\t\t\t// log: window | undefined, [1, 2]\n * \t\tproxy.call(1, 2) \t\t\t\t\t// log: 1, [1, 2]\n *\n * \t\tproxy = bind(example, {}, 1, 2)\t\t// proxy !== example\n * \t\tproxy() \t\t\t\t\t\t\t// log: {}, [1]\n * \t\tproxy(2) \t\t\t\t\t\t\t// log: {}, [1, 2, 2]\n * \t\tproxy.call(1, 2) \t\t\t\t\t// log: {}, [1, 2, 2]\n *\n * @param fn\tsource function\n * @param scope\tbind scope\n * @param args\tbind arguments\n * @return function proxy\n */\nexport const bind: <T extends Function>(fn: T, scope: any, ...args: any[]) => T = _bind\n\n/**\n * bind\n * > not bind scope when scope is null or undefined\n * @param fn\t\tsource function\n * @param scope\t\tbind scope\n * @param args\t\tbind arguments\n * @param argOffset\toffset of args\n * @return function proxy\n */\nfunction bindPolyfill<T extends Function>(fn: T, scope: any, bindArgs: any[] | IArguments, argOffset: number): T {\n\tconst argLen = bindArgs.length - argOffset\n\tif (scope === undefined) {\n\t\tscope = null\n\t}\n\tif (argLen > 0) {\n\t\t// bind with arguments\n\t\treturn function bindProxy() {\n\t\t\tconst args = arguments\n\t\t\tlet i = args.length\n\t\t\tif (i) {\n\t\t\t\tconst params = new Array(argLen + i)\n\t\t\t\twhile (i--) {\n\t\t\t\t\tparams[argLen + i] = args[i]\n\t\t\t\t}\n\t\t\t\ti = argLen\n\t\t\t\twhile (i--) {\n\t\t\t\t\tparams[i] = bindArgs[i + argOffset]\n\t\t\t\t}\n\t\t\t\treturn apply(fn, scope === null ? this : scope, params) // call with scope or this\n\t\t\t}\n\t\t\treturn applyN(fn, scope === null ? this : scope, bindArgs, argOffset, argLen) // call with scope or this\n\t\t} as any\n\t}\n\tif (scope === null) {\n\t\treturn fn\n\t}\n\tif (scope === GLOBAL) {\n\t\t// bind on GLOBAL\n\t\treturn function bindProxy() {\n\t\t\treturn applyNoScope(fn, arguments)\n\t\t} as any\n\t}\n\treturn function bindProxy() {\n\t\treturn applyScope(fn, scope, arguments)\n\t} as any\n}\n","/**\n * regexp utilities\n * @module utility/reg\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Thu Sep 06 2018 18:27:51 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:29:00 GMT+0800 (China Standard Time)\n */\n\nimport { isBool } from './is'\n\n/**\n * whether to support sticky on RegExp\n */\nexport const stickyReg = isBool(/(?:)/.sticky)\n\n/**\n * whether to support unicode on RegExp\n */\nexport const unicodeReg = isBool(/(?:)/.unicode)\n\nconst REG_ESCAPE = /[-\\/\\\\^$*+?.()|[\\]{}]/g\n\n/**\n * escape string for RegExp\n */\nexport function reEscape(str: string): string {\n\treturn str.replace(REG_ESCAPE, '\\\\$&')\n}\n","/**\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:22:57 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 18:35:40 GMT+0800 (China Standard Time)\n */\n\nimport { PROTOTYPE, HAS_OWN_PROP } from '../consts'\n\nconst __hasOwn = Object[PROTOTYPE][HAS_OWN_PROP]\n\n/**\n * has own property\n */\nexport function hasOwnProp(obj: any, prop: string): boolean {\n\treturn __hasOwn.call(obj, prop)\n}\n","/**\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:23:56 GMT+0800 (China Standard Time)\n * @modified Thu Jan 31 2019 10:10:28 GMT+0800 (China Standard Time)\n */\nimport { CONSTRUCTOR, PROTO, PROTOTYPE } from '../consts'\nimport { hasOwnProp } from '../prop/hasOwnProp'\n\nconst __getProto = Object.getPrototypeOf,\n\t____setProto = Object.setPrototypeOf\n\n/**\n * whether to support Object.getPrototypeOf and Object.setPrototypeOf\n */\nexport const prototypeOf = !!____setProto\n\n/**\n * whether to support `__proto__`\n */\nexport const protoProp = { __proto__: [] } instanceof Array\n\n/**\n * get prototype\n */\nexport const protoOf: (o: any) => any = ____setProto\n\t? __getProto\n\t: __getProto\n\t? function getPrototypeOf(obj) {\n\t\t\treturn obj[PROTO] || __getProto(obj)\n\t  }\n\t: function getPrototypeOf(obj) {\n\t\t\treturn (hasOwnProp(obj, PROTO) ? obj[PROTO] : obj[CONSTRUCTOR][PROTOTYPE]) || null\n\t  }\n\n/**\n * set prototype\n * > properties on the prototype are not inherited on older browsers\n */\nexport const __setProto: <T>(obj: any, proto: any) => any =\n\t____setProto ||\n\tfunction setPrototypeOf(obj, proto) {\n\t\tobj[PROTO] = proto\n\t\treturn obj\n\t}\n\n/**\n * set prototype\n * > the properties on the prototype will be copied on the older browser\n */\nexport const setProto: <T>(obj: any, proto: any) => any =\n\t____setProto ||\n\t(protoProp\n\t\t? __setProto\n\t\t: function setPrototypeOf(obj, proto) {\n\t\t\t\tfor (let p in proto) {\n\t\t\t\t\tif (hasOwnProp(proto, p)) obj[p] = proto[p]\n\t\t\t\t}\n\t\t\t\treturn __setProto(obj, proto)\n\t\t  })\n","/**\n * prop utilities\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:22:57 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 18:57:40 GMT+0800 (China Standard Time)\n */\nimport { PROTO, PROTOTYPE, HAS_OWN_PROP } from '../consts'\nimport { protoProp } from '../proto'\nimport { hasOwnProp as __hasOwnProp } from './hasOwnProp'\n\n//========================================================================================\n/*                                                                                      *\n *                                     own property                                     *\n *                                                                                      */\n//========================================================================================\n\n/**\n * has own property\n */\nexport const hasOwnProp: (obj: any, prop: string) => boolean = protoProp\n\t? __hasOwnProp\n\t: function hasOwnProp(obj, prop) {\n\t\t\treturn prop !== PROTO && __hasOwnProp(obj, prop)\n\t  }\n\n//========================================================================================\n/*                                                                                      *\n *                                    define property                                   *\n *                                                                                      */\n//========================================================================================\n\nlet __defProp: (o: any, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>) => any = Object.defineProperty\n\nconst { __defineGetter__, __defineSetter__ } = Object[PROTOTYPE] as any\n/**\n * whether to support Object.defineProperty\n */\nexport const propDescriptor: boolean =\n\t__defProp &&\n\t!!(function() {\n\t\ttry {\n\t\t\tvar val: number,\n\t\t\t\tobj: { s?: number } = {}\n\t\t\t__defProp(obj, 's', {\n\t\t\t\tget() {\n\t\t\t\t\treturn val\n\t\t\t\t},\n\t\t\t\tset(value) {\n\t\t\t\t\tval = value\n\t\t\t\t}\n\t\t\t})\n\t\t\tobj.s = 1\n\t\t\treturn obj.s === val\n\t\t} catch (e) {}\n\t})()\n\n/**\n * whether to support `__defineGetter__` and `__defineSetter__`\n */\nexport const propAccessor: boolean = propDescriptor || !!__defineSetter__\n\nif (!propDescriptor)\n\t__defProp = __defineSetter__\n\t\t? function defineProperty(obj, prop, desc) {\n\t\t\t\tconst { get, set } = desc\n\t\t\t\tif ('value' in desc || !(prop in obj)) obj[prop] = desc.value\n\t\t\t\tif (get) __defineGetter__.call(obj, prop, get)\n\t\t\t\tif (set) __defineSetter__.call(obj, prop, set)\n\t\t\t\treturn obj\n\t\t  }\n\t\t: function defineProperty(obj, prop, desc) {\n\t\t\t\tif (desc.get || desc.set)\n\t\t\t\t\tthrow new TypeError('Invalid property descriptor. Accessor descriptors are not supported.')\n\t\t\t\tif ('value' in desc || !(prop in obj)) obj[prop] = desc.value\n\t\t\t\treturn obj\n\t\t  }\n\n/**\n * define property\n */\nexport const defProp = __defProp\n\n/**\n * define property by value\n */\nexport const defPropValue: <V>(\n\tobj: any,\n\tprop: string,\n\tvalue: V,\n\tenumerable?: boolean,\n\tconfigurable?: boolean,\n\twritable?: boolean\n) => V = propDescriptor\n\t? function defPropValue(obj, prop, value, configurable, writable, enumerable) {\n\t\t\t__defProp(obj, prop, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: enumerable !== false,\n\t\t\t\tconfigurable: configurable !== false,\n\t\t\t\twritable: writable !== false\n\t\t\t})\n\t\t\treturn value\n\t  }\n\t: function defPropValue(obj, prop, value) {\n\t\t\tobj[prop] = value\n\t\t\treturn value\n\t  }\n","/**\n * Object.create polyfill\n * @module utility/create\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:24:47 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 18:19:24 GMT+0800 (China Standard Time)\n */\n\nimport { PROTOTYPE } from '../consts'\nimport { defProp, hasOwnProp } from '../prop'\nimport { __setProto } from '../proto'\n\nfunction __() {}\n\n/**\n * create shim\n */\nfunction doCreate(o: object | null, props?: PropertyDescriptorMap & ThisType<any>): any {\n\t__[PROTOTYPE] = o\n\tconst obj = new __()\n\t__[PROTOTYPE] = null\n\tif (props) {\n\t\tfor (var k in props) {\n\t\t\tif (hasOwnProp(props, k)) {\n\t\t\t\tdefProp(obj, k, props[k])\n\t\t\t}\n\t\t}\n\t}\n\treturn obj\n}\n\n/**\n * create object\n */\nexport const create =\n\tObject.create ||\n\t(Object.create = Object.getPrototypeOf\n\t\t? doCreate\n\t\t: function create(o: object | null, props?: PropertyDescriptorMap & ThisType<any>): any {\n\t\t\t\tconst obj = doCreate(o, props)\n\t\t\t\t__setProto(obj, o)\n\t\t\t\treturn obj\n\t\t  })\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 17:10:41 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:37:44 GMT+0800 (China Standard Time)\n */\nexport class Control {\n\tprivate __desc: string\n\n\tconstructor(desc: string) {\n\t\tthis.__desc = desc\n\t}\n\n\ttoString() {\n\t\treturn this.__desc\n\t}\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 17:10:41 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:34:51 GMT+0800 (China Standard Time)\n */\nimport { Control } from './Control'\nimport { IArray } from '../consts'\nimport { bind } from '../fn'\nimport { hasOwnProp } from '../prop'\nimport { isArrayLike, isBool } from '../is'\n\n/**\n * STOP Control\n * > stop each/map/indexOf...\n */\nexport const STOP = new Control('STOP')\n//========================================================================================\n/*                                                                                      *\n *                                each object properties                                *\n *                                                                                      */\n//========================================================================================\n\n/**\n * each callback on object\n * - will stop each on return STOP\n */\nexport type EachPropCallback = (prop: string, obj: object) => Control | void\n\n/**\n * each properties\n * - will stop each on callback return STOP\n * @param obj\t\teach target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @param own\t\teach own properties, default: true\n * @return stoped property name or false\n */\nexport function eachProps(obj: object, callback: EachPropCallback, own: boolean): false | string\nexport function eachProps(obj: object, callback: EachPropCallback, scope?: any, own?: boolean): false | string\nexport function eachProps(obj: object, callback: EachPropCallback, scope?: any, own?: boolean): false | string {\n\tif (isBool(scope)) {\n\t\town = scope\n\t} else {\n\t\tcallback = bind(callback, scope)\n\t}\n\tlet k: string\n\tif (own === false) {\n\t\tfor (k in obj) if (callback(k, obj) === STOP) return k\n\t} else {\n\t\tfor (k in obj) if (hasOwnProp(obj, k) && callback(k, obj) === STOP) return k\n\t}\n\treturn false\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                      each object                                     *\n *                                                                                      */\n//========================================================================================\n\n/**\n * each callback on object\n * - will stop each on callback return STOP\n */\nexport type EachObjCallback = (value: any, prop: string, obj: object) => Control | void\n\n/**\n * each object\n * - will stop each on callback return STOP\n * @param obj\t\teach target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @param own\t\teach own properties, default: true\n * @return stoped property name or false\n */\nexport function eachObj(obj: object, callback: EachObjCallback, own: boolean): false | string\nexport function eachObj(obj: object, callback: EachObjCallback, scope?: any, own?: boolean): false | string\nexport function eachObj(obj: object, callback: EachObjCallback, scope?: any, own?: boolean): false | string {\n\tconst args = arguments\n\tif (isBool(scope)) {\n\t\town = scope\n\t} else {\n\t\tcallback = bind(callback, scope)\n\t}\n\tlet k: string\n\tif (own === false) {\n\t\tfor (k in obj) if (callback(obj[k], k, obj) === STOP) return k\n\t} else {\n\t\tfor (k in obj) if (hasOwnProp(obj, k) && callback(obj[k], k, obj) === STOP) return k\n\t}\n\treturn false\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                      each array                                      *\n *                                                                                      */\n//========================================================================================\n\n/**\n * each callback on array\n * - will stop each on callback return STOP\n */\nexport type EachArrayCallback = (data: any, index: number, array: IArray) => Control | void\n\n/**\n * each array\n * - will stop each on callback return STOP\n * @param array\t\teach target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @return stoped index or false\n */\nexport function eachArray(array: IArray, callback: EachArrayCallback, scope?: any): false | number {\n\tcallback = bind(callback, scope)\n\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\tif (callback(array[i], i, array) === STOP) return i\n\t}\n\treturn false\n}\n\n/**\n * reverse each array\n * - will stop each on callback return STOP\n * @param array\t\teach target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @return stoped index or false\n */\nexport function reachArray(array: IArray, callback: EachArrayCallback, scope?: any): false | number {\n\tcallback = bind(callback, scope)\n\tlet i = array.length\n\twhile (i--) if (callback(array[i], i, array) === STOP) return i\n\treturn false\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                         each                                         *\n *                                                                                      */\n//========================================================================================\n\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: IArray,\n\tcallback: EachArrayCallback,\n\tscope?: any\n): false | number\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: object,\n\tcallback: EachObjCallback,\n\town?: boolean\n): false | string\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: object,\n\tcallback: EachObjCallback,\n\tscope?: any,\n\town?: boolean\n): false | string\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: object | IArray,\n\tcallback: EachObjCallback | EachArrayCallback,\n\town?: boolean\n): false | number | string\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: object | IArray,\n\tcallback: EachObjCallback | EachArrayCallback,\n\tscope?: any,\n\town?: boolean\n): false | number | string\nexport function doEach(\n\t_eachArray: typeof eachArray,\n\t_eachObj: typeof eachObj,\n\tobj: any,\n\tcallback: any,\n\tscope?: any,\n\town?: boolean\n): false | number | string {\n\tif (isArrayLike(obj)) return _eachArray(obj, callback, scope)\n\treturn _eachObj(obj, callback, scope, own)\n}\n\n/**\n * each\n * - will stop each on callback return STOP\n * @param obj\t\teach target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @param own\t\teach own properties on object, default: true\n * @return stoped index or false\n */\n\nexport function each(obj: IArray, callback: EachArrayCallback, scope?: any): false | number\nexport function each(obj: object, callback: EachObjCallback, own?: boolean): false | string\nexport function each(obj: object, callback: EachObjCallback, scope?: any, own?: boolean): false | string\nexport function each(\n\tobj: object | IArray,\n\tcallback: EachObjCallback | EachArrayCallback,\n\town?: boolean\n): false | number | string\nexport function each(\n\tobj: object | IArray,\n\tcallback: EachObjCallback | EachArrayCallback,\n\tscope?: any,\n\town?: boolean\n): false | number | string\nexport function each(obj: any, callback: any, scope?: any, own?: boolean): false | number | string {\n\treturn doEach(eachArray, eachObj, obj, callback, scope, own)\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 17:12:06 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:37:30 GMT+0800 (China Standard Time)\n */\n\nimport { Control } from './Control'\nimport { STOP, eachArray, reachArray, eachObj } from './each'\nimport { IArray } from '../consts'\nimport { create } from '../create'\nimport { bind } from '../fn'\nimport { isArrayLike, isBool } from '../is'\n\n/**\n * SKIP Control\n * > skip map\n */\nexport const SKIP = new Control('SKIP')\n\n//========================================================================================\n/*                                                                                      *\n *                                    map object                                   *\n *                                                                                      */\n//========================================================================================\n\n/**\n * callback on object\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param value\tproperty value\n * @param prop\tproperty name\n * @param obj\tmap target\n */\nexport type MapObjCallback<T> = (callback: any, prop: string, obj: object) => T | Control\n\nexport function doMapObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\tcallback: MapObjCallback<T>,\n\town?: boolean\n): { [key: string]: T }\nexport function doMapObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\tcallback: MapObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T }\nexport function doMapObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\tcallback: MapObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T } {\n\tif (isBool(scope)) {\n\t\town = scope\n\t} else {\n\t\tcallback = bind(callback, scope)\n\t}\n\tconst copy: { [key: string]: T } = create(null)\n\teach(\n\t\tobj,\n\t\t(value, prop, obj) => {\n\t\t\tconst v = callback(value, prop, obj)\n\t\t\tif (v === STOP) return STOP\n\t\t\tif (v !== SKIP) copy[prop] = v as T\n\t\t},\n\t\tnull,\n\t\town\n\t)\n\treturn copy\n}\n\n/**\n * object: map\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param obj\t\tmap target\n * @param callback\tcallback\n * @param scope\t\tscope of callback\n * @param own\t\tmap own properties, default: true\n */\nexport function mapObj<T>(obj: object, callback: MapObjCallback<T>, own?: boolean): { [key: string]: T }\nexport function mapObj<T>(obj: object, callback: MapObjCallback<T>, scope?: any, own?: boolean): { [key: string]: T }\nexport function mapObj<T>(obj: object, callback: MapObjCallback<T>, scope?: any, own?: boolean): { [key: string]: T } {\n\treturn doMapObj(eachObj, obj, callback, scope, own)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     indexof Array                                    *\n *                                                                                      */\n//========================================================================================\n\n/**\n * callback on array\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param data\titem data\n * @param index\titem index\n * @param array\tmap target\n */\nexport type MapArrayCallback<T> = (data: any, index: number, array: IArray) => T | Control\n\nexport function doMapArray<T>(each: typeof eachArray, array: IArray, callback: MapArrayCallback<T>, scope?: any): T[] {\n\tcallback = bind(callback, scope)\n\tconst copy: T[] = []\n\tlet j = 0\n\teach(array, (data, index, array) => {\n\t\tconst v = callback(data, index, array)\n\t\tif (v === STOP) return STOP\n\t\tif (v !== SKIP) copy[j++] = v as T\n\t})\n\treturn copy\n}\n\n/**\n * array: map\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param array\t\tmap target\n * @param value\t\tcallback\n * @param scope\t\tscope of callback\n * @return array index or -1\n */\nexport function mapArray<T>(array: IArray, callback: MapArrayCallback<T>, scope?: any): T[] {\n\treturn doMapArray(eachArray, array, callback, scope)\n}\n\n/**\n * revice array: map\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param array\t\tmap target\n * @param value\t\tmap value of callback\n * @param scope\t\tscope of callback\n * @return array index or -1\n */\nexport function rmapArray<T>(array: IArray, callback: MapArrayCallback<T>, scope?: any): T[] {\n\treturn doMapArray(reachArray, array, callback, scope)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                       map                                       *\n *                                                                                      */\n//========================================================================================\n\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: IArray,\n\tcallback: MapArrayCallback<T>,\n\tscope?: any\n): any[]\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\tcallback: MapObjCallback<T>,\n\town?: boolean\n): { [key: string]: T }\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\tcallback: MapObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T }\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\tcallback: MapObjCallback<T> | MapArrayCallback<T>,\n\town?: boolean\n): { [key: string]: T } | any[]\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\tcallback: MapObjCallback<T> | MapArrayCallback<T>,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T } | any[]\nexport function doMap<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: any,\n\tcallback: any,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T } | any[] {\n\tif (isArrayLike(obj)) return doMapArray(eacharray, obj, callback, scope)\n\treturn doMapObj(eachobj, obj, callback, scope, own)\n}\n\n/**\n * map\n * - will stop map on callback return STOP\n * - will ignore item on callback return SKIP\n * @param obj\t\tmap target\n * @param value\t\tmap value of callback\n * @param scope\t\tscope of callback\n * @param own\t\tmap own properties on object, default: true\n * @return array index or property name or -1\n */\nexport function map<T>(obj: IArray, callback: MapArrayCallback<T>, scope?: any): any[]\nexport function map<T>(obj: object, callback: MapObjCallback<T>, own?: boolean): { [key: string]: T }\nexport function map<T>(obj: object, callback: MapObjCallback<T>, scope?: any, own?: boolean): { [key: string]: T }\nexport function map<T>(\n\tobj: object | IArray,\n\tcallback: MapObjCallback<T> | MapArrayCallback<T>,\n\town?: boolean\n): { [key: string]: T } | any[]\nexport function map<T>(\n\tobj: object | IArray,\n\tcallback: MapObjCallback<T> | MapArrayCallback<T>,\n\tscope?: any,\n\town?: boolean\n): { [key: string]: T } | any[]\nexport function map<T>(obj: object | IArray, callback: any, scope?: any, own?: boolean): { [key: string]: T } | T[] {\n\treturn doMap(eachArray, eachObj, obj, callback, scope, own)\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 17:12:06 GMT+0800 (China Standard Time)\n * @modified Tue Nov 27 2018 13:38:16 GMT+0800 (China Standard Time)\n */\n\nimport { Control } from './Control'\nimport { STOP, eachArray, reachArray, eachObj } from './each'\nimport { IArray } from '../consts'\nimport { bind } from '../fn'\nimport { isArrayLike, isBool, isFn, eq } from '../is'\n\nfunction parseCallback(value: any, scope: any) {\n\tif (isFn(value)) return bind(value, scope)\n\treturn function defaultHandler(data, idx, obj) {\n\t\treturn eq(data, value)\n\t}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                    index of object                                   *\n *                                                                                      */\n//========================================================================================\n\n/**\n * indexOf callback on object\n * - will stop find on callback return STOP\n * @param value\tproperty value\n * @param prop\tproperty name\n * @param obj\t\tindexOf target\n * @return\n * - boolean: is finded\n * - void: find next\n * - STOP: stop find\n */\nexport type IdxOfObjCallback = (value: any, prop: string, obj: object) => boolean | Control | void\n\nexport function doIdxOfObj(each: typeof eachObj, obj: object, value: any, own?: boolean): -1 | string\nexport function doIdxOfObj(each: typeof eachObj, obj: object, value: IdxOfObjCallback, own?: boolean): -1 | string\nexport function doIdxOfObj(\n\teach: typeof eachObj,\n\tobj: object,\n\tvalue: IdxOfObjCallback,\n\tscope?: any,\n\town?: boolean\n): -1 | string\n\nexport function doIdxOfObj(\n\teach: typeof eachObj,\n\tobj: object,\n\tvalue: IdxOfObjCallback | any,\n\tscope?: any,\n\town?: boolean\n): -1 | string {\n\tif (isBool(scope)) {\n\t\town = scope\n\t\tscope = null\n\t}\n\tconst callback: IdxOfObjCallback = parseCallback(value, scope)\n\tlet idx: -1 | string = -1\n\teach(\n\t\tobj,\n\t\t(data, prop, obj) => {\n\t\t\tconst r = callback(data, prop, obj)\n\t\t\tif (r === true) {\n\t\t\t\tidx = prop\n\t\t\t\treturn STOP\n\t\t\t} else if (r === STOP) return r\n\t\t},\n\t\tnull,\n\t\town\n\t)\n\treturn idx\n}\n\n/**\n * object: indexOf\n * - will stop find on callback return STOP\n * @param obj\t\tfind target\n * @param callback\tfind value or callback\n * @param scope\t\tscope of callback\n * @param own\t\tfind own properties, default: true\n * @return property name or -1\n */\nexport function idxOfObj(obj: object, value: any, own?: boolean): -1 | string\nexport function idxOfObj(obj: object, value: IdxOfObjCallback, own?: boolean): -1 | string\nexport function idxOfObj(obj: object, value: IdxOfObjCallback, scope?: any, own?: boolean): -1 | string\nexport function idxOfObj(obj: object, value: IdxOfObjCallback | any, scope?: any, own?: boolean): -1 | string {\n\treturn doIdxOfObj(eachObj, obj, value, scope, own)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     indexof Array                                    *\n *                                                                                      */\n//========================================================================================\n\n/**\n * indexOf callback on array\n * - will stop find on callback return STOP\n * @param data\titem data\n * @param index\titem index\n * @param array\tindexOf target\n * @return\n * - boolean: is finded\n * - void: find next\n * - STOP: stop find\n */\nexport type IdxOfArrayCallback = (data: any, index: number, array: IArray) => boolean | Control | void\n\nexport function doIdxOfArray(each: typeof eachArray, array: IArray, value: any): number\nexport function doIdxOfArray(each: typeof eachArray, array: IArray, value: IdxOfArrayCallback, scope?: any): number\nexport function doIdxOfArray(\n\teach: typeof eachArray,\n\tarray: IArray,\n\tvalue: IdxOfArrayCallback | any,\n\tscope?: any\n): number {\n\tconst callback: IdxOfArrayCallback = parseCallback(value, scope)\n\tlet idx = -1\n\teach(array, (data, index, array) => {\n\t\tconst r = callback(data, index, array)\n\t\tif (r === true) {\n\t\t\tidx = index\n\t\t\treturn STOP\n\t\t} else if (r === STOP) return r\n\t})\n\treturn idx\n}\n\n/**\n * array: indexOf\n * - will stop find on callback return STOP\n * @param array\t\tfind target\n * @param value\t\tfind value or callback\n * @param scope\t\tscope of callback\n * @return array index or -1\n */\nexport function idxOfArray(array: IArray, value: any): number\nexport function idxOfArray(array: IArray, value: IdxOfArrayCallback, scope?: any): number\nexport function idxOfArray(array: IArray, value: IdxOfArrayCallback | any, scope?: any): number {\n\treturn doIdxOfArray(eachArray, array, value, scope)\n}\n\n/**\n * revice array: indexOf\n * - will stop find on callback return STOP\n * @param array\t\tfind target\n * @param value\t\tfind value of callback\n * @param scope\t\tscope of callback\n * @return array index or -1\n */\nexport function ridxOfArray(array: IArray, value: any): number\nexport function ridxOfArray(array: IArray, value: IdxOfArrayCallback, scope?: any): number\nexport function ridxOfArray(array: IArray, value: IdxOfArrayCallback | any, scope?: any): number {\n\treturn doIdxOfArray(reachArray, array, value, scope)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                       index of                                       *\n *                                                                                      */\n//========================================================================================\n// find by value\nexport function doIdxOf(eacharray: typeof eachArray, eachobj: typeof eachObj, obj: IArray, value: any): number\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\tvalue: any,\n\town?: boolean\n): string\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\tvalue: any,\n\town?: boolean\n): number | string\n// find by callback\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: IArray,\n\tvalue: IdxOfArrayCallback,\n\tscope?: any\n): number\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\tvalue: IdxOfObjCallback,\n\town?: boolean\n): -1 | string\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\tvalue: IdxOfObjCallback,\n\tscope?: any,\n\town?: boolean\n): -1 | string\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\tvalue: IdxOfObjCallback | IdxOfArrayCallback,\n\town?: boolean\n): number | string\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\tvalue: IdxOfObjCallback | IdxOfArrayCallback,\n\tscope?: any,\n\town?: boolean\n): number | string\nexport function doIdxOf(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: any,\n\tvalue: any,\n\tscope?: any,\n\town?: boolean\n): number | string {\n\tif (isArrayLike(obj)) return doIdxOfArray(eacharray, obj, value, scope)\n\treturn doIdxOfObj(eachobj, obj, value, scope, own)\n}\n\n/**\n * indexOf\n * - will stop find on callback return STOP\n * @param obj\t\tfind target\n * @param value\t\tfind value of callback\n * @param scope\t\tscope of callback\n * @param own\t\tfind own properties on object, default: true\n * @return array index or property name or -1\n */\nexport function idxOf(obj: IArray, value: any): number | string\nexport function idxOf(obj: object, value: any, own?: boolean): number | string\nexport function idxOf(obj: object | IArray, value: any, own?: boolean): number | string\nexport function idxOf(obj: IArray, value: IdxOfArrayCallback, scope?: any): number\nexport function idxOf(obj: object, value: IdxOfObjCallback, own?: boolean): -1 | string\nexport function idxOf(obj: object, value: IdxOfObjCallback, scope?: any, own?: boolean): -1 | string\nexport function idxOf(\n\tobj: object | IArray,\n\tvalue: IdxOfObjCallback | IdxOfArrayCallback,\n\town?: boolean\n): number | string\nexport function idxOf(\n\tobj: object | IArray,\n\tvalue: IdxOfObjCallback | IdxOfArrayCallback,\n\tscope?: any,\n\town?: boolean\n): number | string\nexport function idxOf(obj: object | IArray, value: any, scope?: any, own?: boolean): number | string {\n\treturn doIdxOf(eachArray, eachObj, obj, value, scope, own)\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 17:12:06 GMT+0800 (China Standard Time)\n * @modified Tue Nov 27 2018 14:02:39 GMT+0800 (China Standard Time)\n */\nimport { Control } from './Control'\nimport { STOP, eachArray, reachArray, eachObj } from './each'\nimport { IArray } from '../consts'\nimport { bind } from '../fn'\nimport { isArrayLike, isBool } from '../is'\n\n//========================================================================================\n/*                                                                                      *\n *                                     reduce object                                    *\n *                                                                                      */\n//========================================================================================\n\n/**\n * reduce callback on object\n * - will stop reduce on return STOP\n */\nexport type ReduceObjCallback<T> = (accumulator: T, value: any, prop: string, obj: object) => T | Control\n\nexport function doReduceObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\town?: boolean\n): T\nexport function doReduceObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T\nexport function doReduceObj<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T {\n\tif (isBool(scope)) {\n\t\town = scope\n\t} else {\n\t\tcallback = bind(callback, scope)\n\t}\n\teach(\n\t\tobj,\n\t\t(value, prop, obj) => {\n\t\t\tconst rs = callback(accumulator, value, prop, obj)\n\t\t\tif (rs === STOP) return STOP\n\t\t\taccumulator = rs as T\n\t\t},\n\t\tnull,\n\t\town\n\t)\n\treturn accumulator\n}\n\n/**\n * reduce object\n * - will stop reduce on callback return STOP\n * @param obj\t\t\treduce target\n * @param accumulator\taccumulator\n * @param callback\t\tvalue callback\n * @param scope\t\t\tscope of callback\n * @param own\t\t\treduce own properties, default: true\n */\nexport function reduceObj<T>(obj: object, accumulator: T, callback: ReduceObjCallback<T>, own?: boolean)\nexport function reduceObj<T>(obj: object, accumulator: T, callback: ReduceObjCallback<T>, scope?: any, own?: boolean)\nexport function reduceObj<T>(\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T {\n\treturn doReduceObj(eachObj, obj, accumulator, callback, scope, own)\n}\n//========================================================================================\n/*                                                                                      *\n *                                     reduce array                                     *\n *                                                                                      */\n//========================================================================================\n\n/**\n * reduce callback on array\n * - will stop reduce on return STOP\n */\nexport type ReduceArrayCallback<T> = (accumulator: T, data: any, index: number, array: IArray) => T | Control\n\nexport function doReduceArray<T>(\n\teach: typeof eachArray,\n\tarray: IArray,\n\taccumulator: T,\n\tcallback: ReduceArrayCallback<T>,\n\tscope?: any\n): T {\n\tcallback = bind(callback, scope)\n\teach(array, (data, index, array) => {\n\t\tconst rs = callback(accumulator, data, index, array)\n\t\tif (rs === STOP) return STOP\n\t\taccumulator = rs as T\n\t})\n\treturn accumulator\n}\n\n/**\n * reduce array\n * - will stop reduce on callback return STOP\n * @param array\t\t\treduce target\n * @param accumulator\taccumulator\n * @param callback\t\tvalue callback\n * @param scope\t\t\tscope of callback\n */\nexport function reduceArray<T>(array: IArray, accumulator: T, callback: ReduceArrayCallback<T>, scope?: any): T {\n\treturn doReduceArray(eachArray, array, accumulator, callback, scope)\n}\n\n/**\n * revice reduce array\n * - will stop reduce on callback return STOP\n * @param array\t\t\treduce target\n * @param accumulator\taccumulator\n * @param callback\t\tvalue callback\n * @param scope\t\t\tscope of callback\n */\nexport function rreduceArray<T>(array: IArray, accumulator: T, callback: ReduceArrayCallback<T>, scope?: any): T {\n\treturn doReduceArray(reachArray, array, accumulator, callback, scope)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        reduce                                        *\n *                                                                                      */\n//========================================================================================\n\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: IArray,\n\taccumulator: T,\n\tcallback: ReduceArrayCallback<T>,\n\tscope?: any\n): T\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\town?: boolean\n): T\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T> | ReduceArrayCallback<T>,\n\town?: boolean\n): T\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T> | ReduceArrayCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T\nexport function doReduce<T>(\n\teacharray: typeof eachArray,\n\teachobj: typeof eachObj,\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceArrayCallback<T> | ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T {\n\tif (isArrayLike(obj))\n\t\treturn doReduceArray(eacharray, obj as IArray, accumulator, callback as ReduceArrayCallback<T>, scope)\n\treturn doReduceObj(eachobj, obj as object, accumulator, callback as ReduceObjCallback<T>, scope, own)\n}\n\n/**\n * reduce\n * - will stop reduce on callback return STOP\n * @param obj\t\t\treduce target\n * @param accumulator\taccumulator\n * @param callback\t\tvalue callback\n * @param scope\t\t\tscope of callback\n * @param own\t\t\treduce own properties of reduce object, default: true\n */\nexport function reduce<T>(obj: IArray, accumulator: T, callback: ReduceArrayCallback<T>, scope?: any): T\nexport function reduce<T>(obj: object, accumulator: T, callback: ReduceObjCallback<T>, own?: boolean): T\nexport function reduce<T>(obj: object, accumulator: T, callback: ReduceObjCallback<T>, scope?: any, own?: boolean): T\nexport function reduce<T>(\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T> | ReduceArrayCallback<T>,\n\town?: boolean\n): T\nexport function reduce<T>(\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceObjCallback<T> | ReduceArrayCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T\nexport function reduce<T>(\n\tobj: object | IArray,\n\taccumulator: T,\n\tcallback: ReduceArrayCallback<T> | ReduceObjCallback<T>,\n\tscope?: any,\n\town?: boolean\n): T {\n\treturn doReduce(eachArray, eachObj, obj, accumulator, callback, scope, own)\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Thu Jul 26 2018 10:47:47 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:34:56 GMT+0800 (China Standard Time)\n */\nimport { Control } from './Control'\nimport { STOP, eachObj, eachProps } from './each'\nimport { SKIP } from './map'\nimport { isBool, isFn } from '../is'\nimport { bind } from '../fn'\n\n//========================================================================================\n/*                                                                                      *\n *                                         keys                                         *\n *                                                                                      */\n//========================================================================================\n\nexport type ObjKeyHandler<T> = (prop: string, obj: object) => T | Control\n\nfunction defaultObjKeyHandler(prop: string, obj: object): any {\n\treturn prop\n}\nexport function doObjKeys<T>(each: typeof eachProps, obj: object, own?: boolean): T[]\nexport function doObjKeys<T>(each: typeof eachProps, obj: object, callback: ObjKeyHandler<T>, own?: boolean): T[]\nexport function doObjKeys<T>(\n\teach: typeof eachProps,\n\tobj: object,\n\tcallback: ObjKeyHandler<T>,\n\tscope?: any,\n\town?: boolean\n): T[]\nexport function doObjKeys<T>(\n\teach: typeof eachProps,\n\tobj: object,\n\tcallback_own?: ObjKeyHandler<T> | boolean,\n\tscope_own?: any,\n\town?: boolean\n): T[]\nexport function doObjKeys<T>(each: typeof eachProps, obj: object): T[] {\n\tconst rs: T[] = [],\n\t\targs = arguments\n\tlet handler: ObjKeyHandler<T> = defaultObjKeyHandler,\n\t\ti = 2,\n\t\tj = 0\n\tif (isFn(args[i])) {\n\t\thandler = args[i++]\n\t\tif (!isBool(args[i])) handler = bind(handler, args[i++])\n\t}\n\teach(\n\t\tobj,\n\t\t(prop, obj) => {\n\t\t\tconst val = handler(prop, obj)\n\t\t\tif (val === STOP) return STOP\n\t\t\tif (val !== SKIP) rs[j++] = val as T\n\t\t},\n\t\tnull,\n\t\targs[i]\n\t)\n\treturn rs\n}\n\n/**\n * @param obj\t\ttarget\n * @param handler\tkey handler\n * @param scope\t\tscope or handler\n * @param own\t\tis get own properties, default: true\n */\nexport function keys<T>(obj: object, own?: boolean): T[]\nexport function keys<T>(obj: object, callback: ObjKeyHandler<T>, own?: boolean): T[]\nexport function keys<T>(obj: object, callback: ObjKeyHandler<T>, scope?: any, own?: boolean): T[]\nexport function keys<T>(obj: object, callback?: ObjKeyHandler<T> | boolean, scope?: any, own?: boolean): T[] {\n\treturn doObjKeys(eachProps, obj, callback, scope, own)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        values                                        *\n *                                                                                      */\n//========================================================================================\n\nexport type ObjValueHandler<T> = (value: any, prop: string, obj: object) => T | Control\n\nfunction defaultObjValueHandler(value: any, prop: string, obj: object): any {\n\treturn value\n}\nexport function doObjValues<T>(each: typeof eachObj, obj: object, own?: boolean): T[]\nexport function doObjValues<T>(each: typeof eachObj, obj: object, callback: ObjValueHandler<T>, own?: boolean): T[]\nexport function doObjValues<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\tcallback: ObjValueHandler<T>,\n\tscope?: any,\n\town?: boolean\n): T[]\nexport function doObjValues<T>(\n\teach: typeof eachObj,\n\tobj: object,\n\tcallback_own?: ObjValueHandler<T> | boolean,\n\tscope_own?: any,\n\town?: boolean\n): T[]\nexport function doObjValues<T>(each: typeof eachObj, obj: object): T[] {\n\tconst rs: T[] = [],\n\t\targs = arguments\n\tlet handler: ObjValueHandler<T> = defaultObjValueHandler,\n\t\ti = 1,\n\t\tj = 0\n\tif (isFn(args[i])) {\n\t\thandler = args[i++]\n\t\tif (!isBool(args[i])) handler = bind(handler, args[i++])\n\t}\n\teach(\n\t\tobj,\n\t\tfunction(data, prop, obj) {\n\t\t\tconst val = handler(data, prop, obj)\n\t\t\tif (val === STOP) return STOP\n\t\t\tif (val !== SKIP) rs[j++] = val as T\n\t\t},\n\t\tnull,\n\t\targs[i]\n\t)\n\treturn rs\n}\n\n/**\n * @param obj\t\ttarget\n * @param handler\tvalue handler\n * @param scope\t\tscope or handler\n * @param own\t\tis get own properties, default: true\n */\nexport function values<T>(obj: object, own?: boolean): T[]\nexport function values<T>(obj: object, callback: ObjValueHandler<T>, own?: boolean): T[]\nexport function values<T>(obj: object, callback: ObjValueHandler<T>, scope?: any, own?: boolean): T[]\nexport function values<T>(obj: object, callback?: ObjValueHandler<T> | boolean, scope?: any, own?: boolean): T[] {\n\treturn doObjValues(eachObj, obj, callback, scope, own)\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Fri Nov 16 2018 16:29:04 GMT+0800 (China Standard Time)\n * @modified Sat Dec 29 2018 19:33:49 GMT+0800 (China Standard Time)\n */\n\nimport { Control } from './Control'\nimport { eachArray } from './each'\nimport { IArray } from '../consts'\nimport { bind } from '../fn'\nimport { isFn, isStr, isArray } from '../is'\nimport { create } from '../create'\n\n/**\n * @return STOP or SKIP or [key: string, value: any]\n */\nexport type Arr2ObjCallback = (data: any, index: number, array: IArray) => Control | [string, any]\n\nexport function doArr2Obj(each: typeof eachArray, array: IArray, callback: Arr2ObjCallback, scope?: any): object {\n\tconst obj = create(null)\n\tcallback = bind(callback, scope)\n\teach(array, (data, index, array) => {\n\t\tconst r: Control | [string, any] = callback(data, index, array)\n\t\tif (isArray(r)) {\n\t\t\tobj[r[0]] = r[1]\n\t\t} else {\n\t\t\treturn r as Control\n\t\t}\n\t})\n\treturn obj\n}\n\n/**\n * convert array to object\n */\nexport function arr2obj(array: IArray, callback: Arr2ObjCallback, scope?: any): object {\n\treturn doArr2Obj(eachArray, array, callback, scope)\n}\n\n/**\n * convert array or string to object\n * @param array\n * @param val\tvalue or callback\n * @param split\tsplit char on string\n */\nexport function makeMap(array: IArray, val: Arr2ObjCallback, split?: string): object\nexport function makeMap(array: IArray, val?: any, split?: string): object\nexport function makeMap(array: IArray, val?: any, split?: string): object {\n\tif (isStr(array)) array = (array as string).split(isStr(split) ? split : ',')\n\treturn arr2obj(array, isFn(val) ? val : data => [data, val])\n}\n","/**\n * @module utility/collection\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Thu Nov 15 2018 12:13:54 GMT+0800 (China Standard Time)\n * @modified Tue Dec 04 2018 20:10:32 GMT+0800 (China Standard Time)\n */\n\nexport { STOP, eachProps, eachArray, eachObj, each } from './each'\nexport { SKIP, mapArray, mapObj, map } from './map'\nexport { idxOfArray, idxOfObj, idxOf } from './idxOf'\nexport { reduceArray, reduceObj, reduce } from './reduce'\nexport { keys, values } from './obj2arr'\nexport { arr2obj, makeMap } from './arr2obj'\nexport function makeArray<T>(len: number, callback: (index: number) => T): T[] {\n\tconst array = new Array(len)\n\tlet i = len\n\twhile (i--) array[i] = callback(i)\n\treturn array\n}\n","/**\n * @module utility/prop\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Fri Nov 30 2018 14:41:02 GMT+0800 (China Standard Time)\n * @modified Sat Feb 23 2019 10:45:54 GMT+0800 (China Standard Time)\n */\n\nimport { create } from './create'\nimport { isArray } from './is'\nimport { mapArray } from './collection'\n\nconst pathCache: { [key: string]: string[] } = create(null)\n\n// (^ | .) prop | (index | \"string prop\" | 'string prop')\nconst pathReg = /(?:^|\\.)([a-zA-Z$_][\\w$]*)|\\[\\s*(?:(\\d+)|\"((?:[^\\\\\"]|\\\\.)*)\"|'((?:[^\\\\']|\\\\.)*)')\\s*\\]/g\n\nexport function parsePath(propPath: string | string[], cacheable?: boolean): string[] {\n\tlet path: string[]\n\tif (isArray(propPath)) {\n\t\tpath = propPath as string[]\n\t} else if ((path = pathCache[propPath as string])) {\n\t\treturn path\n\t} else {\n\t\tpath = []\n\t\tvar match: string[],\n\t\t\tidx = 0,\n\t\t\tcidx: number,\n\t\t\ti = 0\n\t\twhile ((match = pathReg.exec(propPath as string))) {\n\t\t\tcidx = pathReg.lastIndex\n\t\t\tif (cidx !== idx + match[0].length)\n\t\t\t\tthrow new SyntaxError(\n\t\t\t\t\t`Invalid Path: \"${propPath}\", unkown character[${(propPath as string).charAt(\n\t\t\t\t\t\tidx\n\t\t\t\t\t)}] at offset:${idx}`\n\t\t\t\t)\n\t\t\tpath[i++] = match[1] || match[2] || match[3] || match[4]\n\t\t\tidx = cidx\n\t\t}\n\t\tif (cacheable !== false && i) {\n\t\t\tpathCache[propPath as string] = path\n\t\t}\n\t}\n\tif (!path.length) throw new Error(`Empty Path: ${propPath}`)\n\treturn path\n}\n\nexport function formatPath(path: string | (string[] & { path?: string })): string {\n\treturn isArray(path)\n\t\t? (path as string[] & { path?: string }).path ||\n\t\t\t\t((path as string[] & { path?: string }).path = mapArray(path, formatPathHandler).join(''))\n\t\t: (path as string)\n}\n\nfunction formatPathHandler(prop: string): string {\n\treturn `[\"${String(prop).replace(\"'\", '\\\\\"')}\"]`\n}\n\nexport function get(obj: any, path: string | string[]): any {\n\tpath = parsePath(path)\n\tconst l = path.length - 1\n\tlet i = 0\n\tfor (; i < l; i++) if ((obj = obj[path[i]]) === null || obj === undefined) return\n\tif (obj && ~l) return obj[path[i]]\n}\n\nexport function set(obj: any, path: string | string[], value: any) {\n\tpath = parsePath(path)\n\tconst l = path.length - 1\n\tlet i = 0\n\tfor (; i < l; i++) obj = obj[path[i]] || (obj[path[i]] = {})\n\t~l && (obj[path[i]] = value)\n}\n","/**\n * String utilities\n * @module utility/string\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 13:57:32 GMT+0800 (China Standard Time)\n * @modified Thu Jan 31 2019 10:04:55 GMT+0800 (China Standard Time)\n */\n\n//========================================================================================\n/*                                                                                      *\n *                                       char code                                      *\n *                                                                                      */\n//========================================================================================\n\n/**\n * get char code\n * > string.charCodeAt\n */\nexport function charCode(str: string, index?: number): number {\n\treturn str.charCodeAt(index || 0)\n}\n\n/**\n * get char by char code\n * > String.fromCharCode\n */\nexport function char(code: number): string {\n\treturn String.fromCharCode(code)\n}\n\nexport function cutStr(str: string, start: number, end?: number) {\n\treturn str.substring(start, end)\n}\n\nexport function cutLStr(str: string, start: number, len?: number) {\n\treturn str.substr(start, len)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                         trim                                         *\n *                                                                                      */\n//========================================================================================\n\nconst TRIM_REG = /(^\\s+)|(\\s+$)/g\n\n/**\n * trim\n */\nexport function trim(str: string): string {\n\treturn str.replace(TRIM_REG, '')\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                         case                                         *\n *                                                                                      */\n//========================================================================================\n\nconst FIRST_LOWER_LETTER_REG = /^[a-z]/,\n\tFIRST_UPPER_LETTER_REG = /^[A-Z]/\n\nexport function upper(str: string): string {\n\treturn str.toUpperCase()\n}\n\nexport function lower(str: string): string {\n\treturn str.toLowerCase()\n}\n\nexport function upperFirst(str: string): string {\n\treturn str.replace(FIRST_LOWER_LETTER_REG, upper)\n}\n\nexport function lowerFirst(str: string): string {\n\treturn str.replace(FIRST_UPPER_LETTER_REG, lower)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        escape                                        *\n *                                                                                      */\n//========================================================================================\n\nconst STR_ESCAPE_MAP = {\n\t\t'\\n': '\\\\n',\n\t\t'\\t': '\\\\t',\n\t\t'\\f': '\\\\f',\n\t\t'\"': '\\\\\"',\n\t\t\"'\": \"\\\\'\"\n\t},\n\tSTR_ESCAPE = /[\\n\\t\\f\"']/g\n\nexport function escapeStr(str: string): string {\n\treturn str.replace(STR_ESCAPE, str => STR_ESCAPE_MAP[str])\n}\n","/**\n * @module utility/format\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 03 2018 19:46:41 GMT+0800 (China Standard Time)\n * @modified Fri Feb 22 2019 11:37:25 GMT+0800 (China Standard Time)\n */\n\nimport { createFn } from './fn'\nimport { isFn } from './is'\nimport { get, parsePath } from './propPath'\nimport { create } from './create'\nimport { charCode, upper, escapeStr, cutStr } from './string'\n\n//========================================================================================\n/*                                                                                      *\n *                                     pad & shorten                                    *\n *                                                                                      */\n//========================================================================================\n\nexport function pad(str: string, len: number, chr?: string, leftAlign?: boolean | number): string {\n\treturn len > str.length ? __pad(str, len, chr, leftAlign) : str\n}\n\nexport function shorten(str: string, len: number, suffix?: string): string {\n\treturn len < str.length ? ((suffix = suffix || ''), str.substr(0, len - suffix.length) + suffix) : str\n}\n\nfunction __pad(str: string, len: number, chr: string, leftAlign: boolean | number): string {\n\tconst pad = new Array(len - str.length + 1).join(chr || ' ')\n\treturn leftAlign ? str + pad : pad + str\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                       Separator                                      *\n *                                                                                      */\n//========================================================================================\n\nexport const thousandSeparate = mkSeparator(3),\n\tbinarySeparate = mkSeparator(8, '01'),\n\toctalSeparate = mkSeparator(4, '0-7'),\n\thexSeparate = mkSeparator(4, '\\\\da-fA-F')\n\nfunction mkSeparator(group: number, valReg?: string): (numStr: string) => string {\n\tvalReg = valReg || '\\\\d'\n\tconst reg = new RegExp(\n\t\t`^(?:[+-]|\\\\s+|0[xXbBoO])|([${valReg}])(?=([${valReg}]{${group}})+(?![${valReg}]))|[^${valReg}].*`,\n\t\t'g'\n\t)\n\treturn numStr => numStr.replace(reg, separatorHandler)\n}\nfunction separatorHandler(m, d) {\n\treturn d ? d + ',' : m\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                   plural & singular                                  *\n *                                                                                      */\n//========================================================================================\n\nconst PLURAL_REG = /([a-zA-Z]+)([^aeiou])y$|([sxzh])$|([aeiou]y)$|([^sxzhy])$/\nexport function plural(str: string): string {\n\treturn str.replace(PLURAL_REG, pluralHandler)\n}\nfunction pluralHandler(m, v, ies, es, ys, s) {\n\treturn v + (ies ? ies + 'ies' : es ? es + 'es' : (ys || s) + 's')\n}\n\nconst SINGULAR_REG = /([a-zA-Z]+)([^aeiou])ies$|([sxzh])es$|([aeiou]y)s$|([^sxzhy])s$/\nexport function singular(str: string): string {\n\treturn str.replace(SINGULAR_REG, singularHandler)\n}\nfunction singularHandler(m, v, ies, es, ys, s) {\n\treturn v + (ies ? ies + 'y' : es || ys || s)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     format flags                                     *\n *                                                                                      */\n//========================================================================================\n\ntype FormatFlags = number\n\nexport const FORMAT_XPREFIX: FormatFlags = 0x1\nexport const FORMAT_PLUS: FormatFlags = 0x2\nexport const FORMAT_ZERO: FormatFlags = 0x4\nexport const FORMAT_SPACE: FormatFlags = 0x8\nexport const FORMAT_SEPARATOR: FormatFlags = 0x10\nexport const FORMAT_LEFT: FormatFlags = 0x20\n\nconst FLAG_MAPPING = {\n\t'#': FORMAT_XPREFIX,\n\t'+': FORMAT_PLUS,\n\t'0': FORMAT_ZERO,\n\t' ': FORMAT_SPACE,\n\t',': FORMAT_SEPARATOR,\n\t'-': FORMAT_LEFT\n}\nfunction parseFlags(f: string): FormatFlags {\n\tlet flags: FormatFlags = 0\n\tif (f) {\n\t\tvar i = f.length\n\t\twhile (i--) flags |= FLAG_MAPPING[f.charAt(i)]\n\t}\n\treturn flags\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                      format Rule                                     *\n *                                                                                      */\n//========================================================================================\n\n//   0      1      2     3     4       5       6           7         8      9           10             11             12        13\n// [match, expr, index, prop, flags, width, width-idx, width-prop, fill, precision, precision-idx, precision-prop, shorten-suffix, type]\nconst paramIdxR = `(\\\\d+|\\\\$|@)`,\n\tparamPropR = `(?:\\\\{((?:[a-zA-Z$_][\\\\w$_]*|\\\\[(?:\\\\d+|\"(?:[^\\\\\\\\\"]|\\\\\\\\.)*\"|'(?:[^\\\\\\\\']|\\\\\\\\.)*')\\\\])(?:\\\\.[a-zA-Z$_][\\\\w$_]*|\\\\[(?:\\\\d+|\"(?:[^\\\\\\\\\"]|\\\\\\\\.)*\"|'(?:[^\\\\\\\\']|\\\\\\\\.)*')\\\\])*)\\\\})`,\n\twidthR = `(?:([1-9]\\\\d*)|&${paramIdxR}${paramPropR})`,\n\tfillR = `(?:=(.))`,\n\tshortenSuffixR = `(?:=\"((?:[^\\\\\\\\\"]|\\\\\\\\.)*)\")`,\n\tformatReg = new RegExp(\n\t\t`\\\\\\\\.|(\\\\{${paramIdxR}?${paramPropR}?(?::([#,+\\\\- 0]*)(?:${widthR}${fillR}?)?(?:\\\\.${widthR}${shortenSuffixR}?)?)?([a-zA-Z_][a-zA-Z0-9_$]*)?\\\\})`,\n\t\t'g'\n\t)\n\n//========================================================================================\n/*                                                                                      *\n *                                      Formatters                                      *\n *                                                                                      */\n//========================================================================================\n\ntype FormatCallback = (\n\tval: any,\n\tflags: FormatFlags,\n\twidth: number,\n\tfill: string,\n\tprecision: number,\n\tshortenSuffix: string\n) => string\n\nconst formatters: {\n\t[k: string]: FormatCallback\n} = create(null)\n\nexport function extendFormatter(obj: { [key: string]: FormatCallback }) {\n\tvar fmt, name\n\tfor (name in obj) {\n\t\tfmt = obj[name]\n\t\tisFn(fmt) && (formatters[name] = fmt)\n\t}\n}\n\nexport function getFormatter(name: string): FormatCallback {\n\tconst f = formatters[name || 's']\n\tif (f) return f\n\tthrow new Error(`Invalid Formatter: ${name}`)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                           format by every parameter object                           *\n *                                                                                      */\n//========================================================================================\n\n/**\n * Syntax:\n * @example\n * \t'{'\n * \t\t(<parameter>)?\n * \t\t(\n * \t\t\t':'\n * \t\t\t(<flags>)?\n * \t\t\t(\n * \t\t\t\t<width> ('=' <fill-char>)?\n * \t\t\t)?\n * \t\t\t(\n * \t\t\t\t'.'\n * \t\t\t\t<precision> ('=' '\"' <shorten-suffix> '\"')?\n * \t\t\t)?\n * \t\t)?\n * \t\t(<type>)?\n * \t'}'\n *\n * - parameter\n * \t\t- {}\t\t\t\t\tformat by next unused argument\n * \t\t- {<number>}\t\t\tformat by arguments[number]\n * \t\t- {@}\t\t\t\t\tformat by current used argument\n * \t\t- {$}\t\t\t\t\tformat by next unused argument\n * \t\t- {{name}}\t\t\t\tformat by \"name\" property on next unused argument\n * \t\t- {<number>{name}}\t\tformat by \"name\" property on arguments[number]\n * \t\t- {@{name}}\t\t\t\tformat by \"name\" property on current used argument\n * \t\t- {${name}}\t\t\t\tformat by \"name\" property on next unused argument\n * @example\n * \t\tformat('<{} {}>', 'abc')\t\t\t\t// return \"<abc undefined>\"\n * \t\tformat('<{$} {$}>', 'abc')\t\t\t\t// return \"<abc undefined>\"\n * \t\tformat('<{@} {} {@}>', 'abc')\t\t\t// return \"<abc abc abc>\"\n * \t\tformat('<{0} {} {0}>', 'abc')\t\t\t// return \"<abc abc abc>\"\n * \t\tformat('<{0{value}} {${value}} {@{value}} {{value.a}}>', {value: 'abc'}, {value: {a: 'cbd'}})\n * \t\t// return \"<abc abc abc bcd>\"\n * \t\tformat('<{0{[0]}} {${[0]}} {@{[0]}} {{[0].a}}>', ['abc'], [{a: 'cbd'}])\n * \t\t// return \"<abc abc abc bcd>\"\n *\n * - flags\n * \t\t- {:#}    \tFORMAT_XPREFIX\n * \t\t\t\t\tensure the leading \"0\" for any octal\n * \t\t\t\t\tprefix non-zero hexadecimal with \"0x\" or \"0X\"\n * \t\t\t\t\tprefix non-zero binary with \"0b\" or \"0B\"\n * \t\t- {:+}    \tFORMAT_PLUS\n * \t\t\t\t\tForces to preceed the result with a plus or minus sign (+ or -) even for positive numbers.\n * \t\t\t\t\tBy default, only negative numbers are preceded with a - sign\n * \t\t- {:0}\t\tFORMAT_ZERO\n * \t\t\t\t\tLeft-pads the number with zeroes (0) instead of spaces when padding is specified\n * \t\t- {: }   \tFORMAT_SPACE\n * \t\t\t\t\tIf no sign is going to be written, a blank space is inserted before the value\n * \t\t- {:,}\t\tFORMAT_SEPARATOR\n * \t\t\t\t\tuse thousand separator on decimal number\n * \t\t\t\t\thexadecimal number: FFFFFFFF => FFFF,FFFF\n * \t\t\t\t\toctal number: 77777777 => 7777,7777\n * \t\t\t\t\tbinary number: 1111111111111111 => 11111111,11111111\n * \t\t{:-}    \tFORMAT_LEFT\n * \t\t\t\t\tLeft-justify within the given field width; Right justification is the default\n * @example\n * \t\tformat('<{: d}>',  12);\t\t// return \"< 12>\"\n *\t\tformat('<{: d}>',   0);\t\t// return \"< 0>\"\n *\t\tformat('<{: d}>', -12);\t\t// return \"<-12>\"\n *\t\tformat('<{:+d}>',  12);\t\t// return \"<+12>\"\n *\t\tformat('<{:+d}>',   0);\t\t// return \"<+0>\"\n *\t\tformat('<{:+d}>', -12);\t\t// return \"<-12>\"\n *\t\tformat('<{:6s}>',  12);\t\t// return \"<    12>\"\n *\t\tformat('<{:-6s}>', 12);\t\t// return \"<12    >\"\n *\t\tformat('<{:#o}>',  12);\t\t// return \"<014>\"\n *\t\tformat('<{:#x}>',  12);\t\t// return \"<0xc>\"\n *\t\tformat('<{:#X}>',  12);\t\t// return \"<0XC>\"\n *\t\tformat('<{:#b}>',  12);\t\t// return \"<0b1100>\"\n *\t\tformat('<{:#B}>',  12);\t\t// return \"<0B1100>\"\n\n * - width\n * \t\tMinimum number of characters to be printed.\n * \t\tIf the value to be printed is shorter than this number, the result is padded with pad char(default is space).\n * \t\tThe value is not truncated even if the result is larger.\n *\t\t- width value\n * \t\t\t{:<number>}\n * \t\t\t{:&@}\n * \t\t\t{:&$}\n * \t\t\t{:&<number>}\n * \t\t\t{:&@{<prop>}}\n * \t\t\t{:&${<prop>}}\n * \t\t\t{:&<number>{<prop>}}\n *\t\t- pad char\n * \t\t\t{:&@=<pad-char>}\n * \t\t\t{:&$=<pad-char>}\n * \t\t\t{:&<number>=<pad-char>}\n * \t\t\t{:&@{<prop>}=<pad-char>}\n * \t\t\t{:&${<prop>}=<pad-char>}\n * \t\t\t{:&<number>{<prop>}=<pad-char>}\n * @example\n * - precision\n * \t\tFor integer specifiers (d,  o, u, x, X): precision specifies the minimum number of digits to be written.\n * \t\tIf the value to be written is shorter than this number, the result is padded with leading zeros.\n * \t\tThe value is not truncated even if the result is longer. A precision of 0 means that no character is written for the value 0.\n * \t\tFor a, A, e, E, f and F specifiers: this is the number of digits to be printed after the decimal point (by default, this is 6).\n * \t\tFor g and G specifiers: This is the maximum number of significant digits to be printed.\n * \t\tFor s: this is the maximum number of characters to be printed. By default all characters are printed until the ending null character is encountered.\n * \t\tIf the period is specified without an explicit value for precision, 0 is assumed.\n * \t\t- precision value\n * \t\t\t{:.<number>}\n * \t\t\t{:.&@}\n * \t\t\t{:.&$}\n * \t\t\t{:.&<number>}\n * \t\t\t{:.&@{<prop>}}\n * \t\t\t{:.&${<prop>}}\n * \t\t\t{:.&<number>{<prop>}}\n * \t\t- shorten suffix\n * \t\t\t{:.&@=\"<suffix>\"}\n * \t\t\t{:.&$=\"<suffix>\"}\n * \t\t\t{:.&<number>=\"<suffix>\"}\n * \t\t\t{:.&@{<prop>}=\"<suffix>\"}\n * \t\t\t{:.&${<prop>}=\"<suffix>\"}\n * \t\t\t{:.&<number>{<prop>}=\"<suffix>\"}\n * - type\n * \t\t- default types\n *\t\t\t- {c}\t\tCharacter\n * \t\t\t- {s}\t\tString\n * \t\t\t- {j}\t\tJSON String\n * \t\t\t- {y}\t\tDate Year\n * \t\t\t- {m}\t\tDate Month\n * \t\t\t- {w}\t\tDate Weekly\n * \t\t\t- {W}\t\tDate Weekly\n * \t\t\t- {D}\t\tDate\n * \t\t\t- {H}\t\tDate\n * \t\t\t- {M}\t\tDate\n * \t\t\t- {S}\t\tDate\n * \t\t\t- {d} \t\tSigned decimal integer\n *\t\t\t- {u}\t\tUnsigned decimal integer\n *\t\t\t- {o}\t\tUnsigned octal\n *\t\t\t- {x}\t\tUnsigned hexadecimal integer\n *\t\t\t- {X}\t\tUnsigned hexadecimal integer (uppercase)\n *\t\t\t- {f}\t\tDecimal floating point, lowercase,\n *\t\t\t- {e}\t\tScientific notation (mantissa/exponent), lowercase\n *\t\t\t- {E}\t\tScientific notation (mantissa/exponent), uppercase\n *\t\t\t- {g}\t\tUse the shortest representation: %e or %f\n *\t\t\t- {G}\t\tUse the shortest representation: %E or %F\n * - Rules\n * \t\t- property-path\n * \t\t\t\t(\n * \t\t\t\t\t(?:\n * \t\t\t\t\t\t[a-zA-Z$_][\\w$_]*|\n * \t\t\t\t\t\t\\[\n * \t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t\\d+|\n * \t\t\t\t\t\t\t\"(?:[^\\\\\"]|\\\\.)*\"|\n * \t\t\t\t\t\t\t'(?:[^\\\\']|\\\\.)*'\n * \t\t\t\t\t\t)\n * \t\t\t\t\t\t\\]\n * \t\t\t\t\t)\n * \t\t\t\t\t(?:\n * \t\t\t\t\t\t\\.[a-zA-Z$_][\\w$_]*|\n * \t\t\t\t\t\t\\[\n * \t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t\\d+|\n * \t\t\t\t\t\t\t\"(?:[^\\\\\"]|\\\\.)*\"|\n * \t\t\t\t\t\t\t'(?:[^\\\\']|\\\\.)*'\n * \t\t\t\t\t\t)\n * \t\t\t\t\t\t\\]\n * \t\t\t\t\t)*\n * \t\t\t\t)\n * \t\t- expression\n * \t\t\t/\\\\.|\t\t\t\t\t\t\t\t\t\t\t\t// escape\n * \t\t\t(\t\t\t\t\t\t\t\t\t\t\t\t\t// 1: expression\n * \t\t\t\t\\{\n * \t\t\t\t(\\d+|\\$|@)?\t\t\t\t\t\t\t\t\t\t// 2: parameter index\n * \t\t\t\t(?:\\{<property-path>\\})?\t\t\t\t\t\t// 3: property path of parameter\n * \t\t\t\t(?:\n * \t\t\t\t\t:\n * \t\t\t\t\t([#,+\\- ]*)\t\t\t\t\t\t\t\t\t// 4: flags\n * \t\t\t\t\t(?:\n * \t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t(\\d+)|\t\t\t\t\t\t\t\t// 5: width\n * \t\t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t\t&\n * \t\t\t\t\t\t\t\t(\\d+|\\$|@)\t\t\t\t\t\t// 6: parameter index of width\n * \t\t\t\t\t\t\t\t(?:\\{<property-path>\\})?\t\t// 7: property path of width parameter\n * \t\t\t\t\t\t\t)\n * \t\t\t\t\t\t)\n * \t\t\t\t\t\t(?:=(.))?\t\t\t\t\t\t\t\t// 8: pad fill\n * \t\t\t\t\t)?\n * \t\t\t\t\t(?:\n * \t\t\t\t\t\t\\.\n * \t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t(\\d+)|\t\t\t\t\t\t\t\t// 9: width\n * \t\t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t\t&\n * \t\t\t\t\t\t\t\t(\\d+|\\$|@)\t\t\t\t\t\t// 10: parameter index of width\n * \t\t\t\t\t\t\t\t(?:\\{<property-path>\\})?\t\t// 11: property path of width parameter\n * \t\t\t\t\t\t\t)\n * \t\t\t\t\t\t)\n * \t\t\t\t\t\t(?:\n * \t\t\t\t\t\t\t=\n * \t\t\t\t\t\t\t\"\n * \t\t\t\t\t\t\t((?:[^\\\\\"]|\\\\.)*)\t\t\t\t\t// 12: shorten su\n * \t\t\t\t\t\t\t\"\n * \t\t\t\t\t\t)\n * \t\t\t\t\t)?\n * \t\t\t\t)?\n * \t\t\t\t([a-zA-Z_][a-zA-Z0-9_$]*)?\t\t\t\t\t\t// 13: data type\n * \t\t\t\t\\}\n * \t\t\t)/\n * @param fmt \t\tformat String\n * @param args\t\tformat arguments\n * @param offset\tstart offset of arguments\n * @param getParam\tget parameter on arguments callback\n */\nexport function vformat<T>(fmt: string, args: T, offset?: number, getParam?: (args: T, idx: number) => any): string {\n\toffset = offset || 0\n\tconst start = offset\n\tgetParam = getParam || defaultGetParam\n\treturn fmt.replace(formatReg, function(\n\t\ts,\n\t\tm,\n\t\tparam,\n\t\tparamProp,\n\t\tflags,\n\t\twidth,\n\t\twidx,\n\t\twprop,\n\t\tfill,\n\t\tprecision,\n\t\tpidx,\n\t\tpprop,\n\t\tshortenSuffix,\n\t\ttype\n\t) {\n\t\tif (!m) return s.charAt(1)\n\t\treturn getFormatter(type)(\n\t\t\tparseParam(param || '$', paramProp),\n\t\t\tparseFlags(flags),\n\t\t\tparseWidth(width, widx, wprop) || 0,\n\t\t\tfill,\n\t\t\tparseWidth(precision, pidx, pprop),\n\t\t\tshortenSuffix\n\t\t)\n\t})\n\n\tfunction parseWidth<T>(width: string, idx: string, prop: string): number {\n\t\tif (width) return (width as any) >> 0\n\t\tif (idx) {\n\t\t\tconst w = parseParam(idx, prop) >> 0\n\t\t\tif (isFinite(w)) return w\n\t\t}\n\t}\n\n\tfunction parseParam<T>(paramIdx: string, prop: string): any {\n\t\tlet param = getParam(\n\t\t\targs,\n\t\t\tparamIdx === '$'\n\t\t\t\t? offset++\n\t\t\t\t: paramIdx === '@'\n\t\t\t\t? offset === start\n\t\t\t\t\t? offset\n\t\t\t\t\t: offset - 1\n\t\t\t\t: (paramIdx as any) >> 0\n\t\t)\n\t\treturn prop ? get(param, prop) : param\n\t}\n}\n\nfunction defaultGetParam(args: any, idx: number) {\n\treturn args[idx]\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                        format                                        *\n *                                                                                      */\n//========================================================================================\n\n/**\n * @see vformat\n * @param fmt\tformat string\n * @param args\tformat arguments\n */\nexport function format(fmt: string, ...args: any): string\nexport function format(fmt: string): string {\n\treturn vformat(fmt, arguments, 0, getFormatParam)\n}\n\nfunction getFormatParam(args: IArguments, idx: number) {\n\treturn args[idx + 1]\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                       formatter                                      *\n *                                                                                      */\n//========================================================================================\n\nconst GET_PARAM_VAR = 'getp',\n\tGET_PROP_VAR = 'get',\n\tSTATE_VAR = 'state'\nfunction createFormatter(m: string[], getParam?: (args: IArguments, idx: number) => any) {\n\treturn createFn(\n\t\t`return function(args, ${STATE_VAR}){\nreturn fmt(${getParamCode(m[2] || '$', m[3])},\n\"${parseFlags(m[4])}\",\n${getWidthCode(m[5], m[6], m[7], '0')},\n\"${m[8] ? escapeStr(m[8]) : ' '}\",\n${getWidthCode(m[9], m[10], m[11], 'void 0')},\n\"${m[12] ? escapeStr(m[12]) : ''}\");\n}`,\n\t\t['fmt', GET_PROP_VAR, GET_PARAM_VAR]\n\t)(getFormatter(m[13]), get, getParam)\n}\n\nfunction getWidthCode(width: string, idx: string, prop: string, def: string): string {\n\treturn width ? width : idx ? getParamCode(idx, prop) : def\n}\n\nfunction getParamCode(idx: string, prop: string): string {\n\tlet code = `${GET_PARAM_VAR}(args, ${\n\t\tidx === '$'\n\t\t\t? `${STATE_VAR}[0]++`\n\t\t\t: idx === '@'\n\t\t\t? `${STATE_VAR}[0] === ${STATE_VAR}[1] ? ${STATE_VAR}[0] : ${STATE_VAR}[0] - 1`\n\t\t\t: idx\n\t})`\n\tif (prop) {\n\t\tconst path = parsePath(prop)\n\t\tvar i = path.length\n\t\tconst strs = new Array(i)\n\t\twhile (i--) strs[i] = `\"${escapeStr(path[i])}\"`\n\t\treturn `${GET_PROP_VAR}(${code}, [${strs.join(', ')}])`\n\t}\n\treturn code\n}\n/**\n * @see vformat\n * @param fmt\t\tformat string\n * @param offset\tstart offset of arguments\n * @param getParam\tget parameter on arguments callback\n */\nexport function formatter(\n\tfmt: string,\n\toffset?: number,\n\tgetParam?: (args: IArguments, idx: number) => any\n): (...args: any[]) => string {\n\tlet m,\n\t\tlastIdx = 0,\n\t\tmStart,\n\t\tmEnd,\n\t\tarr = [],\n\t\tcodes = [],\n\t\ti = 0\n\toffset = offset || 0\n\twhile ((m = formatReg.exec(fmt))) {\n\t\tmEnd = formatReg.lastIndex\n\t\tmStart = mEnd - m[0].length\n\t\tlastIdx < mStart && pushStr(cutStr(fmt, lastIdx, mStart), 0)\n\t\tif (m[1]) {\n\t\t\tcodes[i] = `arr[${i}](arguments, ${STATE_VAR})`\n\t\t\tarr[i++] = createFormatter(m, getParam || defaultGetParam)\n\t\t} else {\n\t\t\tpushStr(m[0].charAt(1), i)\n\t\t}\n\t\tlastIdx = mEnd\n\t}\n\tlastIdx < fmt.length && pushStr(cutStr(fmt, lastIdx), i)\n\treturn createFn(`return function(){var ${STATE_VAR} = [${offset}, ${offset}]; return ${codes.join(' + ')}}`, [\n\t\t'arr'\n\t])(arr)\n\n\tfunction pushStr(str, append) {\n\t\tif (append && arr[i - 1].match) {\n\t\t\tarr[i - 1] += str\n\t\t} else {\n\t\t\tcodes[i] = `arr[${i}]`\n\t\t\tarr[i++] = str\n\t\t}\n\t}\n}\n/*\nsetTimeout(() => {\n\tvar f,\n\t\tn = 100000\n\tconsole.time()\n\tfor (var i = 0; i < n; i++) {\n\t\tf = formatter(`{:.10=\"...\"}`)\n\t}\n\tconsole.timeEnd()\n\tconsole.time()\n\tfor (var i = 0; i < n; i++) {\n\t\tf('abbdddded')\n\t}\n\tconsole.timeEnd()\n\tconsole.time()\n\tfor (var i = 0; i < n; i++) {\n\t\tformat(`{:.10=\"...\"}`, 'abbdddded')\n\t}\n\tconsole.timeEnd()\n\tconsole.log(formatter(`{:.10=\"...\"}`).toString())\n}) */\n//========================================================================================\n/*                                                                                      *\n *                                  default formatters                                  *\n *                                                                                      */\n//========================================================================================\n\nfunction strFormatter(toStr: (val: any, flags: FormatFlags) => string): FormatCallback {\n\treturn function(val, flags, width, fill, precision, shortenSuffix) {\n\t\tconst str = toStr(val, flags)\n\t\treturn width > str.length\n\t\t\t? __pad(str, width, fill, flags & FORMAT_LEFT)\n\t\t\t: shorten(str, precision, shortenSuffix)\n\t}\n}\n\nfunction numFormatter(\n\tparseNum: (val: any) => number,\n\tgetPrefix: (num: number, flags: FormatFlags) => string,\n\ttoStr: (num: number, flags: FormatFlags, precision: number) => string,\n\tseparator: (numStr: string) => string\n): FormatCallback {\n\treturn function(val, flags, width, fill, precision) {\n\t\tconst num = parseNum(val)\n\t\tif (!isFinite(num)) return String(num)\n\n\t\tconst prefix = getPrefix(num, flags),\n\t\t\tplen = prefix.length\n\t\tlet str = toStr(num < 0 ? -num : num, flags, precision)\n\n\t\treturn flags & FORMAT_ZERO\n\t\t\t? ((str = prefix + pad(str, width - plen, '0')), flags & FORMAT_SEPARATOR ? separator(str) : str)\n\t\t\t: (flags & FORMAT_SEPARATOR && (str = separator(str)), pad(prefix + str, width, fill, flags & FORMAT_LEFT))\n\t}\n}\n\nfunction decimalPrefix(num: number, flags: FormatFlags): string {\n\treturn num < 0 ? '-' : flags & FORMAT_PLUS ? '+' : flags & FORMAT_SPACE ? ' ' : ''\n}\n\n//──── base formatter ───────────────────────────────────────────────────────────────────────\nconst BASE_RADIXS = {\n\tb: [2, binarySeparate],\n\to: [8, octalSeparate],\n\tu: [10, thousandSeparate],\n\tx: [16, hexSeparate]\n}\nconst BASE_PREFIXS = ['0b', '0o', '0x']\nfunction baseFormatter(type: string): FormatCallback {\n\tconst base = BASE_RADIXS[type.toLowerCase()],\n\t\tn = base[0],\n\t\t__toStr = num => num.toString(n),\n\t\ttoStr = type === 'X' ? num => upper(__toStr(num)) : __toStr\n\tlet xprefix = n === 10 ? '' : BASE_PREFIXS[n >> 3]\n\tcharCode(type) < 96 && (xprefix = upper(xprefix))\n\treturn numFormatter(v => v >>> 0, (num, flags) => (flags & FORMAT_XPREFIX ? xprefix : ''), toStr, base[1])\n}\n\n//──── float formatter ───────────────────────────────────────────────────────────────────\nfunction floatFormatter(type: string): FormatCallback {\n\tconst ____toStr = upper(type) === 'E' ? toExponential : type === 'f' ? toFixed : toPrecision,\n\t\t__toStr = (num, flags, precision) => ____toStr(num, precision) || String(num),\n\t\ttoStr = charCode(type) > 96 ? __toStr : (num, flags, precision) => upper(__toStr(num, flags, precision))\n\treturn numFormatter(parseFloat, decimalPrefix, toStr, thousandSeparate)\n}\n\nfunction toExponential(num: number, precision: number): string {\n\treturn num.toExponential(precision)\n}\nfunction toPrecision(num: number, precision: number): string {\n\treturn precision && num.toPrecision(precision)\n}\nfunction toFixed(num: number, precision: number): string {\n\treturn precision >= 0 && num.toFixed(precision)\n}\n\n//──── register formatters ───────────────────────────────────────────────────────────────\nextendFormatter({\n\ts: strFormatter(toStr),\n\tj: strFormatter(v =>\n\t\tv === undefined || isFn(v) || (v.toJSON && v.toJSON() === undefined) ? toStr(v) : JSON.stringify(v)\n\t),\n\tc(val: any) {\n\t\tconst num = val >> 0\n\t\treturn num > 0 ? String.fromCharCode(num) : ''\n\t},\n\td: numFormatter(val => val >> 0, decimalPrefix, toStr, thousandSeparate),\n\te: floatFormatter('e'),\n\tE: floatFormatter('E'),\n\tf: floatFormatter('f'),\n\tg: floatFormatter('g'),\n\tG: floatFormatter('G'),\n\tb: baseFormatter('b'),\n\tB: baseFormatter('B'),\n\to: baseFormatter('o'),\n\tO: baseFormatter('O'),\n\tu: baseFormatter('u'),\n\tx: baseFormatter('x'),\n\tX: baseFormatter('X')\n})\n\nfunction toStr(v: any): string {\n\treturn String(v)\n}\n","/**\n * Object.assign shim\n * @module utility/assign\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:22:13 GMT+0800 (China Standard Time)\n * @modified Tue Nov 27 2018 14:03:59 GMT+0800 (China Standard Time)\n */\nimport { hasOwnProp } from './prop'\n\n/**\n * @param prop\n * @param target\n * @param override\n * @return is assign\n */\nexport type AssignFilter = (prop: string, target: any, override: any) => boolean\n\n/**\n *\n * @param target\n * @param overrides\n * @param filter\n * @param startOffset \tstart offset in overrides, default: 0\n * @param endOffset \tend offset in overrides, default: overrides.length-1\n */\nexport function doAssign(\n\ttarget: any,\n\toverrides: object[] | IArguments,\n\tfilter: AssignFilter,\n\tstartOffset?: number,\n\tendOffset?: number\n): any {\n\tif (!target) {\n\t\ttarget = {}\n\t}\n\tconst l = endOffset || overrides.length - 1\n\tlet i = startOffset || 0,\n\t\toverride,\n\t\tprop\n\tfor (; i < l; i++) {\n\t\tif ((override = overrides[i])) {\n\t\t\tfor (prop in override) {\n\t\t\t\tif (filter(prop, target, override)) {\n\t\t\t\t\ttarget[prop] = override[prop]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * assign properties\n * > Object.assign shim\n */\nexport function assign(target: any, ...args: any[]): any\nexport function assign(target: any): any {\n\treturn doAssign(target, arguments, defaultAssignFilter, 1)\n}\n\n/**\n * assign un-exist properties\n */\nexport function assignIf(target: any, ...args: any[]): any\nexport function assignIf(target: any): any {\n\treturn doAssign(target, arguments, assignIfFilter, 1)\n}\n\n/**\n * default assign filter\n * - property is owner in override\n * @see {AssignFilter}\n */\nexport function defaultAssignFilter(prop: string, target: any, override: any): boolean {\n\treturn hasOwnProp(override, prop)\n}\n\n/**\n * assign if filter\n * - property is owner in override\n * - property not in target object\n * @see {AssignFilter}\n */\nexport function assignIfFilter(prop: string, target: any, override: any): boolean {\n\treturn hasOwnProp(override, prop) && !(prop in target)\n}\n","/**\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:24:47 GMT+0800 (China Standard Time)\n * @modified Tue Feb 19 2019 11:53:18 GMT+0800 (China Standard Time)\n */\nimport { eq, isReg, isTypedArray, isDate, isArray, isPrimitive } from './is'\nimport { hasOwnProp } from './prop'\nimport { create } from './create'\nimport { getConstructor } from './constructor'\n\nconst REG_PROPS = ['source', 'global', 'ignoreCase', 'multiline']\n\nexport function deepEq(actual: any, expected: any): boolean {\n\tif (eq(actual, expected)) return true\n\tif (actual && expected && getConstructor(actual) === getConstructor(expected)) {\n\t\tif (isPrimitive(actual)) return String(actual) === String(expected)\n\t\tif (isDate(actual)) return actual.getTime() === expected.getTime()\n\t\tif (isReg(actual)) return eqProps(actual, expected, REG_PROPS)\n\t\tif (isArray(actual)) return eqArray(actual, expected, deepEq)\n\t\tif (isTypedArray(actual)) return eqArray(actual, expected, eq)\n\t\treturn eqObj(actual, expected)\n\t}\n\treturn false\n}\n\nfunction eqProps(actual: any, expected: any, props: string[]): boolean {\n\tlet i = props.length\n\twhile (i--)\n\t\tif (actual[props[i]] !== expected[props[i]]) {\n\t\t\treturn false\n\t\t}\n\treturn true\n}\n\nfunction eqArray(actual: any, expected: any, eq: (actual: any, expected: any) => boolean) {\n\tlet i = actual.length\n\tif (i !== expected.length) {\n\t\treturn false\n\t}\n\twhile (i--)\n\t\tif (!eq(actual[i], expected[i])) {\n\t\t\treturn false\n\t\t}\n\treturn true\n}\n\nfunction eqObj(actual: any, expected: any): boolean {\n\tconst cache = create(null)\n\tlet k: string\n\tfor (k in actual) {\n\t\tif (notEqObjKey(actual, expected, k)) {\n\t\t\treturn false\n\t\t}\n\t\tcache[k] = true\n\t}\n\tfor (k in expected) {\n\t\tif (!cache[k] && notEqObjKey(actual, expected, k)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nfunction notEqObjKey(actual: any, expected: any, k: string): boolean {\n\treturn hasOwnProp(actual, k) ? !hasOwnProp(expected, k) || !deepEq(actual[k], expected[k]) : hasOwnProp(expected, k)\n}\n","/**\n * @module utility/assert\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Nov 28 2018 11:01:45 GMT+0800 (China Standard Time)\n * @modified Tue Feb 19 2019 10:38:22 GMT+0800 (China Standard Time)\n */\n\nimport {\n\teq,\n\tisBool,\n\tisNum,\n\tisStr,\n\tisBoolean,\n\tisNumber,\n\tisString,\n\tisDate,\n\tisNull,\n\tisUndef,\n\tisNil,\n\tisFn,\n\tisInt,\n\tisPrimitive,\n\tisReg,\n\tisArray,\n\tisArrayLike,\n\tisTypedArray,\n\tisObj,\n\tisBlank\n} from '../utility/is'\nimport { create } from './create'\nimport { upperFirst, escapeStr } from '../utility/string'\nimport { createFn } from '../utility/fn'\nimport { eachObj, makeArray } from '../utility/collection'\nimport { formatter } from './format'\nimport { deepEq } from './deepEq'\nimport { TYPE_UNDEF, TYPE_FN, TYPE_STRING, TYPE_NUM, TYPE_BOOL } from './consts'\n\nconst formatters = [],\n\tformatArgHandlers: ((args: any[] | IArguments, offset: number) => any)[] = []\nfunction parseMessage(msg: string, args: any[] | IArguments, msgIdx: number): string {\n\tlet fs = formatters[msgIdx]\n\tif (!fs) {\n\t\tformatArgHandlers[msgIdx] = (args, offset) => args[0][offset >= msgIdx ? offset + 1 : offset]\n\t\tformatters[msgIdx] = fs = create(null)\n\t}\n\treturn (fs[msg] || (fs[msg] = formatter(msg, msgIdx, formatArgHandlers[msgIdx])))(args)\n}\n\nexport interface assert {\n\t(msg?: string, ...args: any[]): never\n\tis(actual: any, msg?: string, ...args: any[]): assert\n\tnot(actual: any, msg?: string, ...args: any[]): assert\n\teq(actual: any, expect: any, msg?: string, ...args: any[]): assert\n\teql(actual: any, expect: any, msg?: string, ...args: any[]): assert\n\tblank(actual: any, msg?: string, ...args: any[]): assert\n\tnul(actual: any, msg?: string, ...args: any[]): assert\n\tnil(actual: any, msg?: string, ...args: any[]): assert\n\tundef(actual: any, msg?: string, ...args: any[]): assert\n\tbool(actual: any, msg?: string, ...args: any[]): assert\n\tnum(actual: any, msg?: string, ...args: any[]): assert\n\tint(actual: any, msg?: string, ...args: any[]): assert\n\tstr(actual: any, msg?: string, ...args: any[]): assert\n\tfn(actual: any, msg?: string, ...args: any[]): assert\n\tprimitive(actual: any, msg?: string, ...args: any[]): assert\n\tboolean(actual: any, msg?: string, ...args: any[]): assert\n\tnumber(actual: any, msg?: string, ...args: any[]): assert\n\tstring(actual: any, msg?: string, ...args: any[]): assert\n\tdate(actual: any, msg?: string, ...args: any[]): assert\n\treg(actual: any, msg?: string, ...args: any[]): assert\n\tarray(actual: any, msg?: string, ...args: any[]): assert\n\ttypedArray(actual: any, msg?: string, ...args: any[]): assert\n\tarrayLike(actual: any, msg?: string, ...args: any[]): assert\n\tobj(actual: any, msg?: string, ...args: any[]): assert\n\tnan(actual: any, msg?: string, ...args: any[]): assert\n\tfinite(actual: number | string, msg?: string, ...args: any[]): assert\n\tless(actual: number, expect: number, msg?: string, ...args: any[]): assert\n\tgreater(actual: number, expect: number, msg?: string, ...args: any[]): assert\n\tmatch(actual: string, expect: any, msg?: string, ...args: any[]): assert\n\trange(actual: number, start: number, end: number, msg?: string, ...args: any[]): assert\n\n\tnotEq(actual: any, expect: any, msg?: string, ...args: any[]): assert\n\tnotEql(actual: any, expect: any, msg?: string, ...args: any[]): assert\n\tnotBlank(actual: any, msg?: string, ...args: any[]): assert\n\tnotNul(actual: any, msg?: string, ...args: any[]): assert\n\tnotNil(actual: any, msg?: string, ...args: any[]): assert\n\tnotUndef(actual: any, msg?: string, ...args: any[]): assert\n\tnotBool(actual: any, msg?: string, ...args: any[]): assert\n\tnotNum(actual: any, msg?: string, ...args: any[]): assert\n\tnotInt(actual: any, msg?: string, ...args: any[]): assert\n\tnotStr(actual: any, msg?: string, ...args: any[]): assert\n\tnotFn(actual: any, msg?: string, ...args: any[]): assert\n\tnotPrimitive(actual: any, msg?: string, ...args: any[]): assert\n\tnotBoolean(actual: any, msg?: string, ...args: any[]): assert\n\tnotNumber(actual: any, msg?: string, ...args: any[]): assert\n\tnotString(actual: any, msg?: string, ...args: any[]): assert\n\tnotDate(actual: any, msg?: string, ...args: any[]): assert\n\tnotReg(actual: any, msg?: string, ...args: any[]): assert\n\tnotArray(actual: any, msg?: string, ...args: any[]): assert\n\tnotTypedArray(actual: any, msg?: string, ...args: any[]): assert\n\tnotArrayLike(actual: any, msg?: string, ...args: any[]): assert\n\tnotObj(actual: any, msg?: string, ...args: any[]): assert\n\tnotNan(actual: any, msg?: string, ...args: any[]): assert\n\tnotFinite(actual: any, msg?: string, ...args: any[]): assert\n\tthrow(fn: () => any, err: Error | string, msg?: string, ...args: any[]): assert\n\tnotThrow(fn: () => any, err: Error | string, msg?: string, ...args: any[]): assert\n\tnotLess(actual: number, expect: number, msg?: string, ...args: any[]): assert\n\tnotGreater(actual: number, expect: number, msg?: string, ...args: any[]): assert\n\tnotMatch(actual: string, expect: any, msg?: string, ...args: any[]): assert\n\tnotRange(actual: number, start: number, end: number, msg?: string, ...args: any[]): assert\n}\n\nexport const assert = function assert(msg?: string): never {\n\tthrow new Error(parseMessage(msg || 'Error', arguments, 0))\n} as assert\n\nfunction catchErr(fn: () => any): Error {\n\ttry {\n\t\tfn()\n\t} catch (e) {\n\t\treturn e\n\t}\n}\n\nfunction checkErr(expect: Error | string, err: Error): boolean {\n\tlet msg = isStr(expect) ? (expect as string) : (expect as Error).message\n\treturn msg === err.message\n}\nconst ERROR = new Error()\nconst throwMsg = mkMsg(objFormatter(1), 'throw')\nassert.throw = function(fn: () => any, expect: Error | string, msg?: string): assert {\n\tconst err = catchErr(fn)\n\tif (!err || (expect && !checkErr(expect, err))) {\n\t\targuments[0] = err\n\t\t!expect && (arguments[2] = ERROR)\n\t\tthrow new Error(parseMessage(msg || throwMsg[0], arguments, 2))\n\t}\n\treturn assert\n}\n\nassert.notThrow = function(fn: () => any, expect: Error | string, msg?: string): assert {\n\tconst err = catchErr(fn)\n\tif (err && (!expect || !checkErr(expect, err))) {\n\t\targuments[0] = err\n\t\t!expect && (arguments[2] = ERROR)\n\t\tthrow new Error(parseMessage(msg || throwMsg[0], arguments, 2))\n\t}\n\treturn assert\n}\n\nfunction extendAssert<T extends Function>(\n\tname: string,\n\tcondition: string | ((...args: any) => boolean) | [string | ((...args: any) => boolean), string?],\n\targs: string | number | string[],\n\tdmsg: string,\n\tErr?: { new (message?: string): Error }\n): T {\n\tconst params: string[] = isStr(args)\n\t\t\t? (args as string).split(/,/g)\n\t\t\t: isNum(args)\n\t\t\t? makeArray(args as number, i => `arg${i + 1}`)\n\t\t\t: (args as string[]),\n\t\tparamStr = params.join(', '),\n\t\tcond = isArray(condition) ? condition[0] : condition,\n\t\texpr = (isArray(condition) ? condition[1] : '') + (isStr(cond) ? `(${cond})` : `cond(${paramStr})`)\n\n\treturn (assert[name] = createFn(\n\t\t`return function assert${upperFirst(name)}(${paramStr}, msg){\n\tif (${expr})\n\t\tthrow new Err(parseMsg(msg || dmsg, arguments, ${params.length}));\n\treturn assert;\n}`,\n\t\t['Err', 'parseMsg', 'dmsg', 'cond', 'assert']\n\t)(Err || Error, parseMessage, dmsg, cond, assert))\n}\n\ntype APIDescriptor = [\n\tstring | ((...args: any) => boolean), // condition\n\tstring | number | string[], // arguments\n\t[string, string], // expect or [err msg, not err msg]\n\t({ new (message?: string): Error })?\n]\n\n// [condition, argcount?, [msg, not msg], Error]\nfunction extendAsserts(apis: { [method: string]: APIDescriptor }) {\n\teachObj(apis, (desc: APIDescriptor, name) => {\n\t\tconst condition = desc[0],\n\t\t\targs = desc[1],\n\t\t\tmsg = desc[2],\n\t\t\tErr = desc[3] || TypeError\n\n\t\tmsg[0] && extendAssert(name, [condition, '!'], args, msg[0], Err)\n\t\tmsg[1] && extendAssert('not' + upperFirst(name), condition, args, msg[1], Err)\n\t})\n}\n\nconst UNDEFINED = TYPE_UNDEF,\n\tBOOLEAN = TYPE_BOOL,\n\tNUMBER = TYPE_NUM,\n\tSTRING = TYPE_STRING,\n\tFUNCTION = TYPE_FN,\n\tNULL = 'null',\n\tINTEGER = 'integer',\n\tARRAY = 'Array',\n\tTYPED_ARRAY = 'TypedArray'\n\nextendAssert('is', '!o', 'o', expectMsg('Exist'))\nextendAssert('not', 'o', 'o', expectMsg('Not Exist'))\nextendAsserts({\n\teq: [eq, 2, mkMsg(objFormatter(1))],\n\teql: [deepEq, 2, mkMsg(objFormatter(1))],\n\tnul: [isNull, 1, mkMsg(NULL)],\n\tnil: [isNil, 1, mkMsg(typeExpect(NULL, UNDEFINED))],\n\tundef: [isUndef, 1, mkMsg(UNDEFINED)],\n\tbool: [isBool, 1, mkMsg(BOOLEAN)],\n\tnum: [isNum, 1, mkMsg(NUMBER)],\n\tint: [isInt, 1, mkMsg(INTEGER)],\n\tstr: [isStr, 1, mkMsg(STRING)],\n\tfn: [isFn, 1, mkMsg(FUNCTION)],\n\tprimitive: [\n\t\tisPrimitive,\n\t\t1,\n\t\tmkMsg(`Primitive type(${typeExpect(NULL, UNDEFINED, BOOLEAN, NUMBER, INTEGER, STRING, FUNCTION)})`)\n\t],\n\tboolean: [isBoolean, 1, mkMsg(packTypeExpect(BOOLEAN))],\n\tnumber: [isNumber, 1, mkMsg(packTypeExpect(NUMBER))],\n\tstring: [isString, 1, mkMsg(packTypeExpect(STRING))],\n\tdate: [isDate, 1, mkMsg('Date')],\n\treg: [isReg, 1, mkMsg('RegExp')],\n\tarray: [isArray, 1, mkMsg(ARRAY)],\n\ttypedArray: [isTypedArray, 1, mkMsg('TypedArray')],\n\tarrayLike: [\n\t\tisArrayLike,\n\t\t1,\n\t\tmkMsg(typeExpect(ARRAY, packTypeExpect(STRING), 'Arguments', TYPED_ARRAY, 'NodeList', 'HTMLCollection'))\n\t],\n\tobj: [isObj, 1, mkMsg('Object')],\n\tnan: [isNaN, 1, mkMsg('NaN')],\n\tfinite: [isFinite, 1, mkMsg('Finite')],\n\tblank: [isBlank, 1, mkMsg('Blank')],\n\tless: ['o<t', 'o,t', mkMsg(objFormatter(1), 'less than')],\n\tgreater: ['o>t', 'o,t', mkMsg(objFormatter(1), 'greater than')],\n\tmatch: ['reg.test(str)', 'str,reg', mkMsg(objFormatter(1), 'match')],\n\trange: ['o>=s&&o<e', 'o,s,e', mkMsg(`[{1} - {2})`)]\n})\n\nfunction mkMsg(expect: string, to?: string): [string, string] {\n\treturn [expectMsg(expect, false, to), expectMsg(expect, true, to)]\n}\nfunction expectMsg(expect: string, not?: boolean, to?: string): string {\n\treturn `Expected ${objFormatter(0)} ${not ? 'not ' : ''}${to || 'to'} ${expect}`\n}\n\nfunction objFormatter(idx: number): string {\n\treturn `{${idx}:.80=\"...\"j}`\n}\n\nfunction packTypeExpect(base: string, all?: boolean): string {\n\treturn all ? typeExpect(base, upperFirst(base)) : upperFirst(base)\n}\nfunction typeExpect(...types: string[]): string\nfunction typeExpect(): string {\n\treturn Array.prototype.join.call(arguments, ' | ')\n}\n","/**\n * Double Linked List\n * @module utility/List\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 14:35:32 GMT+0800 (China Standard Time)\n * @modified Fri Feb 22 2019 16:45:27 GMT+0800 (China Standard Time)\n */\n\nimport { bind } from '../fn'\nimport { defPropValue } from '../prop'\nimport { assert } from '../assert'\nimport { EMPTY_FN } from '../consts'\n\nconst DEFAULT_BINDING = '__list__'\n\ninterface ListNode<T> extends Array<any> {\n\t0: T\n\t1?: ListNode<T>\n\t2?: ListNode<T>\n\t3?: List<T>\n\ttoJSON?: () => any\n}\n//type ListNode = [ListElement, IListNode, IListNode, List]\n\nexport class List<T> {\n\tstatic readonly binding: string = DEFAULT_BINDING\n\n\treadonly binding: string\n\tprivate __head?: ListNode<T>\n\tprivate __tail?: ListNode<T>\n\tprivate __length: number = 0\n\tprivate __scaning: boolean = false\n\tprivate __lazyRemoves?: ListNode<T>[]\n\tconstructor(binding?: string) {\n\t\tthis.binding = binding || DEFAULT_BINDING\n\t}\n\tsize(): number {\n\t\treturn this.__length\n\t}\n\thas(obj: T): boolean {\n\t\tconst node: ListNode<T> = obj[this.binding]\n\t\treturn node ? node[0] === obj && node[3] === this : false\n\t}\n\t/**\n\t *\n\t * @param obj\n\t * @return new length\n\t */\n\tadd(obj: T): number {\n\t\treturn this.__insert(obj, this.__tail)\n\t}\n\t/**\n\t *\n\t * @param obj\n\t * @return new length\n\t */\n\taddFirst(obj: T): number {\n\t\treturn this.__insert(obj)\n\t}\n\t/**\n\t *\n\t * @param obj\n\t * @return new length\n\t */\n\tinsertAfter(obj: T, target?: T): number {\n\t\treturn this.__insert(obj, target && this.__getNode(target))\n\t}\n\t/**\n\t *\n\t * @param obj\n\t * @return new length\n\t */\n\tinsertBefore(obj: T, target?: T): number {\n\t\treturn this.__insert(obj, target && this.__getNode(target)[1])\n\t}\n\t/**\n\t *\n\t * @param objs\n\t * @return new length\n\t */\n\taddAll(objs: T[]): number {\n\t\treturn this.__insertAll(objs, this.__tail)\n\t}\n\taddFirstAll(objs: T[]): number {\n\t\treturn this.__insertAll(objs)\n\t}\n\tinsertAfterAll(objs: T[], target?: T): number {\n\t\treturn this.__insertAll(objs, target && this.__getNode(target))\n\t}\n\tinsertBeforeAll(objs: T[], target?: T): number {\n\t\treturn this.__insertAll(objs, target && this.__getNode(target)[1])\n\t}\n\tprev(obj: T): T {\n\t\treturn this.__siblingObj(obj, 1)\n\t}\n\tnext(obj: T): T {\n\t\treturn this.__siblingObj(obj, 2)\n\t}\n\tfirst(): T {\n\t\tconst node: ListNode<T> = this.__head\n\t\treturn node && node[0]\n\t}\n\tlast(): T {\n\t\tconst node: ListNode<T> = this.__tail\n\t\treturn node && node[0]\n\t}\n\teach(cb: (obj: T) => boolean | void, scope?: any) {\n\t\tif (this.__length) {\n\t\t\tassert.not(this.__scaning, 'Nested calls are not allowed.')\n\t\t\tthis.__scaning = true\n\t\t\tcb = bind(cb, scope)\n\t\t\tvar node = this.__head\n\t\t\twhile (node) {\n\t\t\t\tif (node[3] === this && cb(node[0]) === false) break\n\t\t\t\tnode = node[2]\n\t\t\t}\n\t\t\tthis.__doLazyRemove()\n\t\t\tthis.__scaning = false\n\t\t}\n\t}\n\ttoArray(): T[] {\n\t\tconst array: T[] = new Array(this.__length)\n\t\tlet node = this.__head,\n\t\t\ti = 0\n\t\twhile (node) {\n\t\t\tif (node[3] === this) array[i++] = node[0]\n\t\t\tnode = node[2]\n\t\t}\n\t\treturn array\n\t}\n\t/**\n\t *\n\t * @param obj\n\t * @return new length\n\t */\n\tremove(obj: T): number {\n\t\treturn this.__remove(this.__getNode(obj))\n\t}\n\tpop() {}\n\tclean() {\n\t\tif (this.__length) {\n\t\t\tif (this.__scaning) {\n\t\t\t\tvar node = this.__head\n\t\t\t\twhile (node) {\n\t\t\t\t\tnode[3] === this && this.__lazyRemove(node)\n\t\t\t\t\tnode = node[2]\n\t\t\t\t}\n\t\t\t\tthis.__length = 0\n\t\t\t} else {\n\t\t\t\tthis.__clean()\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate __initNode(obj: T): ListNode<T> {\n\t\tconst { binding } = this\n\t\tlet node: ListNode<T> = obj[binding]\n\t\tif (node && node[0] === obj) {\n\t\t\tif (node[3] === this) {\n\t\t\t\tthis.__remove(node)\n\t\t\t\treturn this.__initNode(obj)\n\t\t\t} else if (node[3]) {\n\t\t\t\tassert('Object is still in some List')\n\t\t\t}\n\t\t} else {\n\t\t\tnode = [obj]\n\t\t\tnode.toJSON = EMPTY_FN\n\t\t\tdefPropValue(obj, binding, node, false)\n\t\t}\n\t\tnode[3] = this\n\t\treturn node\n\t}\n\n\tprivate __getNode(obj: T): ListNode<T> {\n\t\tconst node: ListNode<T> = obj[this.binding]\n\t\tassert.is(node && node[3] === this, 'Object is not in this List')\n\t\treturn node\n\t}\n\n\tprivate __siblingObj(obj: T, siblingIdx: number): T {\n\t\tconst node: ListNode<T> = this.__getNode(obj)\n\t\tlet sibling: ListNode<T> = node[siblingIdx]\n\t\tif (sibling) {\n\t\t\twhile (!sibling[3]) {\n\t\t\t\tsibling = sibling[siblingIdx]\n\t\t\t\tif (!sibling) return\n\t\t\t}\n\t\t\treturn sibling[0]\n\t\t}\n\t}\n\n\tprivate __doInsert(nodeHead: ListNode<T>, nodeTail: ListNode<T>, len: number, prev?: ListNode<T>): number {\n\t\tlet next: ListNode<T>\n\t\tnodeHead[1] = prev\n\t\tif (prev) {\n\t\t\tnodeTail[2] = next = prev[2]\n\t\t\tprev[2] = nodeHead\n\t\t} else {\n\t\t\tnodeTail[2] = next = this.__head\n\t\t\tthis.__head = nodeHead\n\t\t}\n\t\tif (next) next[1] = nodeTail\n\t\telse this.__tail = nodeTail\n\t\treturn (this.__length += len)\n\t}\n\n\tprivate __insert(obj: T, prev?: ListNode<T>): number {\n\t\tconst node = this.__initNode(obj)\n\t\treturn this.__doInsert(node, node, 1, prev)\n\t}\n\n\tprivate __insertAll(objs: T[], prev?: ListNode<T>): number {\n\t\tlet l = objs.length\n\t\tif (l) {\n\t\t\tconst head = this.__initNode(objs[0])\n\t\t\tvar __prev = head,\n\t\t\t\ttail = head,\n\t\t\t\ti = 1\n\t\t\tfor (; i < l; i++) {\n\t\t\t\ttail = this.__initNode(objs[i])\n\t\t\t\ttail[1] = __prev\n\t\t\t\t__prev[2] = tail\n\t\t\t\t__prev = tail\n\t\t\t}\n\t\t\treturn this.__doInsert(head, tail, l, prev)\n\t\t}\n\t\treturn -1\n\t}\n\n\tprivate __remove(node: ListNode<T>): number {\n\t\tthis.__scaning ? this.__lazyRemove(node) : this.__doRemove(node)\n\t\treturn --this.__length\n\t}\n\n\tprivate __lazyRemove(node: ListNode<T>): void {\n\t\tconst { __lazyRemoves: lazyRemoves } = this\n\t\tnode[0][this.binding] = undefined // unbind this node\n\t\tnode[3] = null\n\t\tif (lazyRemoves) {\n\t\t\tlazyRemoves.push(node)\n\t\t} else {\n\t\t\tthis.__lazyRemoves = [node]\n\t\t}\n\t}\n\n\tprivate __doLazyRemove() {\n\t\tconst { __lazyRemoves: lazyRemoves } = this\n\t\tif (lazyRemoves) {\n\t\t\tvar len = lazyRemoves.length\n\t\t\tif (len) {\n\t\t\t\tif (this.__length) {\n\t\t\t\t\twhile (len--) this.__doRemove(lazyRemoves[len])\n\t\t\t\t} else {\n\t\t\t\t\tthis.__clean()\n\t\t\t\t}\n\t\t\t\tlazyRemoves.length = 0\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate __doRemove(node: ListNode<T>) {\n\t\tconst prev = node[1],\n\t\t\tnext = node[2]\n\t\tif (prev) {\n\t\t\tprev[2] = next\n\t\t} else {\n\t\t\tthis.__head = next\n\t\t}\n\t\tif (next) {\n\t\t\tnext[1] = prev\n\t\t} else {\n\t\t\tthis.__tail = prev\n\t\t}\n\t\tnode[1] = node[2] = node[3] = null\n\t}\n\n\tprivate __clean() {\n\t\tlet node: ListNode<T>,\n\t\t\tnext = this.__head\n\t\twhile ((node = next)) {\n\t\t\tnext = node[2]\n\t\t\tnode.length = 1\n\t\t}\n\t\tthis.__head = undefined\n\t\tthis.__tail = undefined\n\t\tthis.__length = 0\n\t}\n}\n","/**\n * Function List\n * @module utility/List\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 14:35:32 GMT+0800 (China Standard Time)\n * @modified Thu Feb 28 2019 09:50:35 GMT+0800 (China Standard Time)\n */\n\nimport { List } from './List'\nimport { create } from '../create'\nimport { defPropValue } from '../prop'\n\nconst DEFAULT_FN_BINDING = '__flist_id__'\nconst DEFAULT_SCOPE_BINDING = DEFAULT_FN_BINDING\n\ntype FnNode<T extends Function> = [string, T, any, any]\nexport class FnList<T extends Function> {\n\tstatic readonly fnBinding: string = DEFAULT_FN_BINDING\n\tstatic readonly scopeBinding: string = DEFAULT_SCOPE_BINDING\n\n\treadonly fnBinding: string\n\treadonly scopeBinding: string\n\tprivate readonly __list: List<FnNode<T>>\n\tprivate __nodeMap: { [key: string]: FnNode<T> }\n\n\tconstructor(fnBinding?: string, scopeBinding?: string) {\n\t\tthis.__nodeMap = create(null)\n\t\tthis.__list = new List()\n\t\tthis.fnBinding = fnBinding || DEFAULT_FN_BINDING\n\t\tthis.scopeBinding = scopeBinding || DEFAULT_SCOPE_BINDING\n\t}\n\t/**\n\t * add executable function\n\t * @param fn\t\tfunction\n\t * @param scope\t\tscope of function\n\t * @param data\t\tuser data of [function + scope]\n\t * @return executable function id, can remove executable function by id: {@link FnList#removeId}\n\t */\n\tadd(fn: T, scope?: any, data?: any): string {\n\t\tscope = parseScope(scope)\n\t\tconst { __list: list, __nodeMap: nodeMap } = this\n\t\tconst id = this.id(fn, scope)\n\t\tlet node = nodeMap[id]\n\t\tif (!node) {\n\t\t\tnode = [id, fn, scope, data]\n\t\t\tif (list.add(node)) nodeMap[id] = node\n\t\t\treturn id\n\t\t}\n\t}\n\n\t/**\n\t * remove executable function by id\n\t *\n\t * @param id\n\t */\n\tremoveId(id: string): number {\n\t\tconst { __list: list, __nodeMap: nodeMap } = this\n\t\tconst node = nodeMap[id]\n\t\tif (node) {\n\t\t\tnodeMap[id] = undefined\n\t\t\treturn list.remove(node)\n\t\t}\n\t\treturn -1\n\t}\n\tremove(fn: T, scope?: any): number {\n\t\treturn this.removeId(this.id(fn, parseScope(scope)))\n\t}\n\thas(fn: T, scope?: any): boolean {\n\t\treturn !!this.__nodeMap[this.id(fn, parseScope(scope))]\n\t}\n\tsize(): number {\n\t\treturn this.__list.size()\n\t}\n\tclean() {\n\t\tthis.__nodeMap = create(null)\n\t\tthis.__list.clean()\n\t}\n\teach(cb: (fn: T, scope: any, data: any, __node: FnNode<T>) => boolean | void, scope?: any) {\n\t\tcb = cb.bind(scope)\n\t\tthis.__list.each(node => cb(node[1], node[2], node[3], node))\n\t}\n\tid(fn: T, scope?: any): string {\n\t\tconst { fnBinding, scopeBinding } = this\n\n\t\tlet fnId = fn[fnBinding],\n\t\t\tscopeId = scope ? scope[scopeBinding] : DEFAULT_SCOPE_ID\n\t\tif (!fnId) fnId = defPropValue(fn, fnBinding, ++fnIdGenerator, false, false, false)\n\t\tif (!scopeId) scopeId = defPropValue(scope, scopeBinding, ++scopeIdGenerator, false, false, false)\n\t\treturn `${fnId}#${scopeId}`\n\t}\n}\n\nconst DEFAULT_SCOPE_ID = 1\nlet scopeIdGenerator = 1,\n\tfnIdGenerator = 0\n\nfunction parseScope(scope: any): any {\n\treturn !scope ? undefined : scope\n}\n","/**\n * String format\n * @module utility/nextTick\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 11 2017 14:35:32 GMT+0800 (China Standard Time)\n * @modified Thu Jan 31 2019 16:34:55 GMT+0800 (China Standard Time)\n */\nimport { FnList } from './List'\nimport { TYPE_FN } from './consts'\n\nconst ticks = new FnList()\nlet pending = false\nlet next: () => void\n\nfunction executeTick(fn: Function, scope?: any) {\n\tscope ? fn.call(scope) : fn()\n}\n\nfunction flush() {\n\tticks.each(executeTick)\n\tticks.clean()\n\tpending = false\n}\n\nif (typeof MutationObserver === TYPE_FN) {\n\t// chrome18+, safari6+, firefox14+,ie11+,opera15\n\tvar counter = 0,\n\t\tobserver = new MutationObserver(flush),\n\t\ttextNode = document.createTextNode(counter + '')\n\tobserver.observe(textNode, {\n\t\tcharacterData: true\n\t})\n\tnext = function() {\n\t\ttextNode.data = counter + ''\n\t\tcounter = counter ? 0 : 1\n\t}\n} else {\n\tnext = function() {\n\t\tsetTimeout(flush, 0)\n\t}\n}\n\nexport function nextTick(fn: Function, scope?: any) {\n\tticks.add(fn, scope)\n\tif (!pending) {\n\t\tpending = true\n\t\tnext()\n\t}\n}\n\nexport function clearTick(fn: Function, scope?: any) {\n\tticks.remove(fn, scope)\n}\n","/**\n * @module utility/Source\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Mon Dec 17 2018 10:41:21 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 14:37:32 GMT+0800 (China Standard Time)\n */\n\nimport { pad } from './format'\nimport { escapeStr } from './string'\n\nconst LINE_REG = /([^\\n]+)?(\\n|$)/g\nexport class Source {\n\treadonly buff: string\n\treadonly len: number\n\tprivate __lines: ([number, string])[]\n\tprivate __linePos: number\n\tconstructor(buff: string) {\n\t\tthis.buff = buff\n\t\tthis.len = buff.length\n\t\tthis.__lines = []\n\t\tthis.__linePos = 0\n\t}\n\tposition(offset: number): [number, number, string] {\n\t\tconst { buff, len, __lines: lines, __linePos: linePos } = this\n\t\tlet i = lines.length,\n\t\t\tp: number\n\t\tif (offset < linePos) {\n\t\t\twhile (i--) {\n\t\t\t\tp = offset - lines[i][0]\n\t\t\t\tif (p >= 0) return [i + 1, p, lines[i][1]]\n\t\t\t}\n\t\t} else {\n\t\t\tif (linePos < len) {\n\t\t\t\tvar m: string[]\n\t\t\t\tLINE_REG.lastIndex = p = linePos\n\t\t\t\twhile ((m = LINE_REG.exec(buff))) {\n\t\t\t\t\tlines[i++] = [p, m[1] || '']\n\t\t\t\t\tp = LINE_REG.lastIndex\n\t\t\t\t\tif (!p || offset < p) break\n\t\t\t\t}\n\t\t\t\tthis.__linePos = p || len\n\t\t\t}\n\t\t\treturn i ? [i, (offset > len ? len : offset) - lines[i - 1][0], lines[i - 1][1]] : [1, 0, '']\n\t\t}\n\t}\n\tsource(escape?: boolean): string {\n\t\tconst { buff } = this\n\t\tlet line = 1,\n\t\t\ttoSourceStr = escape ? escapeSourceStr : sourceStr\n\n\t\treturn buff.replace(LINE_REG, (m, s, t) => pad(String(line++), 3) + ': ' + toSourceStr(m, s, t))\n\t}\n}\n\nfunction sourceStr(m: string, s: string, t: string) {\n\treturn m || ''\n}\n\nfunction escapeSourceStr(m: string, s: string, t: string) {\n\treturn s ? escapeStr(s) + t : t\n}\n","/**\n * utilities for ast builder\n *\n * @module utility/AST\n * @author Tao Zeng (tao.zeng.zt@qq.com)\n * @created 2018-11-09 13:22:51\n * @modified 2018-11-09 13:22:51 by Tao Zeng (tao.zeng.zt@qq.com)\n */\nimport { isStr, isArray, isInt, isNum } from '../is'\nimport { charCode } from '../string'\n\nexport function genCharCodes(start: number | string, end: number | string, ignoreCase?: boolean) {\n\tlet s: number = isNum(start) ? (start as number) : charCode(start as string),\n\t\te: number = isNum(end) ? (end as number) : charCode(end as string),\n\t\tcodes: number[] = new Array(e - s),\n\t\ti = 0\n\tif (ignoreCase) {\n\t\tvar c: number\n\t\tfor (; s <= e; s++) {\n\t\t\tcodes[i++] = s\n\t\t\tc = getAnotherCode(s)\n\t\t\tcodes[i++] = c\n\t\t}\n\t} else {\n\t\tfor (; s <= e; s++) codes[i++] = s\n\t}\n\treturn codes\n}\n\n/**\n * each char codes\n */\nexport function eachCharCodes(codes: number | string | any[], ignoreCase: boolean, cb: (code: number) => void) {\n\tlet i: number\n\tif (isStr(codes)) {\n\t\ti = (codes as any).length\n\t\twhile (i--) eachCharCode(charCode(codes as any, i), ignoreCase, cb)\n\t} else if (isArray(codes)) {\n\t\ti = (codes as any).length\n\t\twhile (i--) eachCharCodes((codes as any)[i], ignoreCase, cb)\n\t} else if (isInt(codes)) {\n\t\teachCharCode(codes as any, ignoreCase, cb)\n\t}\n}\nfunction eachCharCode(code: number, ignoreCase: boolean, cb: (code: number) => void): void {\n\tcb(code)\n\tif (ignoreCase) {\n\t\tvar c = getAnotherCode(code)\n\t\tc && cb(c)\n\t}\n}\n\nfunction getAnotherCode(code: number) {\n\treturn code <= 90 ? (code >= 65 ? code + 32 : 0) : code <= 122 ? code - 32 : 0\n}\n","/**\n * @module utility/mixin\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Dec 18 2018 16:41:03 GMT+0800 (China Standard Time)\n * @modified Fri Dec 21 2018 10:24:24 GMT+0800 (China Standard Time)\n */\n\nimport { hasOwnProp } from './prop'\n\nexport function mixin<B>(behaviour: B) {\n\treturn function mixin<M extends B, T extends { new (...args: Array<any>): M }>(Class: T) {\n\t\tconst proto = Class.prototype\n\t\tfor (var k in behaviour) if (hasOwnProp(behaviour, k)) proto[k] = behaviour[k]\n\t\treturn Class\n\t}\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 06 2018 10:06:22 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 17:53:14 GMT+0800 (China Standard Time)\n */\nimport { MatchContext } from './MatchContext'\nimport { eachCharCodes } from './util'\nimport { assert } from '../assert'\nimport { isBool } from '../is'\nimport { mixin } from '../mixin'\n\n@mixin({ $ruleErr: true })\nexport class MatchError {\n\treadonly $ruleErr: boolean\n\treadonly rule: Rule\n\treadonly context: MatchContext\n\treadonly source: MatchError\n\treadonly target: MatchError\n\tcapturable: boolean\n\treadonly pos: number\n\tmsg: string\n\tconstructor(msg: string, capturable: boolean, source: MatchError, context: MatchContext, rule: Rule) {\n\t\t!isBool(capturable) && (capturable = rule.capturable)\n\t\tthis.capturable = capturable && source ? source.capturable : capturable\n\t\tthis.msg = msg\n\t\tthis.source = source\n\t\tthis.target = source ? source.target : this\n\t\tthis.context = context\n\t\tthis.rule = rule\n\t\tthis.pos = context.startPos()\n\t}\n\tposition(): [number, number, string] {\n\t\treturn this.context.source.position(this.pos)\n\t}\n}\n\nexport type onMatchCallback = (data: any, len: number, context: MatchContext, rule: Rule) => MatchError | string | void\nexport type onErrorCallback = (err: MatchError, context: MatchContext, rule: Rule) => MatchError | string | void\n\nfunction defaultErr(err: MatchError) {\n\treturn err\n}\n\nfunction defaultMatch(data: any, len: number, context: MatchContext) {\n\tcontext.add(data)\n}\n\nexport type RuleOptions = {\n\t/**\n\t * error is capturable\n\t */\n\tcapturable?: boolean\n\t/**\n\t * matched callback\n\t */\n\tmatch?: (data: any, len: number, context: MatchContext, rule: Rule) => MatchError | string | void\n\t/**\n\t * error callback\n\t */\n\terr?: (err: MatchError, context: MatchContext, rule: Rule) => MatchError | string | void\n}\n\nlet idGen = 0\n/**\n * Abstract Rule\n */\n@mixin({ $rule: true })\nexport class Rule {\n\treadonly $rule: boolean\n\t// rule type (for debug)\n\ttype: string\n\t// rule id\n\treadonly id: number\n\t// rule name\n\treadonly name: string\n\t// error is capturable\n\treadonly capturable: boolean\n\t// rule expression (for debug)\n\tprotected expr: string\n\t// rule EXPECT content (for debug)\n\tprotected EXPECT: string\n\t// matched callback\n\treadonly onMatch: onMatchCallback\n\t// error callback\n\treadonly onErr: onErrorCallback\n\t// index of start codes\n\tprotected startCodeIdx: any[]\n\t// start codes\n\tprotected startCodes: number[]\n\n\t/**\n\t * @param name\t\t\trule name\n\t * @param capturable\terror is capturable\n\t * @param onMatch\t\tcallback on matched, allow modify the match result or return an error\n\t * @param onErr\t\t\tcallback on Error, allow to ignore error or modify error message or return new error\n\t */\n\tconstructor(name: string, options: RuleOptions) {\n\t\tthis.id = idGen++\n\t\tthis.name = name\n\t\tthis.capturable = options.capturable !== false\n\t\tthis.onMatch = options.match || defaultMatch\n\t\tthis.onErr = options.err || defaultErr\n\t}\n\n\t/**\n\t * create Error\n\t * @param msg \t\t\terror message\n\t * @param context \t\tmatch context\n\t * @param capturable \tis capturable error\n\t * @param src \t\t\tsource error\n\t */\n\tmkErr(msg: string, context: MatchContext, capturable?: boolean, source?: MatchError): MatchError {\n\t\treturn new MatchError(msg, capturable, source, context, this)\n\t}\n\n\t/**\n\t * match fail\n\t * @param msg \t\t\terror message\n\t * @param context \t\tmatch context\n\t * @param capturable \tis capturable error\n\t * @param src \t\t\tsource error\n\t * @return Error|void: may ignore Error in the error callback\n\t */\n\tprotected error(msg: string, context: MatchContext, src?: MatchError, capturable?: boolean): MatchError {\n\t\tconst err = this.mkErr(msg, context, capturable, src)\n\t\tconst userErr = this.onErr(err, context, this)\n\t\tif (userErr) return (userErr as any).$ruleErr ? (userErr as MatchError) : ((err[0] = String(userErr)), err)\n\t}\n\n\t/**\n\t * match success\n\t * > attach the matched result by match callback\n\t * @param data \t\tmatched data\n\t * @param len  \t\tmatched data length\n\t * @param context \tmatch context\n\t * @return Error|void: may return Error in the match callback\n\t */\n\tprotected matched(data: any, len: number, context: MatchContext): MatchError {\n\t\tconst err = this.onMatch(data, len, context, this)\n\t\tif (err) return (err as any).$ruleErr ? (err as MatchError) : this.mkErr(String(err), context, false)\n\t}\n\n\tprotected enter(context: MatchContext) {\n\t\treturn context.create()\n\t}\n\n\t/**\n\t * match\n\t * @param context match context\n\t */\n\tmatch(context: MatchContext): MatchError {\n\t\treturn assert()\n\t}\n\n\t/**\n\t * get start char codes\n\t */\n\tgetStart(stack?: number[]): number[] {\n\t\treturn this.startCodes\n\t}\n\n\t/**\n\t * prepare test before match\n\t */\n\ttest(context: MatchContext): boolean {\n\t\treturn true\n\t}\n\n\tprotected startCodeTest(context: MatchContext): boolean {\n\t\treturn this.startCodeIdx[context.nextCode()]\n\t}\n\n\tprotected setStartCodes(start: number | string | any[], ignoreCase?: boolean) {\n\t\tconst codes: number[] = [],\n\t\t\tindex: number[] = []\n\t\teachCharCodes(start, ignoreCase, code => {\n\t\t\tif (!index[code]) {\n\t\t\t\tcodes.push(code)\n\t\t\t\tindex[code] = code\n\t\t\t}\n\t\t})\n\t\tthis.startCodes = codes\n\t\tthis.setCodeIdx(index)\n\t}\n\n\tprotected setCodeIdx(index: any[]) {\n\t\tif (index.length > 1) {\n\t\t\tthis.startCodeIdx = index\n\t\t\tthis.test = this.startCodeTest\n\t\t}\n\t}\n\n\t//──── for debug ─────────────────────────────────────────────────────────────────────────\n\t/**\n\t * make rule expression\n\t * @param expr expression text\n\t */\n\tprotected mkExpr(expr: string): string {\n\t\treturn `<${this.type}: ${expr}>`\n\t}\n\n\t/**\n\t * set rule expression\n\t * \t\t1. make rule expression\n\t * \t\t2. make Expect text\n\t */\n\tprotected setExpr(expr: string) {\n\t\tthis.expr = this.mkExpr(expr)\n\t\tthis.EXPECT = `Expect: ${expr}`\n\t}\n\n\tgetExpr(stack?: number[]): string {\n\t\treturn this.name || this.expr\n\t}\n\n\t/**\n\t * toString by name or expression\n\t */\n\ttoString(): string {\n\t\treturn this.getExpr()\n\t}\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 06 2018 10:06:22 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 15:11:19 GMT+0800 (China Standard Time)\n */\n\nimport { Rule, MatchError, RuleOptions } from './Rule'\nimport { MatchContext } from './MatchContext'\n\n/**\n * Match Rule Interface\n */\nexport class MatchRule extends Rule {\n\t/**\n\t * @param name \t\t\tmatch name\n\t * @param start \t\tstart char codes, prepare test by start char codes before match\n\t * @param ignoreCase\tignore case for the start char codes\n\t * @param options\t\tRule Options\n\t */\n\tconstructor(name: string, start: number | string | any[], ignoreCase: boolean, options: RuleOptions) {\n\t\tsuper(name, options)\n\t\tthis.setStartCodes(start, ignoreCase)\n\t}\n\n\t/**\n\t * consume matched result\n\t * @param data \t\tmatched result\n\t * @param len \t\tmatched chars\n\t * @param context \tmatch context\n\t */\n\tcomsume(data: string | string[], len: number, context: MatchContext): MatchError {\n\t\tcontext.advance(len)\n\t\treturn this.matched(data, len, context)\n\t}\n}\n","/**\n *\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Dec 11 2018 15:36:42 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 14:53:49 GMT+0800 (China Standard Time)\n */\n\nimport { RuleOptions } from './Rule'\nimport { MatchContext } from './MatchContext'\nimport { MatchRule } from './MatchRule'\nimport { char } from '../string'\nimport { mixin } from '../mixin'\n\n/**\n * match a character in the allowed list\n * > well match any character if the allowed list is empty\n *\n * > must call test() before match\n */\n@mixin({ type: 'Character' })\nexport class CharMatchRule extends MatchRule {\n\t/**\n\t * @param name \t\t\tmatch name\n\t * @param allows \t\tallowed character codes for match\n\t * \t\t\t\t\t\twell match any character if the allowed list is empty\n\t * @param ignoreCase\tignore case for the allowed character codes\n\t * @param options\t\tRule Options\n\t */\n\tconstructor(name: string, allows: number | string | any[], ignoreCase: boolean, options: RuleOptions) {\n\t\tsuper(name, allows, ignoreCase, options)\n\n\t\t// generate expression for debug\n\t\tconst codes = this.startCodes\n\t\tlet i = codes.length,\n\t\t\texpr = '*'\n\t\tif (i) {\n\t\t\tconst chars = []\n\t\t\twhile (i--) chars[i] = char(codes[i])\n\t\t\texpr = `\"${chars.join('\" | \"')}\"`\n\t\t}\n\t\tthis.setExpr(expr)\n\t}\n\tmatch(context: MatchContext) {\n\t\treturn this.comsume(context.nextChar(), 1, context)\n\t}\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Dec 11 2018 15:36:42 GMT+0800 (China Standard Time)\n * @modified Fri Dec 28 2018 20:09:06 GMT+0800 (China Standard Time)\n */\n\nimport { MatchError, RuleOptions } from './Rule'\nimport { MatchContext } from './MatchContext'\nimport { MatchRule } from './MatchRule'\nimport { stickyReg } from '../reg'\nimport { isInt } from '../is'\nimport { createFn } from '../fn'\nimport { mapArray } from '../collection'\nimport { mixin } from '../mixin'\nimport { create } from '../create'\nimport { cutLStr } from '../string'\n\n/**\n * match string by RegExp\n *\n * optimization:\n * - Priority use sticky mode {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky}\n *\n */\n@mixin({ type: 'RegExp' })\nexport class RegMatchRule extends MatchRule {\n\treadonly regexp: RegExp\n\treadonly pick: boolean | number\n\tprivate picker: (m: string[]) => string | string[]\n\tprivate spicker: (buff: string, start: number, end: number) => string\n\t/**\n\t * @param name \t\t\tmatch name\n\t * @param regexp\t\tregular\n\t * @param pick\t\t\tpick regular matching results\n\t * \t\t\t\t\t\t    0: pick results[0] (optimize: test and substring in sticky mode)\n\t * \t\t\t\t\t\t  > 0: pick results[{pick}]\n\t * \t\t\t\t\t\t  < 0: pick first non-blank string from 1 to -{pick} index on results\n\t * \t\t\t\t\t\t true: pick results\n\t * \t\t\t\t\t\tfalse: not pick result, result is null (optimize: just test string in sticky mode)\n\t * @param start\t\t\tstart character codes in the regular, optimize performance by start character codes\n\t * @param capturable\terror is capturable\n\t * @param onMatch\t\tmatch callback\n\t * @param onErr\t\t\terror callback\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tregexp: RegExp,\n\t\tpick: boolean | number,\n\t\tstart: number | string | any[],\n\t\toptions: RuleOptions\n\t) {\n\t\tpick = pick === false || isInt(pick) ? pick : !!pick || 0\n\n\t\tconst sticky = stickyReg && !pick, // use exec mode when need pick match group data\n\t\t\tpattern = regexp.source,\n\t\t\tignoreCase = regexp.ignoreCase\n\n\t\t// always wrapping in a none capturing group preceded by '^' to make sure\n\t\t// matching can only work on start of input. duplicate/redundant start of\n\t\t// input markers have no meaning (/^^^^A/ === /^A/)\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/sticky\n\t\t// When the y flag is used with a pattern, ^ always matches only at the\n\t\t// beginning of the input, or (if multiline is true) at the beginning of a\n\t\t// line.\n\t\tregexp = new RegExp(\n\t\t\tsticky ? pattern : `^(?:${pattern})`,\n\t\t\t(ignoreCase ? 'i' : '') + (regexp.multiline ? 'm' : '') + (sticky ? 'y' : '')\n\t\t)\n\n\t\tsuper(name, start, ignoreCase, options)\n\n\t\tthis.regexp = regexp\n\t\tthis.pick = pick\n\t\tthis.match = sticky ? this.stickyMatch : this.execMatch\n\n\t\tsticky ? (this.spicker = pick === false ? pickNone : pickTestStr) : (this.picker = mkPicker(pick))\n\n\t\tthis.setExpr(pattern)\n\t}\n\t/**\n\t * match on sticky mode\n\t */\n\tstickyMatch(context: MatchContext): MatchError {\n\t\tconst reg = this.regexp,\n\t\t\tbuff = context.buff(),\n\t\t\tstart = context.offset()\n\t\treg.lastIndex = start\n\t\tlet len: number\n\t\treturn reg.test(buff)\n\t\t\t? ((len = reg.lastIndex - start), this.comsume(this.spicker(buff, start, len), len, context))\n\t\t\t: this.error(this.EXPECT, context)\n\t}\n\t/**\n\t * match on exec mode\n\t */\n\texecMatch(context: MatchContext): MatchError {\n\t\tconst m = this.regexp.exec(context.buff(true))\n\t\treturn m ? this.comsume(this.picker(m), m[0].length, context) : this.error(this.EXPECT, context)\n\t}\n}\n\nconst cache = create(null)\nfunction mkPicker(pick: number | boolean): (m: string[]) => string | string[] {\n\treturn (\n\t\tcache[pick as any] ||\n\t\t(cache[pick as any] =\n\t\t\tpick === false\n\t\t\t\t? pickNone\n\t\t\t\t: pick === true\n\t\t\t\t? pickAll\n\t\t\t\t: pick >= 0\n\t\t\t\t? createFn(`return m[${pick}]`, ['m'], `pick_${pick}`)\n\t\t\t\t: createFn(\n\t\t\t\t\t\t`return ${mapArray(new Array(-pick), (v, i) => `m[${i + 1}]`).join(' || ')}`,\n\t\t\t\t\t\t['m'],\n\t\t\t\t\t\t`pick_1_${-pick}`\n\t\t\t\t  ))\n\t)\n}\n\nfunction pickNone(): string {\n\treturn null\n}\n\nfunction pickAll(m: string[]): string[] {\n\treturn m\n}\n\nfunction pickTestStr(buff: string, start: number, end: number): string {\n\treturn cutLStr(buff, start, end)\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Dec 11 2018 15:36:42 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 15:10:52 GMT+0800 (China Standard Time)\n */\n\nimport { RuleOptions } from './Rule'\nimport { RegMatchRule } from './RegMatchRule'\nimport { reEscape } from '../reg'\nimport { mixin } from '../mixin'\nimport { charCode } from '../string'\n\n@mixin({ type: 'String' })\nexport class StringMatchRule extends RegMatchRule {\n\t/**\n\t * @param name \t\t\tmatch name\n\t * @param str \t\t\tmatch string\n\t * @param ignoreCase\tignore case\n\t * @param options\t\tRule Options\n\t */\n\tconstructor(name: string, str: string, ignoreCase: boolean, options: RuleOptions) {\n\t\tsuper(name, new RegExp(reEscape(str), ignoreCase ? 'i' : ''), 0, charCode(str), options)\n\t\tthis.setExpr(str)\n\t}\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Dec 11 2018 15:36:42 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 16:32:31 GMT+0800 (China Standard Time)\n */\nimport { Source } from '../Source'\nimport { char, charCode, cutStr } from '../string'\nimport { assert } from '../assert'\n\nexport type CheckPoint = [number, number]\n/**\n * Match Context of Rule\n */\nexport class MatchContext {\n\t// start offset of original buff\n\treadonly source: Source\n\n\t// parent context\n\treadonly parent: MatchContext\n\n\t// matched result list\n\tresult: any[]\n\n\tdata: any\n\n\t// template buff\n\tprivate __buff: string\n\n\t// current offset of template buff\n\tprivate __offset: number\n\n\t// current offset of original buff\n\tprivate __orgOffset: number\n\n\t// advanced characters\n\tprivate __advanced: number\n\n\t// cached character\n\tprivate __code: number\n\n\tconstructor(source: Source, buff: string, offset: number, orgOffset: number, parent?: MatchContext) {\n\t\tthis.source = source\n\t\tthis.parent = parent\n\t\tthis.result = []\n\t\tthis.__buff = buff\n\t\tthis.__offset = offset\n\t\tthis.__orgOffset = orgOffset\n\t\tthis.__advanced = 0\n\t\tparent ? ((this.__code = parent.__code), (this.data = parent.data)) : this.__flushCode()\n\t}\n\n\tprivate __flushCode() {\n\t\tconst { __buff: buff, __offset: offset } = this\n\t\tthis.__code = offset < buff.length ? charCode(buff, offset) : 0\n\t}\n\n\t/**\n\t * create sub Context\n\t */\n\tcreate() {\n\t\treturn new MatchContext(this.source, this.__buff, this.__offset, this.__orgOffset + this.__advanced, this)\n\t}\n\n\tprivate __setAdvanced(advanced: number) {\n\t\tassert.notLess(advanced, 0)\n\n\t\tconst offset = this.__offset - this.__advanced + advanced\n\t\tif (offset < 0) {\n\t\t\tthis.__buff = this.source.buff\n\t\t\tthis.__offset = this.__orgOffset + advanced\n\t\t}\n\t\tthis.__advanced = advanced\n\t\tthis.__offset = offset\n\t\tthis.__flushCode()\n\t}\n\n\t/**\n\t * commit context state to parent context\n\t */\n\tcommit() {\n\t\tconst { __advanced: advanced } = this\n\t\tthis.parent.advance(advanced)\n\t\tthis.__orgOffset += advanced\n\t\tthis.__advanced = 0\n\t\tthis.data = null\n\t}\n\n\t/**\n\t * marge context state\n\t */\n\tmargeState(context: MatchContext) {\n\t\tthis.__setAdvanced(context.__orgOffset + context.__advanced - this.__orgOffset)\n\t}\n\n\t/**\n\t * rollback state and result\n\t * @param checkpoint \trollback to checkpoint\n\t */\n\trollback(checkpoint?: CheckPoint) {\n\t\tlet advanced = 0,\n\t\t\tresultLen = 0\n\n\t\tcheckpoint && ((advanced = checkpoint[0]), (resultLen = checkpoint[1]))\n\n\t\tthis.__setAdvanced(advanced)\n\n\t\tconst { result } = this\n\t\tif (result.length > resultLen) result.length = resultLen\n\t}\n\n\t/**\n\t * get a check point\n\t */\n\tcheckpoint(): CheckPoint {\n\t\treturn [this.__advanced, this.result.length]\n\t}\n\n\t/**\n\t * advance buffer position\n\t */\n\tadvance(i: number) {\n\t\tthis.__offset += i\n\t\tthis.__advanced += i\n\t\tthis.__flushCode()\n\t}\n\n\t/**\n\t * advanced buff length\n\t */\n\tadvanced(): number {\n\t\treturn this.__advanced\n\t}\n\n\t/**\n\t * get buffer\n\t * @param reset reset buffer string from 0\n\t */\n\tbuff(reset?: boolean): string {\n\t\tlet { __buff: buff } = this\n\t\tif (reset) {\n\t\t\tthis.__buff = buff = cutStr(buff, this.__offset)\n\t\t\tthis.__offset = 0\n\t\t}\n\t\treturn buff\n\t}\n\n\torgBuff() {\n\t\treturn this.source.buff\n\t}\n\n\toffset(): number {\n\t\treturn this.__offset\n\t}\n\n\tstartPos(): number {\n\t\treturn this.__orgOffset\n\t}\n\n\tcurrPos(): number {\n\t\treturn this.__orgOffset + this.__advanced\n\t}\n\n\tpos(): [number, number] {\n\t\tconst { __orgOffset: offset } = this\n\t\treturn [offset, offset + this.__advanced]\n\t}\n\n\t/**\n\t * get next char code\n\t * @return number char code number\n\t */\n\tnextCode() {\n\t\treturn this.__code\n\t}\n\n\tnextChar() {\n\t\treturn char(this.__code)\n\t}\n\n\t//──── result opeartions ───────────────────────────────────────────────────────────────────\n\t/**\n\t * append result\n\t */\n\tadd(data: any) {\n\t\tconst { result } = this\n\t\tresult[result.length] = data\n\t}\n\n\t/**\n\t * append resultset\n\t */\n\taddAll(data: any[]) {\n\t\tconst { result } = this\n\t\tconst len = result.length\n\t\tlet i = data.length\n\t\twhile (i--) result[len + i] = data[i]\n\t}\n\n\t/**\n\t * get result size\n\t */\n\tresultSize() {\n\t\treturn this.result.length\n\t}\n}\n","/**\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 06 2018 10:06:22 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 15:24:21 GMT+0800 (China Standard Time)\n */\n\nimport { Rule, MatchError, onMatchCallback, onErrorCallback, RuleOptions } from './Rule'\nimport { MatchContext } from './MatchContext'\nimport { assert } from '../assert'\nimport { idxOfArray } from '../collection'\nimport { pad } from '../format'\nimport { escapeStr } from '../string'\nimport { Source } from '../Source'\n\nexport type ComplexRuleBuilder = (rule: Rule) => Rule[]\n\nconst MAX = -1 >>> 0\n/**\n * Abstract Complex Rule\n */\nexport class ComplexRule extends Rule {\n\treadonly split: string\n\tprivate builder: ComplexRuleBuilder\n\tprotected EXPECTS: string[]\n\tprotected rules: Rule[]\n\tprotected readonly rMin: number\n\tprotected readonly rMax: number\n\n\t/**\n\t * @param name \t\t\tmatch name\n\t * @param builder \t\tcallback of build rules\n\t * @param options\t\tRule Options\n\t */\n\tconstructor(name: string, repeat: [number, number], builder: ComplexRuleBuilder, options: RuleOptions) {\n\t\tsuper(name, options)\n\n\t\tlet [rMin, rMax] = repeat\n\n\t\trMin < 0 && (rMin = 0)\n\t\trMax <= 0 && (rMax = MAX)\n\n\t\tassert.notGreater(rMin, rMax)\n\n\t\tthis.rMin = rMin\n\t\tthis.rMax = rMax\n\n\t\tthis.builder = builder\n\n\t\tif (rMin !== rMax || rMin !== 1) {\n\t\t\tthis.match = this.rmatch\n\n\t\t\t// for debug\n\t\t\tthis.type = `${this.type}[${rMin}${rMin === rMax ? '' : ` - ${rMax === MAX ? 'MAX' : rMax}`}]`\n\t\t}\n\t}\n\tparse(buff: string, data?: any): any[] {\n\t\tconst ctx = new MatchContext(new Source(buff), buff, 0, 0)\n\t\tctx.data = data\n\t\tlet err = this.match(ctx)\n\t\tif (err) {\n\t\t\tconst msg = []\n\t\t\tvar pos: [number, number, string]\n\t\t\tdo {\n\t\t\t\tpos = err.position()\n\t\t\t\tmsg.unshift(\n\t\t\t\t\t`[${pad(String(pos[0]), 3)}:${pad(String(pos[1]), 2)}] - ${err.rule.toString()}: ${\n\t\t\t\t\t\terr.msg\n\t\t\t\t\t} on \"${escapeStr(pos[2])}\"`\n\t\t\t\t)\n\t\t\t} while ((err = err.source))\n\t\t\tmsg.push('[Source]', ctx.source.source())\n\t\t\tthrow new SyntaxError(msg.join('\\n'))\n\t\t}\n\t\treturn ctx.result\n\t}\n\tinit(): ComplexRule {\n\t\tconst rules = this.builder(this)\n\t\tlet i = rules && rules.length\n\n\t\tassert.is(i, `Require Complex Rules`)\n\n\t\tthis.rules = rules\n\n\t\t// generate expression and expect string for debug\n\t\tconst names = this.rnames(rules)\n\t\tthis.setExpr(names.join(this.split))\n\t\twhile (i--) names[i] = `Expect[${i}]: ${names[i]}`\n\t\tthis.EXPECTS = names\n\n\t\tthis.__init(rules)\n\n\t\tthis.builder = null\n\n\t\treturn this\n\t}\n\t__init(rules: Rule[]) {}\n\n\tprotected rmatch(context: MatchContext): MatchError {\n\t\treturn assert()\n\t}\n\n\tprotected setCodeIdx(index: any[]) {\n\t\tthis.rMin && super.setCodeIdx(index)\n\t}\n\n\tgetRules(): Rule[] {\n\t\treturn this.rules || (this.init(), this.rules)\n\t}\n\n\tgetStart(stack?: number[]): number[] {\n\t\tconst { id, startCodes } = this\n\t\treturn startCodes\n\t\t\t? startCodes\n\t\t\t: (stack && ~idxOfArray(stack, id)) || this.rules\n\t\t\t? []\n\t\t\t: (this.init(), this.startCodes)\n\t}\n\n\tconsume(context: MatchContext): MatchError {\n\t\tconst err = this.matched(context.result, context.advanced(), context.parent)\n\t\t!err && context.commit()\n\t\treturn err\n\t}\n\n\t// for debug\n\tprivate rnames(rules: Rule[], stack?: number[]): string[] {\n\t\tlet i = rules.length\n\t\tconst names: string[] = new Array(i),\n\t\t\tid = this.id\n\t\twhile (i--) names[i] = rules[i].getExpr(stack ? stack.concat(id) : [id])\n\t\treturn names\n\t}\n\n\tgetExpr(stack?: number[]): string {\n\t\tconst { id, name } = this\n\t\tlet i: number\n\n\t\treturn name\n\t\t\t? name\n\t\t\t: stack\n\t\t\t? ~(i = idxOfArray(stack, id))\n\t\t\t\t? `<${this.type} -> $${stack[i]}>`\n\t\t\t\t: this.mkExpr(this.rnames(this.getRules(), stack).join(this.split))\n\t\t\t: this.expr\n\t}\n}\n","/**\n *\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 27 2018 19:05:48 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 15:56:09 GMT+0800 (China Standard Time)\n */\n\nimport { Rule, MatchError } from './Rule'\nimport { MatchContext, CheckPoint } from './MatchContext'\nimport { ComplexRule } from './ComplexRule'\nimport { mixin } from '../mixin'\n\n/**\n * AND Complex Rule\n */\n@mixin({ type: 'And', split: ' ' })\nexport class AndRule extends ComplexRule {\n\t__init(rules: Rule[]) {\n\t\tthis.setStartCodes(rules[0].getStart([this.id]))\n\t}\n\tmatch(context: MatchContext): MatchError {\n\t\tconst rules = this.getRules(),\n\t\t\tlen = rules.length,\n\t\t\tctx = context.create()\n\t\tlet err: MatchError,\n\t\t\ti: number = 0\n\t\tfor (; i < len; i++) if ((err = this.testRule(rules[i], i, ctx))) return err\n\t\treturn this.consume(ctx)\n\t}\n\tprotected rmatch(context: MatchContext): MatchError {\n\t\tconst { rMin, rMax } = this\n\t\tconst rules = this.getRules(),\n\t\t\tlen = rules.length,\n\t\t\tctx = context.create()\n\n\t\tlet err: MatchError,\n\t\t\trepeat: number = 0,\n\t\t\ti: number,\n\t\t\tcp: CheckPoint\n\n\t\tout: for (; repeat < rMax; repeat++) {\n\t\t\tcp = ctx.checkpoint()\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif ((err = this.testRule(rules[i], i, ctx))) {\n\t\t\t\t\tif (repeat < rMin) return err\n\t\t\t\t\tctx.rollback(cp)\n\t\t\t\t\tbreak out\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.consume(ctx)\n\t}\n\ttestRule(rule: Rule, i: number, ctx: MatchContext): MatchError {\n\t\tlet err: MatchError\n\t\tif (!rule.test(ctx)) {\n\t\t\treturn this.error(this.EXPECTS[i], ctx)\n\t\t} else if ((err = rule.match(ctx))) {\n\t\t\treturn this.error(this.EXPECTS[i], ctx, err)\n\t\t}\n\n\t\t// return (!rule.test(ctx) || (err = rule.match(ctx))) && (err = this.error(this.EXPECTS[i], ctx, err))\n\t}\n}\n","/**\n *\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 27 2018 19:05:48 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 17:47:30 GMT+0800 (China Standard Time)\n */\n\nimport { Rule, MatchError } from './Rule'\nimport { MatchContext, CheckPoint } from './MatchContext'\nimport { ComplexRule } from './ComplexRule'\nimport { eachCharCodes } from './util'\nimport { mixin } from '../mixin'\n\n/**\n * OR Complex Rule\n */\n@mixin({ type: 'Or', split: ' | ' })\nexport class OrRule extends ComplexRule {\n\tindex: Rule[][]\n\t__init(rules: Rule[]) {\n\t\tconst { id } = this\n\t\tconst len = rules.length,\n\t\t\tstarts: number[] = [], // all distinct start codes\n\t\t\trStarts: number[][] = [], // start codes per rule\n\t\t\tindex: Rule[][] = [\n\t\t\t\t[] // rules which without start code\n\t\t\t]\n\n\t\tlet i: number, j: number, k: Rule[] & { idx: number }, codes: number[]\n\n\t\t// get start codes of all rules\n\t\tfor (i = 0; i < len; i++) {\n\t\t\trStarts[i] = [] // init rule start codes\n\t\t\teachCharCodes(rules[i].getStart([id]), false, code => {\n\t\t\t\trStarts[i].push(code) // append to rule start codes\n\t\t\t\tif (!index[code]) {\n\t\t\t\t\tindex[code] = [] // init start code index\n\t\t\t\t\tstarts.push(code) // append to all start codes\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// fill index\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tcodes = rStarts[i] // append rule to start code index by rule start codes\n\t\t\tif (!codes.length) {\n\t\t\t\t// rule without start code\n\t\t\t\tindex[0].push(rules[i]) // append rule to index[0]\n\t\t\t\tcodes = starts // append rule to start code index by all start codes\n\t\t\t}\n\n\t\t\t// append rule to start code index (by rule start codes or all start codes)\n\t\t\tj = codes.length\n\t\t\twhile (j--) {\n\t\t\t\tk = index[codes[j]] as Rule[] & { idx: number }\n\t\t\t\tif (k.idx !== i) {\n\t\t\t\t\t// deduplication\n\t\t\t\t\tk.push(rules[i]) // append rules[i] to start code index[codes[j]]\n\t\t\t\t\tk.idx = i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// rule have unkown start code when got unkown start code from any rules\n\t\tconst startCodes = !index[0].length && starts\n\t\tthis.startCodes = startCodes || []\n\t\tstartCodes && this.setCodeIdx(index)\n\t\tthis.index = index\n\t}\n\n\tmatch(context: MatchContext): MatchError {\n\t\tconst index = this.index || (this.init(), this.index),\n\t\t\trules: Rule[] = index[context.nextCode()] || index[0],\n\t\t\tlen = rules.length,\n\t\t\tctx = context.create()\n\n\t\tlet err: MatchError,\n\t\t\tupErr: MatchError,\n\t\t\ti = 0\n\n\t\tfor (; i < len; i++) {\n\t\t\terr = rules[i].match(ctx) || this.consume(ctx)\n\t\t\tif (!err) return\n\t\t\tif (!err.capturable) {\n\t\t\t\tupErr = err\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (!upErr || err.pos >= upErr.pos) upErr = err\n\t\t\tctx.rollback()\n\t\t}\n\t\treturn this.error(this.EXPECT, ctx, upErr)\n\t}\n\n\tprotected rmatch(context: MatchContext): MatchError {\n\t\tconst { rMin, rMax } = this\n\t\tconst index = this.index || (this.init(), this.index),\n\t\t\tctx = context.create()\n\n\t\tlet rules: Rule[],\n\t\t\tlen: number,\n\t\t\terr: MatchError,\n\t\t\tupErr: MatchError,\n\t\t\trepeat: number = 0,\n\t\t\ti: number,\n\t\t\tcp: CheckPoint\n\n\t\tout: for (; repeat < rMax; repeat++) {\n\t\t\trules = index[ctx.nextCode()] || index[0]\n\t\t\tupErr = null\n\t\t\tif ((len = rules.length)) {\n\t\t\t\tcp = ctx.checkpoint()\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\terr = rules[i].match(ctx)\n\t\t\t\t\tif (!err) continue out\n\t\t\t\t\tif (!err.capturable) {\n\t\t\t\t\t\tupErr = err\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (!upErr || err.pos >= upErr.pos) upErr = err\n\t\t\t\t\tctx.rollback(cp)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (repeat < rMin || (upErr && !upErr.capturable)) return this.error(this.EXPECT, ctx, upErr)\n\t\t\tbreak\n\t\t}\n\t\treturn this.consume(ctx)\n\t}\n}\n","/**\n * AST Parser API\n * @module utility/AST\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Tue Nov 06 2018 10:58:52 GMT+0800 (China Standard Time)\n * @modified Sat Dec 22 2018 15:45:10 GMT+0800 (China Standard Time)\n */\n\nimport { ComplexRuleBuilder } from './ComplexRule'\nimport { isObj, isReg, isStr, isBool, isNum, isInt, isArray, isArrayLike, isFn } from '../is'\nimport { makeMap, mapArray, SKIP } from '../collection'\nimport { CharMatchRule } from './CharMatchRule'\nimport { StringMatchRule } from './StringMatchRule'\nimport { RegMatchRule } from './RegMatchRule'\nimport { onMatchCallback, onErrorCallback, Rule, MatchError, RuleOptions } from './Rule'\nimport { MatchRule } from './MatchRule'\nimport { AndRule } from './AndRule'\nimport { OrRule } from './OrRule'\nimport { assert } from '../assert'\nimport { MatchContext } from './MatchContext'\nimport { EMPTY_FN } from '../consts'\n\n//========================================================================================\n/*                                                                                      *\n *                                      match tools                                     *\n *                                                                                      */\n//========================================================================================\n\nexport const discardMatch: onMatchCallback = EMPTY_FN\n\nexport function appendMatch(data: any, len: number, context: MatchContext) {\n\tcontext.addAll(data)\n}\nexport function attachMatch(\n\tcallback: (data: any, len: number, context: MatchContext, rule: Rule) => any\n): onMatchCallback\nexport function attachMatch(val: any): onMatchCallback\nexport function attachMatch(val: any) {\n\tconst callback: (data: any, len: number, context: MatchContext, rule: Rule) => any = isFn(val) ? val : () => val\n\treturn (data: any, len: number, context: MatchContext, rule: Rule) => {\n\t\tcontext.add(callback(data, len, context, rule))\n\t}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                       match api                                      *\n *                                                                                      */\n//========================================================================================\n\nexport function match(desc: MatchRuleDescriptor): MatchRule\n\n//──── named regexp match api ────────────────────────────────────────────────────────────\n// pick, start, cap\n// pick, cap\n// pick, start\n// pick\n// start, cap\n// start\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tpick?: boolean | number,\n\tstartCodes?: number | string | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tstartCodes: number | string | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tstartCodes: string | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tname: string,\n\tpattern: RegExp,\n\tstartCodes: string | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(name: string, pattern: RegExp, onMatch: onMatchCallback, onErr?: onErrorCallback): MatchRule\n\n//──── regexp match api ──────────────────────────────────────────────────────────────────\nexport function match(\n\tpattern: RegExp,\n\tpick?: boolean | number,\n\tstartCodes?: number | string | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tstartCodes: number | string | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tpattern: RegExp,\n\tpick: boolean | number,\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tpattern: RegExp,\n\tstartCodes: string | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(\n\tpattern: RegExp,\n\tstartCodes: string | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\nexport function match(pattern: RegExp, onMatch: onMatchCallback, onErr?: onErrorCallback): MatchRule\n\n//──── named string match api ────────────────────────────────────────────────────────────\nexport function match(\n\tname: string,\n\tpattern: number | string | any[],\n\tignoreCase?: boolean,\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\n\nexport function match(\n\tname: string,\n\tpattern: number | string | any[],\n\tignoreCase: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\n\nexport function match(\n\tname: string,\n\tpattern: number | string | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\n\n//──── string match api ──────────────────────────────────────────────────────────────────\nexport function match(\n\tpattern: number | string | any[],\n\tignoreCase?: boolean,\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\n\nexport function match(\n\tpattern: number | string | any[],\n\tignoreCase: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): MatchRule\n\nexport function match(pattern: number | string | any[], onMatch: onMatchCallback, onErr?: onErrorCallback): MatchRule\n\nexport function match(): MatchRule {\n\treturn mkMatch(arguments)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     and rule api                                     *\n *                                                                                      */\n//========================================================================================\n\n//──── and ───────────────────────────────────────────────────────────────────────────────\nexport function and(desc: ComplexRuleDescriptor): AndRule\nexport function and(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\trepeat?: [number, number],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function and(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function and(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function and(\n\trules: ((rule: Rule) => any[]) | any[],\n\trepeat?: [number, number],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function and(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function and(rules: ((rule: Rule) => any[]) | any[], onMatch: onMatchCallback, onErr?: onErrorCallback): AndRule\nexport function and(): AndRule {\n\treturn mkComplexRule(arguments, AndRule, [1, 1])\n}\n\n//──── and any ───────────────────────────────────────────────────────────────────────────\nexport function any(desc: ComplexRuleDescriptor): AndRule\nexport function any(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function any(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function any(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function any(rules: ((rule: Rule) => any[]) | any[], onMatch: onMatchCallback, onErr?: onErrorCallback): AndRule\nexport function any(): AndRule {\n\treturn mkComplexRule(arguments, AndRule, [0, -1])\n}\n\n//──── and many ──────────────────────────────────────────────────────────────────────────\nexport function many(desc: ComplexRuleDescriptor): AndRule\nexport function many(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function many(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function many(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function many(rules: ((rule: Rule) => any[]) | any[], onMatch: onMatchCallback, onErr?: onErrorCallback): AndRule\nexport function many(): AndRule {\n\treturn mkComplexRule(arguments, AndRule, [1, -1])\n}\n\n//──── and option ────────────────────────────────────────────────────────────────────────\nexport function option(desc: ComplexRuleDescriptor): AndRule\nexport function option(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function option(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function option(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function option(\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): AndRule\nexport function option(): AndRule {\n\treturn mkComplexRule(arguments, AndRule, [0, 1])\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                      or rule api                                     *\n *                                                                                      */\n//========================================================================================\n\n//──── or ────────────────────────────────────────────────────────────────────────────────\nexport function or(desc: ComplexRuleDescriptor): OrRule\nexport function or(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\trepeat?: [number, number],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function or(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function or(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function or(\n\trules: ((rule: Rule) => any[]) | any[],\n\trepeat?: [number, number],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function or(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function or(rules: ((rule: Rule) => any[]) | any[], onMatch: onMatchCallback, onErr?: onErrorCallback): OrRule\nexport function or(): OrRule {\n\treturn mkComplexRule(arguments, OrRule, [1, 1])\n}\n\n//──── or any ────────────────────────────────────────────────────────────────────────────\nexport function anyOne(desc: ComplexRuleDescriptor): OrRule\nexport function anyOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function anyOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function anyOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function anyOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function anyOne(): OrRule {\n\treturn mkComplexRule(arguments, OrRule, [0, -1])\n}\n\n//──── or many ───────────────────────────────────────────────────────────────────────────\nexport function manyOne(desc: ComplexRuleDescriptor): OrRule\nexport function manyOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function manyOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function manyOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function manyOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function manyOne(): OrRule {\n\treturn mkComplexRule(arguments, OrRule, [1, -1])\n}\n\n//──── or option ─────────────────────────────────────────────────────────────────────────\nexport function optionOne(desc: ComplexRuleDescriptor): OrRule\nexport function optionOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function optionOne(\n\tname: string,\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function optionOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tcapturable?: boolean,\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function optionOne(\n\trules: ((rule: Rule) => any[]) | any[],\n\tonMatch?: onMatchCallback,\n\tonErr?: onErrorCallback\n): OrRule\nexport function optionOne(): OrRule {\n\treturn mkComplexRule(arguments, OrRule, [0, 1])\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                  Match Rule Builder                                  *\n *                                                                                      */\n//========================================================================================\n\nexport type MatchRuleDescriptor = {\n\tname?: string\n\tpattern: RegExp | number | string | any[]\n\tpick?: boolean | number\n\tstartCodes?: number | string | any[]\n\tignoreCase?: boolean\n} & RuleOptions\n\nfunction mkMatch(args: IArguments | any[], defaultMatchCallback?: onMatchCallback): MatchRule {\n\tlet name: string,\n\t\tpattern: number | string | any[],\n\t\tregexp: RegExp,\n\t\tpick: boolean | number = 0,\n\t\tstartCodes: number | string | any[],\n\t\tignoreCase: boolean = false,\n\t\toptions: RuleOptions\n\tif (isObj(args[0])) {\n\t\tconst desc = args[0] as MatchRuleDescriptor,\n\t\t\tp = desc.pattern\n\t\tif (isReg(p)) {\n\t\t\tregexp = p as RegExp\n\t\t\tpick = desc.pick\n\t\t\tstartCodes = desc.startCodes\n\t\t} else if (isStrOrCodes(p)) {\n\t\t\tpattern = p as number | string | any[]\n\t\t\tignoreCase = desc.ignoreCase\n\t\t}\n\t\tname = desc.name\n\t\toptions = desc\n\t} else {\n\t\tvar i = 1\n\t\tif (isStr(args[0]) && isMatchPattern(args[1])) {\n\t\t\tname = args[0]\n\t\t\tisReg(args[1]) ? (regexp = args[1]) : (pattern = args[1])\n\t\t\ti = 2\n\t\t} else if (isMatchPattern(args[0])) {\n\t\t\tisReg(args[0]) ? (regexp = args[0]) : (pattern = args[0])\n\t\t}\n\n\t\tif (regexp) {\n\t\t\tif (isBool(args[i]) || isInt(args[i])) pick = args[i++]\n\t\t\tif (isStrOrCodes(args[i])) startCodes = args[i++]\n\t\t} else {\n\t\t\tif (isBool(args[i])) ignoreCase = args[i++]\n\t\t}\n\t\toptions = parseRuleOptions(args, i)\n\t}\n\n\t!options.match && (options.match = defaultMatchCallback)\n\n\treturn regexp\n\t\t? new RegMatchRule(name, regexp, options.match === discardMatch ? false : pick, startCodes, options)\n\t\t: pattern\n\t\t? strMatch(name, pattern, ignoreCase, options)\n\t\t: assert('invalid match rule {j}', args)\n}\n\nfunction isStrOrCodes(pattern): boolean {\n\treturn isStr(pattern) || isNum(pattern) || isArray(pattern)\n}\n\nfunction isMatchPattern(pattern): boolean {\n\treturn isReg(pattern) || isStrOrCodes(pattern)\n}\n\nfunction strMatch(name: string, pattern: string | number | any[], ignoreCase: boolean, options: RuleOptions) {\n\tconst C = isStr(pattern) && (pattern as string).length > 1 ? StringMatchRule : CharMatchRule\n\treturn new C(name, pattern, ignoreCase, options)\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                 complex rule builder                                 *\n *                                                                                      */\n//========================================================================================\n\nexport type ComplexRuleDescriptor = {\n\tname?: string\n\trules: ((rule: Rule) => any[]) | any[]\n\trepeat?: [number, number]\n\tcapturable?: boolean\n\tonMatch?: onMatchCallback\n\tonErr?: onErrorCallback\n} & RuleOptions\n\nfunction mkComplexRule<T extends AndRule | OrRule>(\n\targs: IArguments,\n\tRule: typeof AndRule | typeof OrRule,\n\tdefaultRepeat: [number, number]\n): T {\n\tlet name: string,\n\t\tbuilder: ComplexRuleBuilder,\n\t\trules: ((rule: Rule) => any[]) | any[],\n\t\trepeat: [number, number],\n\t\toptions: RuleOptions\n\tif (isObj(args[0])) {\n\t\tconst desc = args[0] as ComplexRuleDescriptor,\n\t\t\tr = desc.rules\n\t\tif (isArray(r) || isFn(r)) rules = r\n\t\trepeat = desc.repeat\n\t\tname = desc.name\n\t\toptions = desc\n\t} else {\n\t\tvar i = 0\n\t\tif (isStr(args[i])) name = args[i++]\n\t\tif (isArray(args[i]) || isFn(args[i])) rules = args[i++]\n\t\tif (isArray(args[i])) repeat = args[i++]\n\t\toptions = parseRuleOptions(args, i)\n\t}\n\tif (!repeat) repeat = defaultRepeat\n\tif (rules) {\n\t\tbuilder = rulesBuilder(rules)\n\t\treturn new Rule(name, repeat, builder, options) as T\n\t}\n}\n\nfunction rulesBuilder(rules: ((rule: Rule) => any[]) | any[]): (rule: Rule) => Rule[] {\n\treturn function(_rule) {\n\t\treturn mapArray(isFn(rules) ? (rules as ((rule: Rule) => any[]))(_rule) : rules, (r, i) => {\n\t\t\tif (!r) return SKIP\n\t\t\tlet rule: Rule = r.$rule ? r : mkMatch(isArray(r) ? r : [r], discardMatch)\n\t\t\tassert.is(rule, '{}: Invalid Rule Configuration on index {d}: {j}', _rule, i, r)\n\t\t\treturn rule\n\t\t})\n\t}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                         tools                                        *\n *                                                                                      */\n//========================================================================================\n\nfunction parseRuleOptions(args: IArguments | any[], i: number) {\n\tconst options: RuleOptions = {}\n\tif (isBool(args[i])) options.capturable = args[i++]\n\toptions.match = args[i++]\n\toptions.err = args[i]\n\treturn options\n}\n","/**\n * @module observer\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Dec 26 2018 13:59:10 GMT+0800 (China Standard Time)\n * @modified Mon Mar 04 2019 09:28:53 GMT+0800 (China Standard Time)\n */\n\nimport {\n\tmakeMap,\n\tmapArray,\n\tapplyScope,\n\tdefPropValue,\n\tcreate,\n\tisArray,\n\tFnList,\n\tList,\n\tparsePath,\n\tformatPath,\n\tisObj,\n\tisPrimitive,\n\tnextTick,\n\tmap,\n\tisNil\n} from '../utility'\nimport { PROTOTYPE } from '../utility/consts'\nimport { assert } from '../utility/assert'\n\nexport type ObserverTarget = any[] | {}\n\nexport type ObserveListener = (path: string[], value: any, original: any, observer: Observer) => void\n\nfunction checkObserverTarget(obj: any) {\n\treturn (obj && isArray(obj)) || isObj(obj)\n}\nconst dirtyQueue: Subject[] = [],\n\tnotifyQueue: Subject[] = []\n\nconst SUBJECT_DIRTY_FLAG = 0x1,\n\tSUBJECT_ENABLED_FLAG = 0x2,\n\tSUBJECT_LISTEN_FLAG = 0x4,\n\tSUBJECT_SUB_FLAG = 0x8\n\nlet listenerIdGen = 1\n\n/**\n * @ignore\n */\nclass Subject {\n\t// parent subject\n\treadonly __parent: Subject\n\n\t// own observer\n\treadonly __owner: Observer\n\n\t// property\n\treadonly __prop: string\n\n\t// binded observer\n\t__observer: Observer\n\n\t// property path\n\t__path: string[]\n\n\t// listeners\n\t__listeners: FnList<ObserveListener>\n\n\t__dirty: [any, any]\n\n\t__notifyDirty: [any, any]\n\n\t// sub-subjects\n\t__subs: Subject[]\n\n\t// cache of sub-subjects\n\t__subCache: { [key: string]: Subject }\n\n\t__flags: number\n\n\t/**\n\t *\n\t * @param owner\n\t * @param prop\n\t * @param binded\n\t * @param parent\n\t */\n\tconstructor(owner: Observer, prop: string, parent?: Subject) {\n\t\tthis.__owner = owner\n\t\tthis.__prop = prop\n\t\tthis.__parent = parent\n\t\tthis.__flags = 0\n\t}\n\n\tprivate __initSubObserver(): Observer {\n\t\tconst { __observer: observer, __prop: prop } = this\n\t\tif (observer) {\n\t\t\tconst target = observer.target[prop]\n\n\t\t\tif (checkObserverTarget(target)) {\n\t\t\t\tvar subObserver: Observer = target[OBSERVER_KEY]\n\t\t\t\tif (!subObserver || !(subObserver.target === target || subObserver.proxy === target)) {\n\t\t\t\t\tsubObserver = observer.observerOf(target)\n\t\t\t\t}\n\t\t\t\tif (subObserver.proxy !== target) {\n\t\t\t\t\tobserver.target[prop] = subObserver.proxy\n\t\t\t\t}\n\t\t\t\treturn subObserver\n\t\t\t} else if (!isNil(target)) {\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get sub-subject from cache\n\t * @param prop property\n\t */\n\t__getSub(prop: string): Subject {\n\t\tconst { __subCache: subCache } = this\n\t\treturn subCache && subCache[prop]\n\t}\n\n\tprivate __badArrayPath(i: number, msg?: string) {\n\t\tconst path = this.__getPath()\n\t\tconsole.error(\n\t\t\t`bad path[{}]: not support {} on Array{}{}.`,\n\t\t\tformatPath(path),\n\t\t\tformatPath(path.slice(-i)),\n\t\t\tpath.length > i ? `[${formatPath(path.slice(0, -i))}]` : '',\n\t\t\tmsg || '',\n\t\t\tthis.__owner.target\n\t\t)\n\t}\n\n\t/**\n\t * bind observer\n\t * @param observer new observer\n\t * @return binded observer\n\t */\n\t__bind(observer?: Observer) {\n\t\tconst { __observer: org } = this\n\t\tif (org !== observer) {\n\t\t\torg && org.__unwatch(this) // unbind old observer\n\t\t\tif (observer) {\n\t\t\t\tif (observer.isArray && !ARRAY_EVENTS[this.__prop]) {\n\t\t\t\t\tthis.__badArrayPath(1, ', change to \"change\" or \"length\"')\n\t\t\t\t\tobserver = undefined\n\t\t\t\t} else {\n\t\t\t\t\tobserver.__watch(this)\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.__observer = observer\n\t\t\treturn observer\n\t\t}\n\t}\n\n\t/**\n\t * create or get sub-subject on cache\n\t * @param subProp\tproperty\n\t * @param binded\tbinded observer\n\t */\n\t__addSub(subProp: string): Subject {\n\t\t// get or init cache and subs\n\t\tconst subCache = this.__subCache || ((this.__subs = []), (this.__subCache = create(null))),\n\t\t\t// get or create sub-subject on cache\n\t\t\tsub = subCache[subProp] || (subCache[subProp] = new Subject(this.__owner, subProp, this))\n\n\t\tif (!(sub.__flags & SUBJECT_ENABLED_FLAG)) {\n\t\t\tconst { __subs: subs } = this\n\t\t\t// attach sub-subject\n\t\t\tsub.__flags |= SUBJECT_ENABLED_FLAG\n\t\t\tsubs.push(sub)\n\n\t\t\tconst { __observer: observer } = this\n\t\t\tif (observer) {\n\t\t\t\tif (observer.isArray) {\n\t\t\t\t\tsub.__badArrayPath(2)\n\t\t\t\t} else {\n\t\t\t\t\tsub.__bind(subs[0] ? subs[0].__observer : this.__initSubObserver())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.__flags |= SUBJECT_SUB_FLAG | SUBJECT_ENABLED_FLAG\n\n\t\treturn sub\n\t}\n\n\t/**\n\t * add listener\n\t */\n\t__listen(path: string[], listener: ObserveListener, scope: any) {\n\t\tlet { __listeners: listeners } = this\n\t\tif (!listeners) {\n\t\t\tthis.__listeners = listeners = new FnList<ObserveListener>()\n\t\t\tthis.__path = path\n\t\t}\n\t\tconst id = listeners.add(listener, scope, listenerIdGen++)\n\t\tid && (this.__flags |= SUBJECT_LISTEN_FLAG | SUBJECT_ENABLED_FLAG)\n\t\treturn id\n\t}\n\n\t/**\n\t * remove sub-subject\n\t * @param subject subject\n\t */\n\t__removeSub(subject: Subject) {\n\t\tconst { __subs: subs } = this\n\t\tconst l = subs.length\n\t\tlet i = l\n\t\twhile (i--) {\n\t\t\tif (subject === subs[i]) {\n\t\t\t\tsubs.splice(i, 1)\n\t\t\t\tl === 1 && (this.__flags &= ~SUBJECT_SUB_FLAG)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tassert('un-attached subject')\n\t}\n\n\t/**\n\t * check subject state\n\t */\n\t____unlisten(listeners: FnList<ObserveListener>) {\n\t\tif (!listeners.size()) {\n\t\t\tvar subject: Subject = this,\n\t\t\t\tparent: Subject\n\t\t\tsubject.__flags &= ~SUBJECT_LISTEN_FLAG\n\t\t\twhile (\n\t\t\t\t(subject.__flags & (SUBJECT_SUB_FLAG | SUBJECT_LISTEN_FLAG | SUBJECT_ENABLED_FLAG)) ===\n\t\t\t\tSUBJECT_ENABLED_FLAG\n\t\t\t) {\n\t\t\t\tsubject.__bind()\n\t\t\t\tsubject.__flags = 0\n\t\t\t\tif (!(parent = subject.__parent)) break\n\t\t\t\tparent.__removeSub(subject)\n\t\t\t\tsubject = parent\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * remove listener\n\t */\n\t__unlisten(listener: ObserveListener, scope: any) {\n\t\tconst { __listeners: listeners } = this\n\t\tif (listeners) {\n\t\t\tlisteners.remove(listener, scope)\n\t\t\tthis.____unlisten(listeners)\n\t\t}\n\t}\n\n\t/**\n\t * remove listener by id\n\t */\n\t__unlistenId(id: string) {\n\t\tconst { __listeners: listeners } = this\n\t\tif (listeners) {\n\t\t\tlisteners.removeId(id)\n\t\t\tthis.____unlisten(listeners)\n\t\t}\n\t}\n\n\t__collect(dirty: [any, any]) {\n\t\tconst { __flags: flags } = this\n\n\t\tif (flags & SUBJECT_LISTEN_FLAG) {\n\t\t\t!this.__notifyDirty && notifyQueue.push(this)\n\t\t\tthis.__notifyDirty = dirty\n\t\t}\n\n\t\tif (flags & SUBJECT_SUB_FLAG) {\n\t\t\tconst { __subs: subs } = this\n\t\t\tconst l = subs.length,\n\t\t\t\tsubObserver: Observer = this.__initSubObserver()\n\n\t\t\tsubObserver && (dirty[0] = subObserver.proxy)\n\n\t\t\tfor (var i = 0; i < l; i++) {\n\t\t\t\tsubs[i].__collectDep(subObserver, dirty[0])\n\t\t\t}\n\t\t}\n\t}\n\n\t__collectDep(observer: Observer, value: any) {\n\t\tconst { __observer: org } = this\n\t\tif (org !== observer) {\n\t\t\tconst { __prop: prop } = this\n\t\t\tvar { __dirty: dirty } = this\n\n\t\t\tthis.__bind(observer)\n\n\t\t\tif (dirty) {\n\t\t\t\tthis.__dirty = null\n\t\t\t} else {\n\t\t\t\tdirty = this.__notifyDirty || [, org && org.__value(prop)]\n\t\t\t}\n\t\t\tdirty[0] = observer ? observer.__value(prop) : isNil(value) ? undefined : value[prop]\n\t\t\tthis.__collect(dirty)\n\t\t}\n\t}\n\n\t/**\n\t * notify change\n\t * @param value\n\t * @param original\n\t */\n\t__notify(value: any, original: any) {\n\t\tconst { __dirty: dirty } = this\n\t\tif (dirty) {\n\t\t\tdirty[0] = value\n\t\t} else {\n\t\t\tthis.__dirty = [value, original]\n\t\t\tconst l = dirtyQueue.length\n\t\t\tdirtyQueue[l] = this\n\t\t\t!l && nextTick(notify)\n\t\t}\n\t}\n\t__getPath() {\n\t\tlet path: string[] = this.__path\n\t\tif (!path) {\n\t\t\tconst { __parent: parent, __prop: prop } = this\n\t\t\tthis.__path = path = parent ? parent.__getPath().concat(prop) : [prop]\n\t\t}\n\t\treturn path\n\t}\n}\n\nfunction notify() {\n\t//#if _DEBUG\n\tlet start = Date.now()\n\t//#endif\n\n\t// collect dirty subjects\n\tlet subject: Subject,\n\t\tl = dirtyQueue.length,\n\t\ti = 0,\n\t\tdirty: [any, any]\n\tfor (; i < l; i++) {\n\t\tsubject = dirtyQueue[i]\n\t\tif ((dirty = subject.__dirty)) {\n\t\t\tsubject.__collect(dirty)\n\t\t\tsubject.__dirty = null\n\t\t}\n\t}\n\n\t//#if _DEBUG\n\tconsole.log(`collect observed subjects: x${notifyQueue.length} use ${Date.now() - start}ms`)\n\tlet changed = 0,\n\t\tlistens = 0\n\tstart = Date.now()\n\t//#endif\n\n\t// notify subject listeners\n\tlet owner: Observer, path: string[], value: any, original: any\n\tl = notifyQueue.length\n\ti = 0\n\tfor (; i < l; i++) {\n\t\tsubject = notifyQueue[i]\n\t\tdirty = subject.__notifyDirty\n\t\tvalue = dirty[0]\n\t\toriginal = dirty[1]\n\t\tsubject.__notifyDirty = null\n\t\tif (value !== original || !isPrimitive(value)) {\n\t\t\towner = subject.__owner\n\t\t\tpath = subject.__path\n\t\t\tsubject.__listeners.each((fn, scope) => {\n\t\t\t\tscope ? fn.call(scope, path, value, original, owner) : fn(path, value, original, owner)\n\t\t\t\t//#if _DEBUG\n\t\t\t\tlistens++\n\t\t\t\t//#endif\n\t\t\t})\n\t\t\t//#if _DEBUG\n\t\t\tchanged++\n\t\t\t//#endif\n\t\t}\n\t}\n\t//#if _DEBUG\n\tconsole.log(`notify changed subjects: x${changed}/${l}, listeners: x${listens} use ${Date.now() - start}ms`)\n\t//#endif\n}\n\nexport const OBSERVER_KEY = '__observer__'\nexport class Observer {\n\t/**\n\t * original object\n\t */\n\treadonly target: ObserverTarget\n\n\t/**\n\t * proxy object\n\t */\n\tproxy: ObserverTarget\n\n\t/**\n\t * is array\n\t */\n\treadonly isArray: boolean\n\n\t/**\n\t * subjects\n\t * \t- key: property of original object\n\t * \t- value: subject\n\t */\n\t__subjects: { [key: string]: Subject }\n\n\t/**\n\t * watched subjects\n\t * \t- key: property of original object\n\t * \t- value: subjects\n\t */\n\treadonly __watchs: { [key: string]: List<Subject> }\n\n\t/**\n\t * create Observer\n\t * @param target original object\n\t */\n\tconstructor(target: ObserverTarget) {\n\t\tthis.__watchs = create(null)\n\n\t\tthis.target = target\n\t\tthis.proxy = target\n\n\t\tif ((this.isArray = isArray(target))) applyArrayHooks(target as any[])\n\n\t\tassert.is(isObj(target), `the observer target can only be an object or an array`)\n\n\t\t// bind observer key on original object\n\t\tdefPropValue(target, OBSERVER_KEY, this, false, false, false)\n\t}\n\n\t/**\n\t * observe property\n\t * @param propPath \tproperty path of original object, parse string path by {@link parsePath}\n\t * @param listener\tcallback\n\t * @param scope\t\tscope of callback\n\t */\n\tobserve(propPath: string | string[], listener: ObserveListener, scope?: any) {\n\t\tconst path: string[] = parsePath(propPath),\n\t\t\tsubjects = this.__subjects || (this.__subjects = create(null)),\n\t\t\tprop0 = path[0]\n\n\t\tlet subject = subjects[prop0] || (subjects[prop0] = new Subject(this, prop0)),\n\t\t\ti = 1,\n\t\t\tl = path.length\n\n\t\tsubject.__bind(this)\n\n\t\tfor (; i < l; i++) {\n\t\t\tsubject = subject.__addSub(path[i])\n\t\t}\n\n\t\treturn subject.__listen(path, listener, scope)\n\t}\n\n\t/**\n\t * @param propPath\tproperty path on object\n\t * @param listener\tlistener\n\t * @param scope\t\tscope of listener\n\t * @return >= 0: listener count on the property path of object\n\t * \t\t\t -1: no listener\n\t */\n\tunobserve(propPath: string | string[], listener: ObserveListener, scope?: any) {\n\t\tconst subject = this.__getSubject(parsePath(propPath))\n\t\tsubject && subject.__unlisten(listener, scope)\n\t}\n\n\tunobserveId(propPath: string | string[], id: string) {\n\t\tconst subject = this.__getSubject(parsePath(propPath))\n\t\tsubject && subject.__unlistenId(id)\n\t}\n\n\t/**\n\t *\n\t * @param path\n\t */\n\tprivate __getSubject(path: string[]) {\n\t\tconst { __subjects: subjects } = this\n\t\tlet subject: Subject\n\t\tif (subjects && (subject = subjects[path[0]])) {\n\t\t\tfor (var i = 1, l = path.length; i < l; i++) {\n\t\t\t\tif (!(subject = subject.__getSub(path[i]))) break\n\t\t\t}\n\t\t}\n\t\treturn subject\n\t}\n\n\t/**\n\t * update property value and notify changes\n\t * @param prop\t\tproperty\n\t * @param value\t\tnew value\n\t * @param original\toriginal value\n\t */\n\tupdate(prop: string, value: any, original: any) {\n\t\tconst subjects = this.__watchs[prop]\n\t\tif (subjects && subjects.size()) {\n\t\t\tsubjects.each(subject => subject.__notify(value, original))\n\t\t}\n\t}\n\n\t/**\n\t * get or create observer\n\t * @abstract\n\t * @protected\n\t */\n\tobserverOf(target: any): Observer {\n\t\treturn assert('abstruct')\n\t}\n\n\t/**\n\t * watch subject\n\t * @private\n\t * @param subject\n\t */\n\t__watch(subject: Subject) {\n\t\tconst { __watchs: watchs } = this\n\t\tconst { __prop: prop } = subject\n\t\tconst subjects = watchs[prop] || (watchs[prop] = new List<Subject>())\n\t\tsubjects.add(subject)\n\t}\n\n\t/**\n\t * remove watched subject\n\t * @private\n\t * @param subject\n\t */\n\t__unwatch(subject: Subject) {\n\t\tthis.__watchs[subject.__prop].remove(subject)\n\t}\n\n\t/**\n\t * get property value\n\t * @private\n\t * @param prop property\n\t */\n\t__value(prop: string) {\n\t\tconst { target } = this\n\t\treturn this.isArray && prop === ARRAY_CHANGE_PROP ? target : target[prop]\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\ttoJSON() {}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                      Array Hooks                                     *\n *                                                                                      */\n//========================================================================================\n\ntype ArrayHook = [string, (...args: any[]) => any]\nconst ARRAY_CHANGE_PROP = 'change',\n\tARRAY_LENGTH_PROP = 'length',\n\tARRAY_EVENTS = makeMap([ARRAY_CHANGE_PROP, ARRAY_LENGTH_PROP]),\n\tarrayHooks = mapArray(\n\t\t'fill,pop,push,reverse,shift,sort,splice,unshift'.split(','),\n\t\t(method: string): ArrayHook => {\n\t\t\tconst fn = Array[PROTOTYPE][method]\n\t\t\treturn [\n\t\t\t\tmethod,\n\t\t\t\tfunction() {\n\t\t\t\t\tconst array: any[] = this,\n\t\t\t\t\t\tlen = array.length,\n\t\t\t\t\t\trs: any = applyScope(fn, array, arguments),\n\t\t\t\t\t\tnewlen = array.length,\n\t\t\t\t\t\tobserver: Observer = array[OBSERVER_KEY]\n\t\t\t\t\tobserver.update(ARRAY_CHANGE_PROP, array, array)\n\t\t\t\t\tif (len !== newlen) observer.update(ARRAY_LENGTH_PROP, newlen, len)\n\t\t\t\t\treturn rs\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t)\n\n/**\n * apply observer hooks on Array\n * @param array\n */\nfunction applyArrayHooks(array: any[]) {\n\tlet hook: ArrayHook,\n\t\ti = arrayHooks.length\n\twhile (i--) {\n\t\thook = arrayHooks[i]\n\t\tdefPropValue(array, hook[0], hook[1], false, false, false)\n\t}\n}\n\n//========================================================================================\n/*                                                                                      *\n *                                     test subject                                     *\n *                                                                                      */\n//========================================================================================\n/*\nconst objIdGen: { [key: string]: number } = {}\nfunction objId(obj: any, str: string) {\n\treturn obj.id || (obj.id = str + '-' + (objIdGen[str] ? ++objIdGen[str] : (objIdGen[str] = 1)))\n}\nfunction subjectState(subject: Subject) {\n\tconst path = []\n\tlet p = subject\n\twhile (p) {\n\t\tpath.unshift(p.__prop)\n\t\tp = p.__parent\n\t}\n\tconst subs = subject.__subs && subject.__subs.length\n\tconst listeners = subject.__listeners && subject.__listeners.size()\n\n\tassert.is(!!(subs || listeners) === !!(subject.__flags & SUBJECT_ENABLED_FLAG))\n\tassert.is(!!subs === !!(subject.__flags & SUBJECT_SUB_FLAG))\n\tassert.is(!!listeners === !!(subject.__flags & SUBJECT_LISTEN_FLAG))\n\tassert.is(!subject.__observer || subject.__flags & SUBJECT_ENABLED_FLAG)\n\n\treturn {\n\t\tid: objId(subject, 'subject'),\n\t\tpath: formatPath(path),\n\t\tobj: JSON.stringify(subject.__owner.target),\n\t\tenabled: !!(subs || listeners),\n\t\tlisteners: listeners,\n\t\twatched: subject.__observer && {\n\t\t\tid: objId(subject.__observer, 'observer'),\n\t\t\tobj: JSON.stringify(subject.__observer.target),\n\t\t\twatchs: watchs(subject.__observer)\n\t\t},\n\t\tsubCache: subject.__subCache && map(subject.__subCache, subjectState),\n\t\tsubs: subs && map(subject.__subs, sub => objId(sub, 'subject'))\n\t}\n}\nfunction observerState(observer: Observer) {\n\treturn {\n\t\tid: objId(observer, 'observer'),\n\t\tobj: JSON.stringify(observer.target),\n\t\twatchs: watchs(observer),\n\t\tsubjects: map(observer.__subjects, subj => subjectState(subj))\n\t}\n}\nfunction watchs(observer: Observer) {\n\treturn map(observer.__watchs, w =>\n\t\tw\n\t\t\t.toArray()\n\t\t\t.map(s => objId(s, 'subject'))\n\t\t\t.join(', ')\n\t)\n}\n\nfunction logState(obs: Observer) {\n\tconst state = observerState(obs)\n\tconsole.log(JSON.stringify(state, null, '  '))\n}\nlet obs = new Observer({ a: { b: { c: 1 } } })\nlet id1 = obs.observe('a.b.c', () => {})\nlet id2 = obs.observe('a.b.d', () => {})\n//logState(obs)\nobs.unobserveId('a.b.c', id1)\nobs.unobserveId('a.b.c', id1)\n//logState(obs)\nobs.unobserveId('a.b.d', id2)\n\n//logState(obs)\nid1 = obs.observe('a.b.c', function() {\n\tconsole.log('a.b.c', arguments)\n})\nid2 = obs.observe('a.b.d', function() {\n\tconsole.log('a.b.d', arguments)\n})\n//logState(obs)\n\nconst ov = obs.target['a']\nobs.target['a'] = { b: { d: 2 } }\nobs.update('a', obs.target['a'], ov)\n\nsetTimeout(function() {\n\tlogState(obs)\n}, 1000)\n\nlogState(obs)\n */\n","/**\n * property utilities\n * @module utility\n * @author Tao Zeng <tao.zeng.zt@qq.com>\n * @created Wed Jul 25 2018 15:24:47 GMT+0800 (China Standard Time)\n * @modified Thu Jan 31 2019 10:15:09 GMT+0800 (China Standard Time)\n */\n\n//#if _TARGET === 'es3'\n\nimport { hasOwnProp } from './polyfill'\nexport { hasOwnProp, propDescriptor, propAccessor, defProp, defPropValue } from './polyfill'\n\n/*#else\n\nimport { hasOwnProp } from './hasOwnProp'\nexport { hasOwnProp } from './hasOwnProp'\nexport { propDescriptor, propAccessor, defProp, defPropValue } from './main'\n\n//#endif */\n\n/**\n * get owner property value\n * @param prop \t\t\tproperty name\n * @param defaultVal \tdefault value\n */\nexport function getOwnProp(obj: any, prop: string, defaultVal?: any): any {\n\treturn hasOwnProp(obj, prop) ? obj[prop] : defaultVal\n}\n"],"names":["CONSTRUCTOR","PROTOTYPE","PROTO","TYPE_BOOL","TYPE_FN","TYPE_NUM","TYPE_STRING","GLOBAL","window","global","self","EMPTY_FN","getConstructor","o","C","Object","eq","o1","o2","isNull","isUndef","undefined","isNil","isBool","mkIsPrimitive","isNum","isStr","isFn","isInt","isPrimitive","type","isBoolean","mkIs","Boolean","isNumber","Number","isString","String","isDate","Date","isReg","RegExp","isArray","Array","isTypedArray","ArrayBuffer","isView","isArrayLike","NodeList","HTMLCollection","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","len","length","isObj","Type","blankStrReg","isBlank","test","createFn","body","args","name","Function","join","applyScope","concat","applyBuilder","maxArgs","scope","offset","cases","i","slice","applyNoScope","applyScopeN","applyNoScopeN","apply","fn","applyN","_bind","varGenReg","funcProto","bind","arguments","argLen","bindPolyfill","this","bindArgs","argOffset","params","stickyReg","sticky","unicodeReg","unicode","REG_ESCAPE","reEscape","str","replace","__hasOwn","hasOwnProp","obj","prop","call","__getProto","getPrototypeOf","____setProto","setPrototypeOf","prototypeOf","protoProp","__proto__","protoOf","__setProto","proto","setProto","p","__hasOwnProp","__defProp","defineProperty","__defineGetter__","__defineSetter__","propDescriptor","val","get","set","value","s","e","propAccessor","desc","TypeError","defProp","defPropValue","configurable","writable","enumerable","__","doCreate","props","k","create","Control","__desc","toString","STOP","eachProps","callback","own","eachObj","eachArray","array","l","SKIP","doMapObj","each","copy","v","doMapArray","j","data","index","mapArray","parseCallback","idx","doIdxOfObj","r","doIdxOfArray","idxOfArray","doReduceObj","accumulator","rs","doReduceArray","defaultObjKeyHandler","defaultObjValueHandler","arr2obj","doArr2Obj","makeMap","split","makeArray","pathCache","pathReg","parsePath","propPath","cacheable","path","match","cidx","exec","lastIndex","SyntaxError","charAt","Error","formatPath","formatPathHandler","charCode","charCodeAt","char","code","fromCharCode","cutStr","start","end","substring","cutLStr","substr","TRIM_REG","FIRST_LOWER_LETTER_REG","FIRST_UPPER_LETTER_REG","upper","toUpperCase","lower","toLowerCase","upperFirst","STR_ESCAPE_MAP","STR_ESCAPE","escapeStr","pad","chr","leftAlign","__pad","shorten","suffix","thousandSeparate","mkSeparator","binarySeparate","octalSeparate","hexSeparate","group","valReg","reg","numStr","separatorHandler","m","d","PLURAL_REG","pluralHandler","ies","es","ys","SINGULAR_REG","singularHandler","FORMAT_XPREFIX","FORMAT_PLUS","FORMAT_ZERO","FORMAT_SPACE","FORMAT_SEPARATOR","FORMAT_LEFT","FLAG_MAPPING","parseFlags","f","flags","paramPropR","widthR","formatReg","formatters","extendFormatter","fmt","getFormatter","vformat","getParam","defaultGetParam","param","paramProp","width","widx","wprop","fill","precision","pidx","pprop","shortenSuffix","parseParam","parseWidth","w","isFinite","paramIdx","getFormatParam","GET_PARAM_VAR","GET_PROP_VAR","STATE_VAR","createFormatter","getParamCode","getWidthCode","def","strs","formatter","mStart","mEnd","lastIdx","arr","codes","pushStr","append","strFormatter","toStr","numFormatter","parseNum","getPrefix","separator","num","prefix","plen","decimalPrefix","BASE_RADIXS","b","u","x","BASE_PREFIXS","baseFormatter","base","n","__toStr","xprefix","floatFormatter","____toStr","toExponential","toFixed","toPrecision","parseFloat","doAssign","target","overrides","filter","startOffset","endOffset","override","defaultAssignFilter","assignIfFilter","toJSON","JSON","stringify","c","E","g","G","B","O","X","REG_PROPS","deepEq","actual","expected","getTime","eqProps","eqArray","cache","notEqObjKey","eqObj","formatArgHandlers","parseMessage","msg","msgIdx","fs","assert","catchErr","checkErr","expect","err","message","ERROR","throwMsg","mkMsg","objFormatter","extendAssert","condition","dmsg","Err","paramStr","cond","expr","notThrow","BOOLEAN","NUMBER","STRING","FUNCTION","to","expectMsg","not","packTypeExpect","all","typeExpect","prototype","eql","nul","nil","undef","bool","int","primitive","boolean","number","string","date","typedArray","arrayLike","nan","isNaN","finite","blank","less","greater","range","DEFAULT_BINDING","List","binding","__length","__scaning","size","has","node","add","__insert","__tail","addFirst","insertAfter","__getNode","insertBefore","addAll","objs","__insertAll","addFirstAll","insertAfterAll","insertBeforeAll","prev","__siblingObj","next","first","__head","last","cb","__doLazyRemove","toArray","remove","__remove","pop","clean","__lazyRemove","__clean","__initNode","is","siblingIdx","sibling","__doInsert","nodeHead","nodeTail","head","__prev","tail","__doRemove","lazyRemoves","__lazyRemoves","push","DEFAULT_FN_BINDING","DEFAULT_SCOPE_BINDING","FnList","fnBinding","scopeBinding","__nodeMap","__list","parseScope","list","nodeMap","id","removeId","fnId","scopeId","DEFAULT_SCOPE_ID","fnIdGenerator","scopeIdGenerator","ticks","pending","executeTick","flush","MutationObserver","counter","observer","textNode","document","createTextNode","observe","characterData","setTimeout","nextTick","LINE_REG","Source","buff","__lines","__linePos","position","lines","linePos","source","escape","line","toSourceStr","escapeSourceStr","sourceStr","t","eachCharCodes","ignoreCase","eachCharCode","getAnotherCode","mixin","behaviour","Class","MatchError","$ruleErr","capturable","context","rule","pos","startPos","defaultErr","defaultMatch","idGen","Rule","$rule","options","onMatch","onErr","mkErr","error","src","userErr","matched","enter","getStart","stack","startCodes","startCodeTest","startCodeIdx","nextCode","setStartCodes","setCodeIdx","mkExpr","setExpr","EXPECT","getExpr","MatchRule","comsume","advance","CharMatchRule","allows","chars","nextChar","RegMatchRule","regexp","pick","pattern","multiline","_this","stickyMatch","execMatch","spicker","pickNone","pickTestStr","picker","pickAll","mkPicker","StringMatchRule","MatchContext","orgOffset","parent","result","__buff","__offset","__orgOffset","__advanced","__code","__flushCode","__setAdvanced","advanced","notLess","commit","margeState","rollback","checkpoint","resultLen","reset","orgBuff","currPos","resultSize","MAX","ComplexRule","repeat","builder","rMin","rMax","notGreater","rmatch","parse","ctx","unshift","init","rules","names","rnames","EXPECTS","__init","getRules","consume","AndRule","testRule","cp","out","OrRule","starts","rStarts","upErr","discardMatch","mkMatch","defaultMatchCallback","isStrOrCodes","isMatchPattern","parseRuleOptions","strMatch","mkComplexRule","defaultRepeat","_rule","rulesBuilder","dirtyQueue","notifyQueue","listenerIdGen","Subject","owner","__owner","__prop","__parent","__flags","__initSubObserver","__observer","subObserver","OBSERVER_KEY","proxy","observerOf","__getSub","subCache","__subCache","__badArrayPath","__getPath","console","__bind","org","__unwatch","ARRAY_EVENTS","__watch","__addSub","subProp","__subs","sub","subs","SUBJECT_SUB_FLAG","__listen","listener","listeners","__listeners","__path","SUBJECT_LISTEN_FLAG","__removeSub","subject","splice","____unlisten","__unlisten","__unlistenId","__collect","dirty","__notifyDirty","__collectDep","__dirty","__value","__notify","original","notify","Observer","__watchs","hook","arrayHooks","applyArrayHooks","subjects","__subjects","prop0","unobserve","__getSubject","unobserveId","update","watchs","ARRAY_CHANGE_PROP","method","newlen","Cls","defaultVal","_eachArray","_eachObj","doEach","eacharray","eachobj","doMap","doIdxOf","doReduce","handler","doObjKeys","doObjValues"],"mappings":"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"}